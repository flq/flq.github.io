{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","IndexPage","_ref","posts","data","allMarkdownRemark","edges","a","createElement","map","_ref2","node","className","key","fields","slug","to","frontmatter","title","date","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Sidebar","description","react_default","href","gatsby_browser_entry","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","rel","type","sidebar","_2363664672"],"mappings":"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","file":"component---src-pages-index-js-75bd6a3a095a60b8817b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout>\n      {posts.map(({ node }) => (\n        <div className=\"teaser\" key={node.fields.slug}>\n          <h3>\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n          </h3>\n          <span className=\"date\">{node.frontmatter.date}</span>\n          { node.excerpt }\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from \"gatsby\"\n\nconst Sidebar = ({ title, description }) => (\n  <div className=\"sidebar\">\n    <h1>\n      <a className=\"sidebar--sitetitle\" href=\"/\">{title}</a>\n    </h1>\n    <p>{description}</p>\n    <nav>\n      <Link to=\"/tags\">Tags</Link>\n    </nav>\n  </div>\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport './normalize.css'\nimport './skeleton.css'\nimport './syntax.css'\nimport './own.css'\n\nimport Sidebar from './sidebar'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n          ]}\n        >\n          <html lang=\"en\" />\n          <link href=\"//fonts.googleapis.com/css?family=Raleway:400,300,600\" rel=\"stylesheet\" type=\"text/css\"></link>\n        </Helmet>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"two columns right-padded\">\n              <Sidebar\n                title={data.site.siteMetadata.title}\n                description={data.site.siteMetadata.description}\n              />\n            </div>\n            <div className=\"nine columns\">{children}</div>\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}