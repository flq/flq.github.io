{"data":{"markdownRemark":{"html":"<p>In the <a href=\"%7B%25%20post_url%202007-4-25-Trying-to-LINQ-it-all-together-Pt-I%20%25%7D\">last post</a> I said that I thought I'd have a bug in the keyword-based LINQ expression building. Of course, this is bollocks and not of the dog variety.</p>\n<p>In my defense, the documentation I had read was getting it wrong, too, but other Microsoft online documentation gets it right. The following code shows the previous example written with the LINQ keywords.</p>\n<pre><code>Person[] pees = Person.CreatePeopleList();\nvar salarySums =\n  from p in pees group p by p.Posn into groups\n  select new { Position = groups.Key, TotalSalary = (from p in groups select p.Salary).Sum() };\n</code></pre>\n<p>Works like a treat. In retrospect it is quite clear why my attempt wouldn't work. I was starting an iteration on the elements of groups and then doing a select on those. A select, though, acts on every element of the passed in object. Those were, quite rightfully, things of the Person type.</p>","frontmatter":{"date":"April 29, 2007","path":null,"title":"Trying to LINQ it all together (Pt. I) - Epilogue","tags":["software-development","dotnet","libs-and-frameworks"]}}},"pageContext":{"title":"Trying to LINQ it all together (Pt. I) - Epilogue"}}