{"data":{"markdownRemark":{"html":"<p>In the good tradition of this:</p>\n<p><img src=\"/assets/draw-a-head.jpg\" alt=\"ts auto-complete\"></p>\n<p>Let us leave the realm of hello world and jump straight into building an Application.</p>\n<p>The application source code is <a href=\"https://github.com/flq/remorse\">found here</a>, and a usable version is <a href=\"http://realfiction.net/remorse\">here</a>.</p>\n<p>There are three reasons for this application to exist:</p>\n<ul>\n<li>Have a reference react application that is not a <em>To-Do app</em> and hence has a little bit more meat on it</li>\n<li>Have a reference application that can I can port to those UI stacks that interest me, most notably <a href=\"http://elm-lang.org/\">elm</a> </li>\n<li>Learn to <strong>morse</strong> üòÅ</li>\n</ul>\n<p>The application itself helps you to learn morse code. You can see how letters from the english alphabet, important punctuation and numbers look like in morse code, you can train yourself in reading and writing, and you can review your progress over time. Note that training results only end up in the browser's local storage, so if you use this in earnest, keep using the same browser to get training results over time.</p>\n<p>After a quick glance through the code you may notice and say...</p>\n<h4>You introduced me to TypeScript and now you wrote the app in JavaScript, I don't even...</h4>\n<p>My relationship to TypeScript is a bit strange. A rational part of me says that it makes sense to use it, and <a href=\"https://redditblog.com/2017/06/30/why-we-chose-typescript/\">big</a> <a href=\"https://slack.engineering/typescript-at-slack-a81307fa288d\">projects</a> are applying it successfully, but when I code on a <strong>small-ish app</strong>, I seem to be more productive in js when compared to ts. Also, the <strong>create react app</strong> setup introduces a linter that squashes my most common mistakes (mistyped stuff, dangling references after moving files, etc.).</p>\n<p>I reserve my judgment for situations where the project may grow larger, but then I always think that before learning TypeScript, going the full way towards e.g. elm-lang or fable, or reason may make more sense to me. So, forgive my use of js on this small application, as it was more important for me to have a nice redux-based app to work with than proving other things.</p>\n<p>Over the following posts I will be highlighting some aspects of the app, after which the idea will be be to port it to elm-lang and see how that goes. Other porting targets that would be interesting when time permits</p>\n<ul>\n<li><a href=\"https://blog.jetbrains.com/kotlin/2017/04/use-kotlin-with-npm-webpack-and-react/\">kotlin</a></li>\n<li><a href=\"http://fable.io/\">fable</a></li>\n</ul>","fields":{"slug":"/2017/07/26/react-redux-in-a-real-application-prelude"},"frontmatter":{"date":"July 26, 2017","path":null,"title":"react-redux in a real application - prelude","tags":["web","programming","react","javascript"]}}},"pageContext":{"title":"react-redux in a real application - prelude","previous":{"fields":{"slug":"/2017/07/23/create-react-app-with-typescript"},"frontmatter":{"title":"Create react app with typescript","tags":["programming","web","typescript","react"],"date":"2017/07/23"}},"next":{"fields":{"slug":"/2017/07/28/remorse-the-overall-application-structure"},"frontmatter":{"title":"remorse - the overall application structure","tags":["web","programming","react","javascript"],"date":"2017/07/28"}}}}