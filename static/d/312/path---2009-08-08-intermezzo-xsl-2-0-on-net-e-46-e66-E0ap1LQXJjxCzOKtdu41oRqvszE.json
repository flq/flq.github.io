{"data":{"markdownRemark":{"html":"<p>I was up to updating some old stuff that I had previously written in JAVA to the .NET world. It has been a while since I worked with JAVA - I had forgotten that the XSL I once built used <a href=\"http://www.w3.org/TR/xslt20/\">version 2.0</a> features. To my dismay .NET 3.5 allows you to control your coffee machine with a workflow, but once you want to calculate a duration directly in xsl you will quickly notice that .NET's in-built support only covers XSL 1.0 (and XQuery not at all).</p>\n<p><a href=\"http://sourceforge.net/projects/saxon/\">Saxon</a> to the rescue. Probably well known to JAVA people, a .NET port exists and can be used when you find yourself in the same corner as I did. </p>\n<p>Once you download, the funny packaging that includes a <em>netmodule</em> (when have you seen such a thing the last time?) resulted in my <a href=\"http://www.icsharpcode.net/OpenSource/SD/\">SharpDevelop</a> IDE here at home to fail completely at recognizing the API. Visual Studio may do a better job at it.</p>\n<p>Thanks to the docs and this <a href=\"http://onlamp.com/lpt/wlg/9272\">very helpful code example</a> I was able to get my Xsl Transformation up and running.</p>\n<p>You do have to get used to the API, though, which may be pretty modular, but could be a lot better. Here is my current version (takes an input xml, an xsl and an out file as strings):\n<csharp>\nusing Saxon.Api;\n...\nvar p = new Processor();\nvar cmp = p.NewXsltCompiler();\nvar b = p.NewDocumentBuilder();\n// Here comes the uber-fake.\n// What is it good for to set the Base Uri?\nb.BaseUri = new Uri(\"http://\" + inputFile);</p>\n<p>using (var fsXsl = File.OpenRead(xslFoFile))\nusing (var fsXml = File.OpenRead(inputFile))\nusing (var fsOut = File.Create(outFile))\n{\nvar exec = cmp.Compile(fsXsl);\nvar t = exec.Load();\nvar input = b.Build(fsXml);\nt.InitialContextNode = input;\nvar s = new Serializer();\ns.SetOutputStream(fsOut);\nt.Run(s);\n}\n</csharp></p>\n<p>Plenty of code, you may say, but it gets the job done.</p>","frontmatter":{"date":"August 07, 2009","path":null,"title":"Intermezzo: XSL 2.0 on .NET","tags":["software-development","dotnet","tools"]}}},"pageContext":{"title":"Intermezzo: XSL 2.0 on .NET","previous":{"fields":{"slug":"/2009/07/15/feynman-silverlight-a-great-combination"},"frontmatter":{"title":"Feynman & Silverlight: A great combination","tags":["physics","loosely-coupled","dotnet"],"date":"2009/07/15"}},"next":{"fields":{"slug":"/2009/09/21/repository-or-dao-repository"},"frontmatter":{"title":"Repository or DAO?: Repository","tags":["software-development","libs-and-frameworks","csharp","patterns"],"date":"2009/09/21"}}}}