{"data":{"markdownRemark":{"html":"<p>With the advent of react hooks we now have very fast access to CQRS in our UI - dispatch actions (<em>Command</em>) and create a new UI state from the old state and the action (The <em>Query</em> is the reading from the state-part). If you follow e.g. Dan Abramov on twitter you will have seen plenty of examples à la:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducerFunction<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"DoSomething\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>resultFromDoingSomething<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>In the world of Typescript we can provide quite a bit of type safety around dispatching actions and defining reducers for those functions. These libraries are usually served in conjunction with <a href=\"https://redux.js.org/\">redux</a>, but since the dispatch and the reducer function are really the same thing™, such libraries that help defining action creators and reducers should work with useReducer, too, right?</p>\n<p>Personally I know of two libraries that fit the bill, <a href=\"https://www.npmjs.com/package/typesafe-actions\">typesafe-actions</a> and <a href=\"https://www.npmjs.com/package/unionize\">unionize</a>. For the example I'll go with the canonical react app, the counter :)</p>\n<h2>Action creators</h2>\n<p>Let's define the action creators and the state we will be maintaining for <strong>typesafe-actions</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction<span class=\"token punctuation\">,</span> createStandardAction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"typesafe-actions\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  increment<span class=\"token punctuation\">:</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INCR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  decrement<span class=\"token punctuation\">:</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DECR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  reset<span class=\"token punctuation\">:</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RESET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  setValue<span class=\"token punctuation\">:</span> <span class=\"token function\">createStandardAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SET\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> State <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/2019/03/12/using-typed-action-creators-with-reacts-usereducer-hook"},"frontmatter":{"date":"March 12, 2019","path":null,"title":"Using typed action creators with react's useReducer hook","tags":["programming","javascript","react"]}}},"pageContext":{"title":"Using typed action creators with react's useReducer hook","previous":{"fields":{"slug":"/2019/03/11/use-reacts-context-to-display-an-error-message-somewhere-else","published":true},"frontmatter":{"title":"Use react's context to display an error message somewhere else","tags":["programming","javascript","react"],"date":"2019/03/11"}},"next":null}}