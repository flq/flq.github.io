{"data":{"markdownRemark":{"html":"<div class=\"container\">\n<div class=\"row\">\n<div class=\"six columns\" markdown=\"1\">\n<p>Roughly <em>eleven or twelve years</em> ago, when I was young and seemed to have plenty of time for everything, I played with svg.\nBack then, you needed a browser plugin to get it to run. I also thought that Flash was eating svg and svg, even though cool,\nwould not survive.</p>\n<p>Fast-forward <em>eleven or twelve</em> years: while preparing for some MS-certification I wanted to refresh my svg knowledge.\n<strong>Scalable Vector Graphics</strong> are now part of any modern browser. I took the old code and pretty much pasted it in here.\nI only changed the access of svg elements from the global plugin object to <strong>document</strong> and extracted the javascript to be\na normal part of the document. Everything else remains the same.</p>\n</div>\n<div class=\"six columns\">\n<svg width=\"500\" height=\"500\">\n\t<defs>\n\t\t<linearGradient id=\"metallic-2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"\n\t\t\tspreadMethod=\"pad\" gradientUnits=\"objectBoundingBox\">\n\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(254,255,255);\"/>\n\t\t\t<stop offset=\"13%\" style=\"stop-color:rgb(96,96,96);\"/>\n\t\t\t<stop offset=\"26%\" style=\"stop-color:rgb(160,160,160);\"/>\n\t\t\t<stop offset=\"47%\" style=\"stop-color:rgb(225,225,225);\"/>\n\t\t\t<stop offset=\"62%\" style=\"stop-color:rgb(255,255,255);\"/>\n\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(225,225,225);\"/>\n\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(96,96,96);\"/>\n\t\t</linearGradient>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t&lt;linearGradient id=&quot;metallic-case&quot; x1=&quot;0%&quot; y1=&quot;0%&quot; x2=&quot;100%&quot; y2=&quot;0%&quot;\n\t\tspreadMethod=&quot;pad&quot; gradientUnits=&quot;objectBoundingBox&quot;&gt;\n\t\t&lt;stop offset=&quot;0%&quot; style=&quot;stop-color:rgb(254,255,255);&quot;/&gt;\n\t\t&lt;stop offset=&quot;50%&quot; style=&quot;stop-color:rgb(96,96,96);&quot;/&gt;\n\t\t&lt;stop offset=&quot;100%&quot; style=&quot;stop-color:rgb(225,225,225);&quot;/&gt;\n\t&lt;/linearGradient&gt;\n\n\t&lt;radialGradient id=&quot;metallic-case2&quot; cx=&quot;50%&quot; cy=&quot;50%&quot; r=&quot;50%&quot; fx=&quot;50%&quot; fy=&quot;50%&quot;\n\t\tspreadMethod=&quot;pad&quot; gradientUnits=&quot;objectBoundingBox&quot;&gt;\n\t\t&lt;stop offset=&quot;0%&quot; style=&quot;stop-color:rgb(0,0,0);&quot;/&gt;\n\t\t&lt;stop offset=&quot;100%&quot; style=&quot;stop-color:rgb(255,255,255);&quot;/&gt;\n\t&lt;/radialGradient&gt;\n\n\t&lt;symbol id=&quot;case&quot;&gt;\n\t\t&lt;rect x=&quot;40&quot; y=&quot;10&quot; width=&quot;150&quot; height=&quot;300&quot;\n\t\t\t\t\t\t style=&quot;fill:url(#metallic-case)&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;115&quot; cy=&quot;290&quot; rx=&quot;80&quot; ry=&quot;80&quot;\n\t\t\t\t\t\t style=&quot;fill:url(#metallic-case2);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;line x1=&quot;40&quot; y1=&quot;10&quot; x2=&quot;40&quot; y2=&quot;260&quot;\n\t\t\t\t style=&quot;stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;line x1=&quot;190&quot; y1=&quot;10&quot; x2=&quot;190&quot; y2=&quot;260&quot;\n\t\t\t\t style=&quot;stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;polygon points=&quot;40,10 45,10 55,0 40,0&quot;\n\t\t\t\t style=&quot;fill:rgb(120,120,120);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;polygon points=&quot;90,0 140,0 130,10 100,10&quot;\n\t\t\t\t style=&quot;fill:rgb(120,120,120);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;polygon points=&quot;190,0 190,10 185,10 175,0&quot;\n\t\t\t\t style=&quot;fill:rgb(120,120,120);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t&lt;/symbol&gt;\n\n\t&lt;symbol id=&quot;valve&quot;&gt;\n\t\t&lt;polygon points=&quot;10,50 50,50 60,60 0,60&quot;\n\t\t\t\t style=&quot;fill:url(#metallic-case);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;rect x=&quot;25&quot; y=&quot;0&quot; width=&quot;10&quot; height=&quot;50&quot;\n\t\t\t\t\t\t style=&quot;fill:url(#metallic-case);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t&lt;/symbol&gt;\n\n\t&lt;symbol id=&quot;piston&quot;&gt;\n\t\t&lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;150&quot; height=&quot;100&quot;\n\t\t\t style=&quot;fill:url(#metallic-2);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;rect x=&quot;0&quot; y=&quot;20&quot; width=&quot;150&quot; height=&quot;8&quot;\n\t\t\t style=&quot;fill:rgb(160,160,176);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;rect x=&quot;0&quot; y=&quot;40&quot; width=&quot;150&quot; height=&quot;8&quot;\n\t\t\t style=&quot;fill:rgb(160,160,176);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;75&quot; cy=&quot;80&quot; rx=&quot;16&quot; ry=&quot;16&quot;\n\t\t\t style=&quot;fill:rgb(255,255,255);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t&lt;/symbol&gt;\n\n\t&lt;!-- crankshaft: 40 long--&gt;\n\t&lt;symbol id=&quot;crankshaft&quot;&gt;\n\t\t&lt;rect x=&quot;10&quot; y=&quot;30&quot; width=&quot;30&quot; height=&quot;40&quot;\n\t\t\t style=&quot;fill:rgb(240,132,16);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;25&quot; cy=&quot;30&quot; rx=&quot;15&quot; ry=&quot;15&quot;\n\t\t\t style=&quot;fill:rgb(240,132,16);stroke:rgb(0,0,0);stroke-width:2&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;25&quot; cy=&quot;70&quot; rx=&quot;15&quot; ry=&quot;15&quot;\n\t\t\t style=&quot;fill:rgb(240,132,16);stroke:rgb(0,0,0);stroke-width:2&quot;/&gt;\n\t&lt;/symbol&gt;\n\n\t&lt;!-- rod: 155 long--&gt;\n\t&lt;symbol id=&quot;connecting_rod&quot;&gt;\n\t\t&lt;rect x=&quot;10&quot; y=&quot;30&quot; width=&quot;40&quot; height=&quot;155&quot;\n\t\t\t style=&quot;fill:rgb(149,149,149);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;30&quot; cy=&quot;30&quot; rx=&quot;20&quot; ry=&quot;20&quot;\n\t\t\t style=&quot;fill:rgb(149,149,149);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;30&quot; cy=&quot;185&quot; rx=&quot;20&quot; ry=&quot;20&quot;\n\t\t\t style=&quot;fill:rgb(149,149,149);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t\t&lt;ellipse cx=&quot;30&quot; cy=&quot;185&quot; rx=&quot;10&quot; ry=&quot;10&quot;\n\t\t\t style=&quot;fill:rgb(255,255,255);stroke:rgb(0,0,0);stroke-width:1&quot;/&gt;\n\t&lt;/symbol&gt;\n&lt;/defs&gt;\n\n&lt;use xlink:href=&quot;#case&quot; transform=&quot;translate(125 110)&quot;/&gt;\n&lt;use id=&quot;inlet_valve&quot; xlink:href=&quot;#valve&quot;/&gt;\n&lt;use id=&quot;outlet_valve&quot; xlink:href=&quot;#valve&quot; transform=&quot;translate(250 60)&quot;/&gt;\n&lt;use id=&quot;piston_instance&quot; xlink:href=&quot;#piston&quot; /&gt;\n&lt;use id=&quot;rod_instance&quot; xlink:href=&quot;#connecting_rod&quot; /&gt;\t\n&lt;use id=&quot;cshaft_instance&quot; xlink:href=&quot;#crankshaft&quot; /&gt;</code></pre></div>\n</svg>\n<script>\n  let currframe = 0;\n  const rodlength = 155;\n  const shaftradius = 40;\n  setInterval (nextFrame, 40);\n\n  function nextFrame() {\n    // Full rotation every 2 seconds -> 360 degrees / 50 frames = 7.2 degrees\n    currcrankshaftangle = currframe * 7.2;\n    \n    // *** CRANKSHAFT ANIMATION ***\n    crankshaft = document.getElementById(\"cshaft_instance\");\n    crankshaft.setAttribute(\"transform\",`translate(215 340) rotate(${currcrankshaftangle} 25 70)`);\n\n    // *** Connecting Rod ANIMATION ***\n    rod = document.getElementById(\"rod_instance\");\n    rod.setAttribute(\"transform\", \n    `translate(210 ${getYDisplacement(currcrankshaftangle, 185)}) rotate(${getRodAngle(currcrankshaftangle)} 30 30)`);\n    \n    // *** PISTON ANIMATION ***\n    piston = document.getElementById(\"piston_instance\");\n    piston.setAttribute(\"transform\", `translate(165 ${getYDisplacement(currcrankshaftangle, 135)})`);\n\n    // *** VALVE ANIMATION ***\n    in_valve = document.getElementById(\"inlet_valve\");\n    if (currframe >= 0 && currframe <= 5) {\n        // open inlet\n        in_valve.setAttribute(\"transform\", `translate(170 ${60 + currframe*4})`);\n    }\n    else if (currframe >=25 && currframe <= 30) {\n        // inlet closing\n        in_valve.setAttribute(\"transform\", `translate(170 ${80 - (currframe - 25) * 4})`);\n    }\n\n    out_valve = document.getElementById(\"outlet_valve\");\n    if (currframe >= 75 && currframe <= 80) {\n        // open outlet\n        out_valve.setAttribute(\"transform\", `translate(250 ${60 + (currframe - 75) * 4})`);\n    }\n    else if (currframe >=94 && currframe <= 99) {\n        // outlet closing\n        out_valve.setAttribute(\"transform\", `translate(250 ${80 - (currframe - 94) * 4})`);\n    }\n\n    currframe++;\n    if (currframe == 100) currframe = 0;\n  }\n\n  /*** Trigonometry Functions ***/\n  //\n  // Gets the angle of the connecting rod in relation to the position of the crankshaft.\n  //\n  function getRodAngle(shaftangle) {\n    shaftangle_rad = (Math.PI / 180) * shaftangle;\n    with (Math) {\n        anglerod_rad = asin(sin(shaftangle_rad) * (shaftradius / rodlength));\n    }\n    return -1 * anglerod_rad * (180 / Math.PI);\n  }\n\n  // Gets the Vertical displacement related to the rotation of the crankshaft\n  //\n  function getYDisplacement(shaftangle, offset) {\n    shaftangle_rad = (Math.PI / 180) * shaftangle;\n    with (Math) {\n        ydisp = cos(shaftangle_rad) * shaftradius;\n    }\n    return offset + Math.floor(shaftradius - ydisp);\n  }\n</script>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"twelve columns\">\n<p>These days I wouldn't write the animation code as it is (strong coupling of engine logic and state with UI), but it is very charming and comforting that svg is alive and kicking and that 10++-year old code continues to work as intended.</p>\n</div>\n</div>\n</div>","frontmatter":{"date":"June 24, 2017","path":null,"title":"eleven year old svg engine, reposted","tags":["programming","web"]}}},"pageContext":{"title":"eleven year old svg engine, reposted","previous":{"fields":{"slug":"/2017/05/22/each_cons-the-wise-and-tall-of-popular-languages"},"frontmatter":{"title":"each_cons - the wise and tall of popular languages","tags":["programming","ruby","csharp","fsharp","haskell"],"date":"2017/05/22"}},"next":{"fields":{"slug":"/2017/06/25/separating-ms-bots-soul-from-its-body"},"frontmatter":{"title":"Separating MS Bot's soul from its body","tags":["dotnet","programming","software-development","cloud"],"date":"2017/06/25"}}}}