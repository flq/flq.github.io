{"data":{"markdownRemark":{"html":"<p>Even though there is <a href=\"https://medium.com/@amr.farid140/awesome-typescript-azure-functions-part-1-project-setup-1f5950e7a704\">some prior art to this</a>, I wanted to document my own findings in the process somewhere. The next commands assume a powershell cli.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ts-func-demo<span class=\"token punctuation\">;</span> <span class=\"token function\">cd</span> ts-func-demo\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> func\nnpx func init</code></pre></div>\n<p>Make sure your selected worker runtime is <code class=\"language-text\">node</code>. You now are sort of on the \"<em>host</em>\" level of things. Let's create an <em>actual</em> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx func new --language JavaScript --template HttpTrigger --name Ping\n<span class=\"token function\">cd</span> Ping\n<span class=\"token function\">rm</span> sample.dat</code></pre></div>\n<p>We are now in the \"Ping\" directory, containing an <code class=\"language-text\">index.js</code> and a <code class=\"language-text\">function.json</code> containing the binding definitions for your function. Function bindings are the Alpha and Omega of azure functions. Based on the template the index.js generated is set up to accept HTTP requests and respond to them.</p>\n<p>The next steps make sure that typescript is around and install some stuff that you'll need which you can read while npm is downloading parts of the internet.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init\nnpm i --save typescript tslib\nnpm i --only=dev @azure/functions\nnpx tsc --init</code></pre></div>","fields":{"slug":"/2019/02/24/writing-azure-functions-with-typescript"},"frontmatter":{"date":"February 24, 2019","path":null,"title":"Writing azure functions with typescript","tags":["web","azure","typescript"]}}},"pageContext":{"title":"Writing azure functions with typescript","previous":{"fields":{"slug":"/2019/02/03/typescript-type-shenanigans-2-specify-at-least-one-property"},"frontmatter":{"title":"Typescript type shenanigans 2: specify at least one property","tags":["web","typescript"],"date":"2019/02/03"}},"next":null}}