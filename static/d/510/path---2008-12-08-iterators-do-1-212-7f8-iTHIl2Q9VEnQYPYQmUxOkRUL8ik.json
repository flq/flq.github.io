{"data":{"markdownRemark":{"html":"<p>The following picture probably doesn't surprise you</p>\n<p><img src=\"/assets/exception.png\"></p>\n<p>But as you can see in what is commented out, you can indeed e.g. do</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DataSource.Take(10).ToList</code></pre></div>\n<p>Such an iterator then has quite a similarity to Haskell's [1..], the infinite list. Just make sure that you don't pull all elements from the source...</p>","frontmatter":{"date":"December 08, 2008","path":null,"title":"Iterators do [1..]","tags":["software-development","dotnet","libs-and-frameworks"]}}},"pageContext":{"title":"Iterators do [1..]","previous":{"fields":{"slug":"/2008/11/04/havent-digested-c-3-brace-yourself-for-v4"},"frontmatter":{"title":"Haven't digested C#3? Brace yourself for V4!","tags":["software-development","dotnet","csharp"],"date":"2008/11/04"}},"next":{"fields":{"slug":"/2009/01/07/dependency-injection-is-not-locating-services"},"frontmatter":{"title":"Dependency Injection is not locating services","tags":["dotnet","patterns","libs-and-frameworks"],"date":"2009/01/07"}}}}