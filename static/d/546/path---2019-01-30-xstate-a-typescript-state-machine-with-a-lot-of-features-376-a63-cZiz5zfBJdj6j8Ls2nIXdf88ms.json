{"data":{"markdownRemark":{"html":"<p>This post was sparked by a tweet from Ryan Florence...</p>\n<blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">When I think about building a UI like the checkout process for my workshops it&#39;s impossible to imagine doing it without xstate.<br><br>The visualizer helps me write the code w/o any significant bugs or blindspots from the start.<br><br>Great job <a href=\"https://twitter.com/DavidKPiano?ref_src=twsrc%5Etfw\">@DavidKPiano</a> <a href=\"https://t.co/v4zjMtkm15\">https://t.co/v4zjMtkm15</a> <a href=\"https://t.co/RnmOTsAe5X\">pic.twitter.com/RnmOTsAe5X</a></p>&mdash; Ryan Florence (@ryanflorence) <a href=\"https://twitter.com/ryanflorence/status/1084248892072329216?ref_src=twsrc%5Etfw\">January 13, 2019</a></blockquote>\n<p>It has been some [quite some time][1] since I last looked at declaratively defining and executing a state machine, so I got curious and visited [xstate][2].</p>\n<p>What you get access to is a library that gives you the ability to declare a state machine with a lot of features. I wanted to recreate the \"tape player\" from my post 12 years ago. COnsidering that xstate brings a lot more to the plate, I wanted the tape player to be a lot more complete than back then. The [source code][4] for the final result runs as react app and can be found under my github profile.</p>\n<p>At [statecharts.github.io][3] it is possible to visualize the state machine that you defined. For the tape player in the source code we get this:</p>\n<p><img src=\"/assets/xstate_visual.png\" alt=\"firefox location bar\"></p>\n<figcaption>And you thought a tape player is easy?</figcaption>\n<p>What you see is the states (the big boxes) and events (the small labels that start arrows) that define your state machine.</p>\n<p>The tape player is initially <em>stopped</em>. The <strong>PLAY</strong> event moves it to <em>playing</em>. Basically you can move from <em>playing</em> to <em>forwarding</em> and back to <em>playing</em>, but if you want to be <em>rewinding</em>, you need to be <em>stopped</em> first.</p>\n<p>You perform transitions by raising events. These events can be typed:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> EventId <span class=\"token operator\">=</span> <span class=\"token string\">\"PLAY\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"STOP\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"FORWARD\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"REWIND\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TapePlayerEvent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">EventObject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> EventId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then you can define your available states:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token number\">2007</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">22</span><span class=\"token operator\">/</span>state<span class=\"token operator\">-</span>design<span class=\"token operator\">-</span>pattern<span class=\"token operator\">-</span>simplified\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>xstate<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>guides<span class=\"token operator\">/</span>start<span class=\"token punctuation\">.</span>html\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>statecharts<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>xstate<span class=\"token operator\">-</span>viz<span class=\"token operator\">/</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>flq<span class=\"token operator\">/</span>test<span class=\"token operator\">-</span><span class=\"token keyword\">of</span><span class=\"token operator\">-</span>xstate</code></pre></div>","fields":{"slug":"/2019/01/30/xstate-a-typescript-state-machine-with-a-lot-of-features"},"frontmatter":{"date":"January 30, 2019","path":null,"title":"XState - a Typescript state machine with a lot of features","tags":["typescript","programming"]}}},"pageContext":{"title":"XState - a Typescript state machine with a lot of features","previous":{"fields":{"slug":"/2019/01/27/im-a-chrome-using-frontend-dev-but-want-to-use-firefox-more"},"frontmatter":{"title":"I'm a Chrome-using frontend dev, but want to use Firefox more","tags":["web","programming"],"date":"2019/01/27"}},"next":null}}