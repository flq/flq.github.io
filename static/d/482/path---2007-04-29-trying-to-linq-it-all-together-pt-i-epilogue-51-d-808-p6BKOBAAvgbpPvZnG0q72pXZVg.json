{"data":{"markdownRemark":{"html":"<p>In the <a href=\"/2007/04/25/trying-to-linq-it-all-together-pt-i\">last post</a> I said that I thought I'd have a bug in the keyword-based LINQ expression building. Of course, this is bollocks and not of the dog variety.</p>\n<p>In my defense, the documentation I had read was getting it wrong, too, but other Microsoft online documentation gets it right. The following code shows the previous example written with the LINQ keywords.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Person[] pees = Person.CreatePeopleList();\nvar salarySums =\n  from p in pees group p by p.Posn into groups\n  select new { Position = groups.Key, TotalSalary = (from p in groups select p.Salary).Sum() };</code></pre></div>\n<p>Works like a treat. In retrospect it is quite clear why my attempt wouldn't work. I was starting an iteration on the elements of groups and then doing a select on those. A select, though, acts on every element of the passed in object. Those were, quite rightfully, things of the Person type.</p>","fields":{"slug":"/2007/04/29/trying-to-linq-it-all-together-pt-i-epilogue"},"frontmatter":{"date":"April 29, 2007","path":null,"title":"Trying to LINQ it all together (Pt. I) - Epilogue","tags":["software-development","dotnet","libs-and-frameworks"]}}},"pageContext":{"title":"Trying to LINQ it all together (Pt. I) - Epilogue","previous":{"fields":{"slug":"/2007/04/25/trying-to-linq-it-all-together-pt-i","published":true},"frontmatter":{"title":"Trying to LINQ it all together (Pt. I)","tags":["software-development","dotnet","libs-and-frameworks"],"date":"2007/04/25"}},"next":{"fields":{"slug":"/2007/05/10/how-much-haskell-can-i-squeeze-out-of-c","published":true},"frontmatter":{"title":"How much Haskell can I squeeze out of C#?","tags":["software-development","dotnet","haskell"],"date":"2007/05/10"}}}}