{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","Sidebar","_ref","title","description","react_default","className","href","gatsby_browser_entry","to","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","rel","type","sidebar","_2363664672","node","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-ef71735ab5949bea100a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Sidebar = ({ title, description }) => (\r\n  <div className=\"sidebar\">\r\n    <h1>\r\n      <a href=\"/\">{title}</a>\r\n    </h1>\r\n    <p>{description}</p>\r\n    <nav>\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/tags\">Tags</Link>\r\n    </nav>\r\n  </div>\r\n)\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport './normalize.css'\r\nimport './skeleton.css'\r\nimport './syntax.css'\r\nimport './own.css'\r\n\r\nimport Sidebar from './sidebar'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title,\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: data.site.siteMetadata.description },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n          <link href=\"//fonts.googleapis.com/css?family=Raleway:400,300,600\" rel=\"stylesheet\" type=\"text/css\"></link>\r\n        </Helmet>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"two columns\">\r\n              <Sidebar\r\n                title={data.site.siteMetadata.title}\r\n                description={data.site.siteMetadata.description}\r\n              />\r\n            </div>\r\n            <div className=\"ten columns\">{children}</div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}