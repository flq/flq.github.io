{"version":3,"sources":["webpack:///./src/templates/articleTemplate.js"],"names":["Template","data","pageContext","markdownRemark","frontmatter","fields","html","previous","next","searchLink","slug","replace","title","meta","name","content","tags","join","className","date","map","t","key","to","dangerouslySetInnerHTML","__html","href","target","rel","pageQuery"],"mappings":"sQAKe,SAASA,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,YAEQC,EAAmBF,EAAnBE,eACAC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACrBC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KACZC,EAAaJ,EAAOK,KAAKC,QAAQ,IAAK,OAE5C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOR,EAAYQ,MACnBC,KAAM,CAAC,CAAEC,KAAM,WAAYC,QAASX,EAAYY,KAAKC,KAAK,UAG5D,iCACE,4BAAKb,EAAYQ,OACjB,yBAAKM,UAAU,aACb,8BAAOd,EAAYe,MADrB,MAEE,0BAAMD,UAAU,gBACbd,EAAYY,KAAKI,KAAI,SAAAC,GAAC,OACrB,kBAAC,OAAD,CAAMC,IAAKD,EAAGH,UAAU,oBAAoBK,GAAE,SAAWF,GACtDA,QAKT,yBACEH,UAAU,qBACVM,wBAAyB,CAAEC,OAAQnB,KAErC,yBAAKY,UAAU,qBACb,uBACEQ,KAAI,oEAAsEjB,EAC1EkB,OAAO,SACPC,IAAI,uBAHN,yBAQF,yBAAKV,UAAU,yBACZX,GACC,uBACEW,UAAU,kCACVQ,KAAMnB,EAASF,OAAOK,MAErBH,EAASH,YAAYQ,OAGzBJ,GACC,uBAAGU,UAAU,8BAA8BQ,KAAMlB,EAAKH,OAAOK,MAC1DF,EAAKJ,YAAYQ,UASzB,IAAMiB,EAAS","file":"component---src-templates-article-template-js-106f153950e91bc0de89.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  pageContext,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, fields, html } = markdownRemark\n  const { previous, next } = pageContext\n  const searchLink = fields.slug.replace('/', '%2F')\n\n  return (\n    <Layout>\n      <Helmet\n        title={frontmatter.title}\n        meta={[{ name: 'keywords', content: frontmatter.tags.join(', ') }]}\n      />\n\n      <article>\n        <h1>{frontmatter.title}</h1>\n        <div className=\"page-info\">\n          <span>{frontmatter.date}</span> in\n          <span className=\"article-tags\">\n            {frontmatter.tags.map(t => (\n              <Link key={t} className=\"article-tags--tag\" to={`/tags/${t}`}>\n                {t}\n              </Link>\n            ))}\n          </span>\n        </div>\n        <div\n          className=\"blog-post__content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <div className=\"blog-post__footer\">\n          <a\n            href={`https://mobile.twitter.com/search?q=https%3A%2F%2Frealfiction.net${searchLink}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Discuss on Twitter &#x21F2;\n          </a>\n        </div>\n        <div className=\"blog-post__pagination\">\n          {previous && (\n            <a\n              className=\"blog-post__pagination--previous\"\n              href={previous.fields.slug}\n            >\n              {previous.frontmatter.title}\n            </a>\n          )}\n          {next && (\n            <a className=\"blog-post__pagination--next\" href={next.fields.slug}>\n              {next.frontmatter.title}\n            </a>\n          )}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}