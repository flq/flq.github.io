---
import { CollectionEntry, getCollection, getEntryBySlug } from "astro:content";
import Layout from "../../layouts/main.astro";
import Date from "../../components/Date.astro";
import Tags from "../../components/Tags.astro";

import Tweet from "../../components/mdx/Tweet.astro";
import YouTubeEmbed from "../../components/mdx/YouTubeEmbed.astro";
import Info from "../../components/mdx/Info.astro";
import Alpha from "../../components/mdx/Alpha.astro";
import Beta from "../../components/mdx/Beta.astro";
import TopicToc from "../../components/mdx/TopicToc.astro";
import GHEmbed from "../../components/mdx/GHEmbed.astro";
import Gist from "../../components/mdx/Gist.astro";

export interface Props {
  entry: CollectionEntry<"blog">
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter: { excerpt }  } = await entry.render();
---

<style>
  header {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: auto auto;
    column-gap: 0.25rem;
    font-size: 1.2rem;
    margin-bottom: 2rem;
  }

  h1 {
    grid-row: 1;
    grid-column: 1;
    margin: 0;
  }

  .date {
    grid-column: 2;
    grid-row: 1;
    justify-self: end;
  }
</style>

<Layout
  title={entry.data.title}
  meta={[
    { name: "keywords", content: entry.data.tags.join(", ") },
    { name: "twitter:card", content: "summary" },
    { name: "twitter:title", content: entry.data.title },
    { name: "twitter:site:id", content: "fquednau" },
    { name: "twitter:description", content: excerpt },
    {
      name: "twitter:image",
      content: "https://realfiction.net/icons/icon-72x72.png",
    },
  ]}
>
  <article>
    <header>
      <Date class="date" date={entry.data.date} />
      <h1>{entry.data.title}</h1>
      <Tags tags={entry.data.tags} />
    </header>
    <Content
      components={{ Tweet, YouTubeEmbed, Info, Alpha, Beta, TopicToc, GHEmbed, Gist }}
    />
  </article>
</Layout>
