---
interface Props {
    date: Date;
    class?: string;
}
const { date: d, class: className } = Astro.props;

const [date, month, year] = [
    d.getDate(),
    d.toLocaleString("en", { month: "short" }),
    d.getFullYear(),
];
---

<style lang="scss">
    @import "../styles/imports.scss";
    time {
        align-self: flex-start;
        display: inline-grid;
        grid-template-columns: auto;
        grid-template-rows: repeat(3, auto);
        border: 1px solid var(--linkColorMain);
        border-radius: 5px;
        @media (min-width: $mobile) {
            grid-template-columns: 1.5rem 3rem;
        }
    }

    .month {
        font-size: 1rem;
        line-height: 1rem;
        text-align: center;
        padding: 0.25rem 0.5rem;
        display: block;
        grid-row: 2;
        background-color: var(--linkColorMain);
        color: white;
        @media (min-width: $mobile) {
            grid-row: 1;
            grid-column: 2;
            background-color: initial;
            color: var(--text);
        }
    }

    .day {
        display: flex;
        grid-row: 3;
        padding: 0.25rem;
        line-height: 1rem;
        text-align: center;
        justify-self: stretch;
        justify-content: center;
        align-items: center;
        @media (min-width: $mobile) {
            background-color: var(--linkColorMain);
            color: white;
            grid-column: 2;
            grid-row: 2;
            padding: 0.25rem 0;
            line-height: 1.2rem;
            font-size: 1.2rem;
        }
    }

    .year {
        display: block;
        grid-row: 1;
        padding: 0.25rem;
        line-height: 1rem;
        @media (min-width: $mobile) {
            visibility: visible;
            writing-mode: vertical-lr;
            grid-column: 1;
            grid-row: 1 / span 2;
        }
    }
</style>

<time class={className} datetime={date.toString()}>
    <span class="month">{month}</span>
    <span class="day">{date}</span>
    <span class="year">{year}</span>
</time>
