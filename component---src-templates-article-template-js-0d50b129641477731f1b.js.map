{"version":3,"sources":["webpack:///./src/templates/articleTemplate.js"],"names":["Template","_ref","data","pageContext","markdownRemark","frontmatter","fields","html","previous","next","searchLink","slug","replace","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","meta","name","content","tags","join","className","date","map","t","gatsby__WEBPACK_IMPORTED_MODULE_2__","key","to","dangerouslySetInnerHTML","__html","href","target","rel","pageQuery"],"mappings":"6OAKe,SAASA,EAATC,GAGZ,IAFDC,EAECD,EAFDC,KACAC,EACCF,EADDE,YAEQC,EAAmBF,EAAnBE,eACAC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACrBC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KACZC,EAAaJ,EAAOK,KAAKC,QAAQ,IAAK,OAE5C,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,MAAOb,EAAYa,MACnBC,KAAM,CAAC,CAAEC,KAAM,WAAYC,QAAShB,EAAYiB,KAAKC,KAAK,UAG5DV,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAKV,EAAYa,OACjBL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,YAAOV,EAAYoB,MADrB,MAEEZ,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBACbnB,EAAYiB,KAAKI,IAAI,SAAAC,GAAC,OACrBd,EAAAC,EAAAC,cAACa,EAAA,KAAD,CAAMC,IAAKF,EAAGH,UAAU,oBAAoBM,GAAE,SAAWH,GACtDA,OAKTd,EAAAC,EAAAC,cAAA,OACES,UAAU,qBACVO,wBAAyB,CAAEC,OAAQzB,KAErCM,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,KACEkB,KAAI,oEAAsEvB,EAC1EwB,OAAO,SACPC,IAAI,uBAHN,yBAQFtB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACZhB,GACCK,EAAAC,EAAAC,cAAA,KACES,UAAU,kCACVS,KAAMzB,EAASF,OAAOK,MAErBH,EAASH,YAAYa,OAGzBT,GACCI,EAAAC,EAAAC,cAAA,KAAGS,UAAU,8BAA8BS,KAAMxB,EAAKH,OAAOK,MAC1DF,EAAKJ,YAAYa,UASzB,IAAMkB,EAAS","file":"component---src-templates-article-template-js-0d50b129641477731f1b.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from '../components/layout'\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  pageContext,\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds our post data\r\n  const { frontmatter, fields, html } = markdownRemark\r\n  const { previous, next } = pageContext\r\n  const searchLink = fields.slug.replace('/', '%2F')\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet\r\n        title={frontmatter.title}\r\n        meta={[{ name: 'keywords', content: frontmatter.tags.join(', ') }]}\r\n      />\r\n\r\n      <article>\r\n        <h1>{frontmatter.title}</h1>\r\n        <div className=\"page-info\">\r\n          <span>{frontmatter.date}</span> in\r\n          <span className=\"article-tags\">\r\n            {frontmatter.tags.map(t => (\r\n              <Link key={t} className=\"article-tags--tag\" to={`/tags/${t}`}>\r\n                {t}\r\n              </Link>\r\n            ))}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"blog-post__content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n        <div className=\"blog-post__footer\">\r\n          <a\r\n            href={`https://mobile.twitter.com/search?q=https%3A%2F%2Frealfiction.net${searchLink}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Discuss on Twitter &#x21F2;\r\n          </a>\r\n        </div>\r\n        <div className=\"blog-post__pagination\">\r\n          {previous && (\r\n            <a\r\n              className=\"blog-post__pagination--previous\"\r\n              href={previous.fields.slug}\r\n            >\r\n              {previous.frontmatter.title}\r\n            </a>\r\n          )}\r\n          {next && (\r\n            <a className=\"blog-post__pagination--next\" href={next.fields.slug}>\r\n              {next.frontmatter.title}\r\n            </a>\r\n          )}\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($title: String!) {\r\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}