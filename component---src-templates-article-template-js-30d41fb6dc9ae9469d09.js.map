{"version":3,"sources":["webpack:///./src/templates/articleTemplate.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_ref","data","pageContext","markdownRemark","frontmatter","html","previous","next","a","createElement","title","meta","name","content","tags","join","className","date","map","t","key","to","dangerouslySetInnerHTML","__html","href","fields","slug"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAQ,EAAAE,GAAAE,EAAAZ,EAAA,KAKe,SAASI,EAATS,GAGZ,IAFDC,EAECD,EAFDC,KACAC,EACCF,EADDE,YAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAClB,OACEb,EAAAc,EAAAC,cAACV,EAAA,EAAD,KACEL,EAAAc,EAAAC,cAACX,EAAAU,EAAD,CACEE,MAAON,EAAYM,MACnBC,KAAM,CAAC,CAAEC,KAAM,WAAYC,QAAST,EAAYU,KAAKC,KAAK,UAG5DrB,EAAAc,EAAAC,cAAA,eACEf,EAAAc,EAAAC,cAAA,UAAKL,EAAYM,OACjBhB,EAAAc,EAAAC,cAAA,OAAKO,UAAU,aACbtB,EAAAc,EAAAC,cAAA,YAAOL,EAAYa,MADrB,MAEEvB,EAAAc,EAAAC,cAAA,QAAMO,UAAU,gBACbZ,EAAYU,KAAKI,IAAI,SAAAC,GAAC,OACrBzB,EAAAc,EAAAC,cAACb,EAAA,KAAD,CAAMwB,IAAKD,EAAGH,UAAU,oBAAoBK,GAAE,SAAWF,GACtDA,OAKTzB,EAAAc,EAAAC,cAAA,OACEO,UAAU,oBACVM,wBAAyB,CAAEC,OAAQlB,KAErCX,EAAAc,EAAAC,cAAA,OAAKO,UAAU,sBACZV,GACCZ,EAAAc,EAAAC,cAAA,KAAGO,UAAU,+BAA+BQ,KAAMlB,EAASmB,OAAOC,MAC/DpB,EAASF,YAAYM,OAGzBH,GACCb,EAAAc,EAAAC,cAAA,KAAGO,UAAU,2BAA2BQ,KAAMjB,EAAKkB,OAAOC,MACvDnB,EAAKH,YAAYM,UASzB,IAAMlB,EAAS","file":"component---src-templates-article-template-js-30d41fb6dc9ae9469d09.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from '../components/layout'\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  pageContext,\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds our post data\r\n  const { frontmatter, html } = markdownRemark\r\n  const { previous, next } = pageContext\r\n  return (\r\n    <Layout>\r\n      <Helmet\r\n        title={frontmatter.title}\r\n        meta={[{ name: 'keywords', content: frontmatter.tags.join(', ') }]}\r\n      />\r\n\r\n      <article>\r\n        <h1>{frontmatter.title}</h1>\r\n        <div className=\"page-info\">\r\n          <span>{frontmatter.date}</span> in\r\n          <span className=\"article-tags\">\r\n            {frontmatter.tags.map(t => (\r\n              <Link key={t} className=\"article-tags--tag\" to={`/tags/${t}`}>\r\n                {t}\r\n              </Link>\r\n            ))}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n        <div className=\"article-pagination\">\r\n          {previous && (\r\n            <a className=\"article-pagination--previous\" href={previous.fields.slug}>\r\n              {previous.frontmatter.title}\r\n            </a>\r\n          )}\r\n          {next && (\r\n            <a className=\"article-pagination--next\" href={next.fields.slug}>\r\n              {next.frontmatter.title}\r\n            </a>\r\n          )}\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($title: String!) {\r\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}