
<!-- saved from url=(0052)file:///C:/dotnet/dev/codeplex/nuget/QueryResult.htm -->
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style></head><body>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 types on 690 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;too&nbsp;big</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">400</b>&nbsp;<font color="#0000FF">OR</font><font color="#000000"><br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbILInstructions</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">2500</b><font color="#000000"><br>&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#0000FF">DESC</font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 6 types on 690 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;with&nbsp;poor&nbsp;cohesion</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#008000">//&nbsp;m&nbsp;-&nbsp;members<br></font><font color="#008000">//&nbsp;a&nbsp;-&nbsp;instance&nbsp;fields<br></font><font color="#008000">//&nbsp;LCOM&nbsp;HS&nbsp;=&nbsp;1&nbsp;-&nbsp;sum(mA)/(m*a)<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">LCOMHS</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0.95</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbFields</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">10</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbMethods</font>&nbsp;<font color="#000000">&gt;</font><b style="color:#000000;background-color:#FFFF99">10</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#0000FF">LCOMHS</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">LCOM Henderson-Sellers (LCOMHS)</td><td class="hdrcell_left"># Fields</td><td class="hdrcell_left"># Methods</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">WpfConsoleService</td><td class="datacell_right1">1</td><td class="datacell_right1">13</td><td class="datacell_right1">28</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService</td></tr><tr><td class="datacell_left0">WpfConsole</td><td class="datacell_right0">0.97656</td><td class="datacell_right0">19</td><td class="datacell_right0">43</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsole</td></tr><tr><td class="datacell_left1">ManifestMetadata</td><td class="datacell_right1">0.97222</td><td class="datacell_right1">15</td><td class="datacell_right1">38</td><td class="datacell_left1">NuGet.ManifestMetadata</td></tr><tr><td class="datacell_left0">ProjectManager</td><td class="datacell_right0">0.96727</td><td class="datacell_right0">18</td><td class="datacell_right0">65</td><td class="datacell_left0">NuGet.ProjectManager</td></tr><tr><td class="datacell_left1">DataServicePackage</td><td class="datacell_right1">0.96364</td><td class="datacell_right1">27</td><td class="datacell_right1">59</td><td class="datacell_left1">NuGet.DataServicePackage</td></tr><tr><td class="datacell_left0">AssemblyBinding</td><td class="datacell_right0">0.96296</td><td class="datacell_right0">11</td><td class="datacell_right0">29</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">5.8427</td><td class="datacell_stat1">103</td><td class="datacell_stat1">262</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">0.97378</td><td class="datacell_stat0">17.167</td><td class="datacell_stat0">43.667</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0.96296</td><td class="datacell_stat1">11</td><td class="datacell_stat1">28</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">1</td><td class="datacell_stat0">27</td><td class="datacell_stat0">65</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">0.012643</td><td class="datacell_stat1">5.1774</td><td class="datacell_stat1">14.044</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">0.00015985</td><td class="datacell_stat0">26.806</td><td class="datacell_stat0">197.22</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 7 types on 369 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Efferent&nbsp;(outgoing)&nbsp;Coupling</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">TypeCe</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">50</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">TypeCe</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">Efferent coupling (TypeCe)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">ProjectManager</td><td class="datacell_right1">88</td><td class="datacell_left1">NuGet.ProjectManager</td></tr><tr><td class="datacell_left0">Manifest</td><td class="datacell_right0">65</td><td class="datacell_left0">NuGet.Manifest</td></tr><tr><td class="datacell_left1">VsProjectSystem</td><td class="datacell_right1">63</td><td class="datacell_left1">NuGet.VisualStudio.VsProjectSystem</td></tr><tr><td class="datacell_left0">SolutionManager</td><td class="datacell_right0">60</td><td class="datacell_left0">NuGet.VisualStudio.SolutionManager</td></tr><tr><td class="datacell_left1">ProjectExtensions</td><td class="datacell_right1">56</td><td class="datacell_left1">NuGet.VisualStudio.ProjectExtensions</td></tr><tr><td class="datacell_left0">WpfConsole</td><td class="datacell_right0">55</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsole</td></tr><tr><td class="datacell_left1">PackageBuilder</td><td class="datacell_right1">53</td><td class="datacell_left1">NuGet.PackageBuilder</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">440</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">62.857</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">53</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">88</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">11.025</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">121.55</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 types on 369 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Non-Abstract&nbsp;Afferent&nbsp;(incoming)&nbsp;coupling</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">TypeCa</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">20</b><font color="#000000"><br></font><font color="#0000FF">AND</font>&nbsp;<font color="#000000">!</font><font color="#000000">(</font><font color="#000064">IsAbstract</font>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsInterface</font>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsGeneratedByCompiler</font><font color="#000000">)</font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_ok">
              No warning or error. 4 types on 690 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">A&nbsp;stateless&nbsp;class&nbsp;or&nbsp;structure&nbsp;might&nbsp;be&nbsp;turned&nbsp;into&nbsp;a&nbsp;static&nbsp;type</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">5</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000064">SizeOfInst</font>&nbsp;<font color="#000000">==</font><b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000064">NbInterfacesImplemented</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#000000">(</font><font color="#000064">IsClass</font>&nbsp;<font color="#0000FF">AND</font>&nbsp;<font color="#000064">DepthOfInheritance</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">1</b><font color="#000000">&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">AND</font>&nbsp;<font color="#000064">NbChildren</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b><font color="#000000">)</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsStructure</font><font color="#000000">)</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsStatic</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneric</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left"># interfaces implemented</td><td class="hdrcell_left">Depth of inheritance</td><td class="hdrcell_left"># Children</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">NuGetResources</td><td class="datacell_right1">0</td><td class="datacell_right1">0</td><td class="datacell_right1">1</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources</td></tr><tr><td class="datacell_left0">NuGetResources</td><td class="datacell_right0">0</td><td class="datacell_right0">0</td><td class="datacell_right0">1</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources</td></tr><tr><td class="datacell_left1">VsResources</td><td class="datacell_right1">0</td><td class="datacell_right1">0</td><td class="datacell_right1">1</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources</td></tr><tr><td class="datacell_left0">Resources</td><td class="datacell_right0">0</td><td class="datacell_right0">0</td><td class="datacell_right0">1</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Resources</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">4</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">1</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">1</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">1</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 2 types on 690 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;that&nbsp;could&nbsp;be&nbsp;declared&nbsp;as&nbsp;'private'</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">CouldBePrivate</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">BufferedEnumerable&lt;TElement&gt;+BufferedEnumerator&lt;T&gt;</td><td class="datacell_right1">19</td><td class="datacell_left1">NuGet.BufferedEnumerable&lt;TElement&gt;+BufferedEnumerator&lt;T&gt;</td></tr><tr><td class="datacell_left0">BufferedEnumerable&lt;TElement&gt;+QueryState&lt;T&gt;</td><td class="datacell_right0">3</td><td class="datacell_left0">NuGet.BufferedEnumerable&lt;TElement&gt;+QueryState&lt;T&gt;</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">22</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">11</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">3</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">19</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">8</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">64</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 types on 690 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Structures&nbsp;should&nbsp;be&nbsp;immutable</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">IsStructure</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsImmutable</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInFrameworkAssembly</font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 8 methods on 3222 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;too&nbsp;big</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">30</b>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">NbILInstructions</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">200</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left"># IL instructions</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">InternalExec(Guid&amp;,UInt32,UInt32,IntPtr,IntPtr)</td><td class="datacell_right1">75</td><td class="datacell_right1">494</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleKeyProcessor .InternalExec(Guid&amp;,UInt32,UInt32,IntPtr,IntPtr)</td></tr><tr><td class="datacell_left0">TryParseVersionSpec(String,IVersionSpec&amp;)</td><td class="datacell_right0">38</td><td class="datacell_right0">205</td><td class="datacell_left0">NuGet.VersionUtility.TryParseVersionSpec(String,IVersionSpec&amp;)</td></tr><tr><td class="datacell_left1">ExtractOptions(ICommand,String)</td><td class="datacell_right1">38</td><td class="datacell_right1">255</td><td class="datacell_left1">NuGet.CommandLineParser.ExtractOptions(ICommand,String)</td></tr><tr><td class="datacell_left0">Walk(IPackage)</td><td class="datacell_right0">38</td><td class="datacell_right0">244</td><td class="datacell_left0">NuGet.PackageWalker.Walk(IPackage)</td></tr><tr><td class="datacell_left1">ViewHelpForCommand(String)</td><td class="datacell_right1">29</td><td class="datacell_right1">253</td><td class="datacell_left1">NuGet.HelpCommand.ViewHelpForCommand(String)</td></tr><tr><td class="datacell_left0">DeleteFiles(IProjectSystem,IEnumerable&lt;IPackageFile&gt;,IEnumerable &lt;IPackage&gt;,IDictionary&lt;String,IPackageFileTransformer&gt;)</td><td class="datacell_right0">25</td><td class="datacell_right0">252</td><td class="datacell_left0">NuGet.ProjectSystemExtensions.DeleteFiles(IProjectSystem,IEnumerable &lt;IPackageFile&gt;,IEnumerable&lt;IPackage&gt;,IDictionary&lt;String ,IPackageFileTransformer&gt;)</td></tr><tr><td class="datacell_left1">ToString()</td><td class="datacell_right1">23</td><td class="datacell_right1">263</td><td class="datacell_left1">NuGet.PackageDependency.ToString()</td></tr><tr><td class="datacell_left0">RemovePackageReferenceFromProject(IPackage)</td><td class="datacell_right0">18</td><td class="datacell_right0">214</td><td class="datacell_left0">NuGet.ProjectManager.RemovePackageReferenceFromProject(IPackage)</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">284</td><td class="datacell_stat1">2 180</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">35.5</td><td class="datacell_stat0">272.5</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">18</td><td class="datacell_stat1">205</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">75</td><td class="datacell_stat0">494</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">16.56</td><td class="datacell_stat1">85.914</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">274.25</td><td class="datacell_stat0">7 381</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 8 methods on 3222 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;too&nbsp;complex</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">CyclomaticComplexity</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">20</b>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">ILNestingDepth</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">4</b><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">CyclomaticComplexity</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Cyclomatic Complexity (CC)</td><td class="hdrcell_left">IL Nesting Depth</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">InternalExec(Guid&amp;,UInt32,UInt32,IntPtr,IntPtr)</td><td class="datacell_right1">45</td><td class="datacell_right1">11</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleKeyProcessor .InternalExec(Guid&amp;,UInt32,UInt32,IntPtr,IntPtr)</td></tr><tr><td class="datacell_left0">Walk(IPackage)</td><td class="datacell_right0">17</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.PackageWalker.Walk(IPackage)</td></tr><tr><td class="datacell_left1">PasteText(Int32&amp;)</td><td class="datacell_right1">13</td><td class="datacell_right1">5</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleKeyProcessor.PasteText (Int32&amp;)</td></tr><tr><td class="datacell_left0">DeleteFiles(IProjectSystem,IEnumerable&lt;IPackageFile&gt;,IEnumerable &lt;IPackage&gt;,IDictionary&lt;String,IPackageFileTransformer&gt;)</td><td class="datacell_right0">11</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGet.ProjectSystemExtensions.DeleteFiles(IProjectSystem,IEnumerable &lt;IPackageFile&gt;,IEnumerable&lt;IPackage&gt;,IDictionary&lt;String ,IPackageFileTransformer&gt;)</td></tr><tr><td class="datacell_left1">Equals(AssemblyBinding)</td><td class="datacell_right1">9</td><td class="datacell_right1">8</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.Equals(AssemblyBinding)</td></tr><tr><td class="datacell_left0">FindGenericType(Type,Type)</td><td class="datacell_right0">8</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGet.QueryableUtility.FindGenericType(Type,Type)</td></tr><tr><td class="datacell_left1">IsGeneratedClosureMember(MemberExpression)</td><td class="datacell_right1">7</td><td class="datacell_right1">6</td><td class="datacell_left1">NuGet.ClosureEvaluator.IsGeneratedClosureMember(MemberExpression)</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">5</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet+&lt;FindSpecFile&gt;d__2 .MoveNext()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">115</td><td class="datacell_stat1">52</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">14.375</td><td class="datacell_stat0">6.5</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">5</td><td class="datacell_stat1">5</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">45</td><td class="datacell_stat0">11</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">12.093</td><td class="datacell_stat1">1.9365</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">146.23</td><td class="datacell_stat0">3.75</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 2 methods on 3222 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;with&nbsp;too&nbsp;many&nbsp;parameters&nbsp;(NbParameters)</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbParameters</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">5</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbParameters</font>&nbsp;<font color="#0000FF">DESC</font><font color="#000000"><br><br></font><font color="#008000">//&nbsp;METHODS&nbsp;WHERE&nbsp;NbParameters&nbsp;&gt;&nbsp;5&nbsp;might&nbsp;be&nbsp;painful&nbsp;to&nbsp;call&nbsp;<br></font><font color="#008000">//&nbsp;and&nbsp;might&nbsp;degrade&nbsp;performance.&nbsp;You&nbsp;should&nbsp;prefer&nbsp;using&nbsp;<br></font><font color="#008000">//&nbsp;additional&nbsp;properties/fields&nbsp;to&nbsp;the&nbsp;declaring&nbsp;type&nbsp;to&nbsp;<br></font><font color="#008000">//&nbsp;handle&nbsp;numerous&nbsp;states.&nbsp;Another&nbsp;alternative&nbsp;is&nbsp;to&nbsp;provide&nbsp;<br></font><font color="#008000">//&nbsp;a&nbsp;class&nbsp;or&nbsp;structure&nbsp;dedicated&nbsp;to&nbsp;handle&nbsp;arguments&nbsp;passing&nbsp;<br></font><font color="#008000">//&nbsp;(for&nbsp;example&nbsp;see&nbsp;the&nbsp;class&nbsp;System.Diagnostics.ProcessStartInfo&nbsp;<br></font><font color="#008000">//&nbsp;and&nbsp;the&nbsp;method&nbsp;System.Diagnostics.Process.Start(ProcessStartInfo))<br></font><font color="#008000">//&nbsp;See&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;NbParameters&nbsp;metric&nbsp;here&nbsp;<br></font><font color="#008000">//&nbsp;</font><font color="#008000"><a href="http://www.ndepend.com/Metrics.aspx#NbParameters" target="_blank">http://www.ndepend.com/Metrics.aspx#NbParameters</a></font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># Parameters</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">UninstallPackage(IProjectManager,String,Version,Boolean,Boolean ,ILogger)</td><td class="datacell_right1">6</td><td class="datacell_left1">NuGet.VisualStudio.VsPackageManager.UninstallPackage(IProjectManager ,String,Version,Boolean,Boolean,ILogger)</td></tr><tr><td class="datacell_left0">UninstallPackage(IProjectManager,String,Version,Boolean,Boolean ,ILogger)</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.VisualStudio.IVsPackageManager.UninstallPackage(IProjectManager ,String,Version,Boolean,Boolean,ILogger)</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">12</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 7 methods on 3222 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;with&nbsp;too&nbsp;many&nbsp;overloads&nbsp;(NbOverloads)</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbOverloads</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">6</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbOverloads</font>&nbsp;<font color="#0000FF">DESC</font><font color="#000000"><br><br></font><font color="#008000">//&nbsp;METHODS&nbsp;WHERE&nbsp;NbOverloads&nbsp;&gt;&nbsp;6&nbsp;might&nbsp;<br></font><font color="#008000">//&nbsp;be&nbsp;a&nbsp;problem&nbsp;to&nbsp;maintain&nbsp;and&nbsp;provoke&nbsp;higher&nbsp;coupling&nbsp;<br></font><font color="#008000">//&nbsp;than&nbsp;necessary.&nbsp;<br></font><font color="#008000">//&nbsp;This&nbsp;might&nbsp;also&nbsp;reveal&nbsp;a&nbsp;potential&nbsp;misused&nbsp;of&nbsp;the&nbsp;<br></font><font color="#008000">//&nbsp;C#&nbsp;and&nbsp;VB.NET&nbsp;language&nbsp;that&nbsp;since&nbsp;C#3&nbsp;and&nbsp;VB9&nbsp;support&nbsp;<br></font><font color="#008000">//&nbsp;object&nbsp;initialization.&nbsp;This&nbsp;feature&nbsp;helps&nbsp;reducing&nbsp;the&nbsp;number&nbsp;<br></font><font color="#008000">//&nbsp;of&nbsp;constructors&nbsp;of&nbsp;a&nbsp;class.<br></font><font color="#008000">//&nbsp;See&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;NbOverloads&nbsp;metric&nbsp;here&nbsp;<br></font><font color="#008000">//&nbsp;</font><font color="#008000"><a href="http://www.ndepend.com/Metrics.aspx#NbOverloads" target="_blank">http://www.ndepend.com/Metrics.aspx#NbOverloads</a></font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># Overloads</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">UninstallPackage(IPackage)</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.PackageManager.UninstallPackage(IPackage)</td></tr><tr><td class="datacell_left0">UninstallPackage(IPackage,Boolean)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.PackageManager.UninstallPackage(IPackage,Boolean)</td></tr><tr><td class="datacell_left1">UninstallPackage(IPackage,Boolean,Boolean)</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.PackageManager.UninstallPackage(IPackage,Boolean,Boolean)</td></tr><tr><td class="datacell_left0">UninstallPackage(String,Version,Boolean,Boolean)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.PackageManager.UninstallPackage(String,Version,Boolean,Boolean)</td></tr><tr><td class="datacell_left1">UninstallPackage(String)</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.PackageManager.UninstallPackage(String)</td></tr><tr><td class="datacell_left0">UninstallPackage(String,Version)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.PackageManager.UninstallPackage(String,Version)</td></tr><tr><td class="datacell_left1">UninstallPackage(String,Version,Boolean)</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.PackageManager.UninstallPackage(String,Version,Boolean)</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">49</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">7</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">7</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">7</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 104 methods on 2591 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Potentially&nbsp;unused&nbsp;methods</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#008000">//&nbsp;Caution:&nbsp;Methods&nbsp;used&nbsp;only&nbsp;by&nbsp;reflection&nbsp;might&nbsp;be&nbsp;matched.<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000064">MethodCa</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsPublic</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsProtected</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsEntryPoint</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsExplicitInterfaceImpl</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsClassConstructor</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br></font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsFinalizer</font><font color="#000000"><br></font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Afferent coupling (MethodCa)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">.ctor(IDataServiceContext,IDataServiceQuery,Expression)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.SmartDataServiceQuery&lt;T&gt;..ctor(IDataServiceContext ,IDataServiceQuery,Expression)</td></tr><tr><td class="datacell_left0">Eval(FieldInfo,Object)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ProjectManager.Eval(FieldInfo,Object)</td></tr><tr><td class="datacell_left1">Calculate(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Crc32.Calculate(String)</td></tr><tr><td class="datacell_left0">AddFiles(IFileSystem,IEnumerable&lt;IPackageFile&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.FileSystemExtensions.AddFiles(IFileSystem,IEnumerable &lt;IPackageFile&gt;)</td></tr><tr><td class="datacell_left1">DeleteFiles(IFileSystem,IEnumerable&lt;IPackageFile&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.FileSystemExtensions.DeleteFiles(IFileSystem,IEnumerable &lt;IPackageFile&gt;)</td></tr><tr><td class="datacell_left0">AddFileWithCheck(IFileSystem,String,Action&lt;Stream&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.FileSystemExtensions.AddFileWithCheck(IFileSystem,String,Action &lt;Stream&gt;)</td></tr><tr><td class="datacell_left1">Eval(FieldInfo,Object)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageRepositoryExtensions.Eval(FieldInfo,Object)</td></tr><tr><td class="datacell_left0">Execute(IQueryable,Expression)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.AggregateQuery&lt;T&gt;.Execute(IQueryable,Expression)</td></tr><tr><td class="datacell_left1">.ctor(IEnumerable&lt;IQueryable&lt;T&gt;&gt;,IEqualityComparer&lt;T&gt;,IEnumerable &lt;IEnumerable&lt;T&gt;&gt;,Expression)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.AggregateQuery&lt;T&gt;..ctor(IEnumerable&lt;IQueryable&lt;T&gt;&gt; ,IEqualityComparer&lt;T&gt;,IEnumerable&lt;IEnumerable&lt;T&gt;&gt;,Expression)</td></tr><tr><td class="datacell_left0">.ctor(IQueryable,Expression)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.SafeEnumerableQuery&lt;T&gt;..ctor(IQueryable,Expression)</td></tr><tr><td class="datacell_left1">CreateDependency(String,String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageDependency.CreateDependency(String,String)</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(CultureInfo)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left0">get_AtomFeedPackageRepo_InvalidFeedContent()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources .get_AtomFeedPackageRepo_InvalidFeedContent()</td></tr><tr><td class="datacell_left1">get_AtomFeedPackageRepo_InvalidFeedSource()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources .get_AtomFeedPackageRepo_InvalidFeedSource()</td></tr><tr><td class="datacell_left0">get_Debug_DependencyAlreadyReferenced()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Debug_DependencyAlreadyReferenced()</td></tr><tr><td class="datacell_left1">get_Debug_ProcessingDependencies()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Debug_ProcessingDependencies()</td></tr><tr><td class="datacell_left0">get_Log_AttemptingToRetrievePackageReferenceFromSource()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources .get_Log_AttemptingToRetrievePackageReferenceFromSource()</td></tr><tr><td class="datacell_left1">get_Log_LeavingPackageInstalled()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Log_LeavingPackageInstalled()</td></tr><tr><td class="datacell_left0">get_Log_ModifiedConfiguration()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Log_ModifiedConfiguration()</td></tr><tr><td class="datacell_left1">get_Log_PackageUpToDate()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Log_PackageUpToDate()</td></tr><tr><td class="datacell_left0">get_Log_UpdatingToSpecificVersion()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Log_UpdatingToSpecificVersion()</td></tr><tr><td class="datacell_left1">get_Manifest_DependencyIdRequired()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Manifest_DependencyIdRequired()</td></tr><tr><td class="datacell_left0">get_Manifest_RequiredMetadataMissing()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Manifest_RequiredMetadataMissing()</td></tr><tr><td class="datacell_left1">get_PackageHasDependentReference()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_PackageHasDependentReference()</td></tr><tr><td class="datacell_left0">get_PackageHasMultipleDependentsReferenced()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources .get_PackageHasMultipleDependentsReferenced()</td></tr><tr><td class="datacell_left1">get_PackageHasNoProjectContent()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_PackageHasNoProjectContent()</td></tr><tr><td class="datacell_left0">get_PackageMissingRequiredProperty()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_PackageMissingRequiredProperty()</td></tr><tr><td class="datacell_left1">get_PackageNotInstalled()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_PackageNotInstalled()</td></tr><tr><td class="datacell_left0">get_PackageSourceMustBePhysicalPath()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_PackageSourceMustBePhysicalPath()</td></tr><tr><td class="datacell_left1">get_ReferenceDoesNotExist()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_ReferenceDoesNotExist()</td></tr><tr><td class="datacell_left0">get_TagMissingHash()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_TagMissingHash()</td></tr><tr><td class="datacell_left1">get_Warning_RemovingPackageReferenceWillBreakDependents()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Resources.NuGetResources .get_Warning_RemovingPackageReferenceWillBreakDependents()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Resources.NuGetResources..ctor()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Between()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThan()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(CultureInfo)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left0">get_HelpCommandDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_HelpCommandDescription()</td></tr><tr><td class="datacell_left1">get_HelpCommandUsageDecription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_HelpCommandUsageDecription()</td></tr><tr><td class="datacell_left0">get_HelpCommandUsageSummary()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_HelpCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_ListCommandDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandDescription()</td></tr><tr><td class="datacell_left0">get_ListCommandSourceDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_ListCommandSourceDescription()</td></tr><tr><td class="datacell_left1">get_ListCommandUsageDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandUsageDescription()</td></tr><tr><td class="datacell_left0">get_ListCommandUsageSummary()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_ListCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_ListCommandVerboseListDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandVerboseListDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandBasePathDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandBasePathDescription()</td></tr><tr><td class="datacell_left1">get_PackageCommandDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PackageCommandDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandOutputDirDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandOutputDirDescription()</td></tr><tr><td class="datacell_left1">get_PackageCommandUsageDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PackageCommandUsageDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandUsageSummary()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_PushCommandDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandDescription()</td></tr><tr><td class="datacell_left0">get_PushCommandPublishDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PushCommandPublishDescription()</td></tr><tr><td class="datacell_left1">get_PushCommandSourceDescription()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandSourceDescription()</td></tr><tr><td class="datacell_left0">get_PushCommandUsageDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PushCommandUsageDescription()</td></tr><tr><td class="datacell_left1">get_PushCommandUsageSummary()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandUsageSummary()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Common.NuGetResources..ctor()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Between()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThan()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left0">.ctor(DTE)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.SolutionManager..ctor(DTE)</td></tr><tr><td class="datacell_left1">Execute()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NuGetBaseCmdlet.Execute()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources..ctor()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Argument_Cannot_Be_Null_Or_Empty()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Cannot_Be_Null_Or_Empty()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Between()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThan()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right1">0</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right0">0</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Resources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Resources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Resources..ctor()</td></tr><tr><td class="datacell_left0">get_WpfConsoleService()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsoleToolWindow .get_WpfConsoleService()</td></tr><tr><td class="datacell_left1">set_ServiceProvider(IServiceProvider)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_ServiceProvider(IServiceProvider)</td></tr><tr><td class="datacell_left0">set_WpfConsoleService(IWpfConsoleService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_WpfConsoleService(IWpfConsoleService)</td></tr><tr><td class="datacell_left1">set_HostProviders(IEnumerable&lt;Lazy&lt;IHostProvider,IHostMetadata&gt;&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_HostProviders(IEnumerable&lt;Lazy&lt;IHostProvider,IHostMetadata&gt;&gt;)</td></tr><tr><td class="datacell_left0">remove_ActiveHostChanged(EventHandler)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .remove_ActiveHostChanged(EventHandler)</td></tr><tr><td class="datacell_left1">set_StandardClassificationService(IStandardClassificationService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_StandardClassificationService(IStandardClassificationService)</td></tr><tr><td class="datacell_left0">set_ClassificationTypeRegistryService (IClassificationTypeRegistryService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_ClassificationTypeRegistryService (IClassificationTypeRegistryService)</td></tr><tr><td class="datacell_left1">set_ClassificationFormatMapService(IClassificationFormatMapService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_ClassificationFormatMapService(IClassificationFormatMapService)</td></tr><tr><td class="datacell_left0">set_ContentTypeRegistryService(IContentTypeRegistryService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_ContentTypeRegistryService(IContentTypeRegistryService)</td></tr><tr><td class="datacell_left1">set_VsEditorAdaptersFactoryService(IVsEditorAdaptersFactoryService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_VsEditorAdaptersFactoryService(IVsEditorAdaptersFactoryService)</td></tr><tr><td class="datacell_left0">set_EditorOptionsFactoryService(IEditorOptionsFactoryService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_EditorOptionsFactoryService(IEditorOptionsFactoryService)</td></tr><tr><td class="datacell_left1">set_CompletionBroker(ICompletionBroker)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_CompletionBroker(ICompletionBroker)</td></tr><tr><td class="datacell_left0">set_TextFormatClassifierProvider(ITextFormatClassifierProvider)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_TextFormatClassifierProvider(ITextFormatClassifierProvider)</td></tr><tr><td class="datacell_left1">set_CommandExpansionProviders(List&lt;Lazy&lt;ICommandExpansionProvider ,IHostNameMetadata&gt;&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_CommandExpansionProviders(List&lt;Lazy&lt;ICommandExpansionProvider ,IHostNameMetadata&gt;&gt;)</td></tr><tr><td class="datacell_left0">set_CommandTokenizerProviders(List&lt;Lazy&lt;ICommandTokenizerProvider ,IHostNameMetadata&gt;&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_CommandTokenizerProviders(List&lt;Lazy&lt;ICommandTokenizerProvider ,IHostNameMetadata&gt;&gt;)</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 414 methods on 3222 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;that&nbsp;could&nbsp;be&nbsp;declared&nbsp;as&nbsp;'private'</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">CouldBePrivate</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">set_Id(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.set_Id(String)</td></tr><tr><td class="datacell_left0">set_Version(Version)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.set_Version(Version)</td></tr><tr><td class="datacell_left1">set_Title(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.set_Title(String)</td></tr><tr><td class="datacell_left0">get_Authors()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.get_Authors()</td></tr><tr><td class="datacell_left1">get_Owners()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.get_Owners()</td></tr><tr><td class="datacell_left0">set_IconUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.set_IconUrl(Uri)</td></tr><tr><td class="datacell_left1">set_LicenseUrl(Uri)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.set_LicenseUrl(Uri)</td></tr><tr><td class="datacell_left0">set_ProjectUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.set_ProjectUrl(Uri)</td></tr><tr><td class="datacell_left1">set_RequireLicenseAcceptance(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.set_RequireLicenseAcceptance(Boolean)</td></tr><tr><td class="datacell_left0">set_Description(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.set_Description(String)</td></tr><tr><td class="datacell_left1">set_Summary(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.set_Summary(String)</td></tr><tr><td class="datacell_left0">set_Language(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.set_Language(String)</td></tr><tr><td class="datacell_left1">get_Tags()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackageBuilder.get_Tags()</td></tr><tr><td class="datacell_left0">get_Dependencies()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageBuilder.get_Dependencies()</td></tr><tr><td class="datacell_left1">.ctor(Stream,String)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.PackageBuilder..ctor(Stream,String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.PackageBuilder..ctor()</td></tr><tr><td class="datacell_left1">GetFiles(IPackage,String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.PackageExtensions.GetFiles(IPackage,String)</td></tr><tr><td class="datacell_left0">set_Source(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ManifestFile.set_Source(String)</td></tr><tr><td class="datacell_left1">set_Target(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ManifestFile.set_Target(String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGet.ManifestFile..ctor()</td></tr><tr><td class="datacell_left1">ToDelegate&lt;T&gt;(IVersionSpec,Func&lt;T,Version&gt;)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VersionExtensions.ToDelegate&lt;T&gt;(IVersionSpec,Func&lt;T,Version&gt;)</td></tr><tr><td class="datacell_left0">AsBufferedEnumerable&lt;T&gt;(IQueryable&lt;T&gt;,Int32)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.QueryableExtensions.AsBufferedEnumerable&lt;T&gt;(IQueryable&lt;T&gt;,Int32)</td></tr><tr><td class="datacell_left1">set_Id(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Id(String)</td></tr><tr><td class="datacell_left0">get_Version()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_Version()</td></tr><tr><td class="datacell_left1">set_Version(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Version(String)</td></tr><tr><td class="datacell_left0">set_Title(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_Title(String)</td></tr><tr><td class="datacell_left1">get_Authors()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.get_Authors()</td></tr><tr><td class="datacell_left0">set_Authors(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_Authors(String)</td></tr><tr><td class="datacell_left1">get_Owners()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.get_Owners()</td></tr><tr><td class="datacell_left0">set_Owners(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_Owners(String)</td></tr><tr><td class="datacell_left1">set_IconUrl(Uri)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_IconUrl(Uri)</td></tr><tr><td class="datacell_left0">set_LicenseUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_LicenseUrl(Uri)</td></tr><tr><td class="datacell_left1">set_ProjectUrl(Uri)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_ProjectUrl(Uri)</td></tr><tr><td class="datacell_left0">set_ReportAbuseUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_ReportAbuseUrl(Uri)</td></tr><tr><td class="datacell_left1">get_DownloadUrl()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.DataServicePackage.get_DownloadUrl()</td></tr><tr><td class="datacell_left0">get_Published()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_Published()</td></tr><tr><td class="datacell_left1">set_Published(DateTimeOffset)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Published(DateTimeOffset)</td></tr><tr><td class="datacell_left0">get_LastUpdated()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_LastUpdated()</td></tr><tr><td class="datacell_left1">set_LastUpdated(DateTimeOffset)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_LastUpdated(DateTimeOffset)</td></tr><tr><td class="datacell_left0">set_DownloadCount(Int32)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_DownloadCount(Int32)</td></tr><tr><td class="datacell_left1">set_Rating(Double)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Rating(Double)</td></tr><tr><td class="datacell_left0">set_RatingsCount(Int32)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_RatingsCount(Int32)</td></tr><tr><td class="datacell_left1">set_RequireLicenseAcceptance(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_RequireLicenseAcceptance(Boolean)</td></tr><tr><td class="datacell_left0">set_Description(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_Description(String)</td></tr><tr><td class="datacell_left1">set_Summary(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Summary(String)</td></tr><tr><td class="datacell_left0">set_Language(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.set_Language(String)</td></tr><tr><td class="datacell_left1">set_Tags(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Tags(String)</td></tr><tr><td class="datacell_left0">get_Dependencies()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_Dependencies()</td></tr><tr><td class="datacell_left1">set_Dependencies(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_Dependencies(String)</td></tr><tr><td class="datacell_left0">get_PackageHash()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_PackageHash()</td></tr><tr><td class="datacell_left1">set_PackageHash(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DataServicePackage.set_PackageHash(String)</td></tr><tr><td class="datacell_left0">get_Context()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.DataServicePackage.get_Context()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">3</td><td class="datacell_left1">NuGet.DataServicePackage..ctor()</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.PackageSource..ctor(String)</td></tr><tr><td class="datacell_left1">get_PathResolver()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ProjectManager.get_PathResolver()</td></tr><tr><td class="datacell_left0">Execute(PackageOperation)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.ProjectManager.Execute(PackageOperation)</td></tr><tr><td class="datacell_left1">AddPackageReferenceToProject(IPackage)</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.ProjectManager.AddPackageReferenceToProject(IPackage)</td></tr><tr><td class="datacell_left0">RemovePackageReference(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.ProjectManager.RemovePackageReference(String)</td></tr><tr><td class="datacell_left1">RemovePackageReference(String,Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.ProjectManager.RemovePackageReference(String,Boolean)</td></tr><tr><td class="datacell_left0">UpdatePackageReference(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.ProjectManager.UpdatePackageReference(String)</td></tr><tr><td class="datacell_left1">UpdatePackageReference(String,Version)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.ProjectManager.UpdatePackageReference(String,Version)</td></tr><tr><td class="datacell_left0">UpdatePackageReference(IPackage)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.ProjectManager.UpdatePackageReference(IPackage)</td></tr><tr><td class="datacell_left1">UpdatePackageReference(IPackage,Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.ProjectManager.UpdatePackageReference(IPackage,Boolean)</td></tr><tr><td class="datacell_left0">GetCompatibleAssemblyReferences(FrameworkName,IEnumerable &lt;IPackageAssemblyReference&gt;)</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGet.ProjectManager.GetCompatibleAssemblyReferences(FrameworkName ,IEnumerable&lt;IPackageAssemblyReference&gt;)</td></tr><tr><td class="datacell_left1">Eval(FieldInfo,Object)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.ProjectManager.Eval(FieldInfo,Object)</td></tr><tr><td class="datacell_left0">get_TargetPath()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackageOperationEventArgs.get_TargetPath()</td></tr><tr><td class="datacell_left1">.ctor(IPackage,String,String)</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.PackageOperationEventArgs..ctor(IPackage,String,String)</td></tr><tr><td class="datacell_left0">AsSafeQueryable&lt;T&gt;(IEnumerable&lt;T&gt;,Boolean)</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGet.EnumerableExtensions.AsSafeQueryable&lt;T&gt;(IEnumerable&lt;T&gt;,Boolean)</td></tr><tr><td class="datacell_left1">AsStream(String,Encoding)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.StreamExtensions.AsStream(String,Encoding)</td></tr><tr><td class="datacell_left0">get_DependentsResolver()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ProjectInstallWalker.get_DependentsResolver()</td></tr><tr><td class="datacell_left1">get_Logger()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.UninstallWalker.get_Logger()</td></tr><tr><td class="datacell_left0">get_Repository()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.UninstallWalker.get_Repository()</td></tr><tr><td class="datacell_left1">get_Force()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.UninstallWalker.get_Force()</td></tr><tr><td class="datacell_left0">get_DependentsResolver()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.UninstallWalker.get_DependentsResolver()</td></tr><tr><td class="datacell_left1">AddEnumerable(IEnumerable)</td><td class="datacell_right1">9</td><td class="datacell_left1">NuGet.HashCodeCombiner.AddEnumerable(IEnumerable)</td></tr><tr><td class="datacell_left0">AddInt32(Int32)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.HashCodeCombiner.AddInt32(Int32)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">NuGet.NullLogger..ctor()</td></tr><tr><td class="datacell_left0">Calculate(Byte[])</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Crc32.Calculate(Byte[])</td></tr><tr><td class="datacell_left1">Calculate(Byte[],Int32,Int32)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Crc32.Calculate(Byte[],Int32,Int32)</td></tr><tr><td class="datacell_left0">Calculate(UInt32,Byte[],Int32,Int32)</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.Crc32.Calculate(UInt32,Byte[],Int32,Int32)</td></tr><tr><td class="datacell_left1">Calculate(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Crc32.Calculate(String)</td></tr><tr><td class="datacell_left0">Calculate(String,Encoding)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Crc32.Calculate(String,Encoding)</td></tr><tr><td class="datacell_left1">.ctor(HashAlgorithm)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.CryptoHashProvider..ctor(HashAlgorithm)</td></tr><tr><td class="datacell_left0">AddFiles(IFileSystem,IEnumerable&lt;IPackageFile&gt;)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.FileSystemExtensions.AddFiles(IFileSystem,IEnumerable &lt;IPackageFile&gt;)</td></tr><tr><td class="datacell_left1">DeleteFiles(IFileSystem,IEnumerable&lt;IPackageFile&gt;)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.FileSystemExtensions.DeleteFiles(IFileSystem,IEnumerable &lt;IPackageFile&gt;)</td></tr><tr><td class="datacell_left0">GetFilesSafe(IFileSystem,String,String)</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.FileSystemExtensions.GetFilesSafe(IFileSystem,String,String)</td></tr><tr><td class="datacell_left1">AddFileWithCheck(IFileSystem,String,Action&lt;Stream&gt;)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.FileSystemExtensions.AddFileWithCheck(IFileSystem,String,Action &lt;Stream&gt;)</td></tr><tr><td class="datacell_left0">FindPackage(IPackageRepository,String,String)</td><td class="datacell_right0">3</td><td class="datacell_left0">NuGet.PackageRepositoryExtensions.FindPackage(IPackageRepository ,String,String)</td></tr><tr><td class="datacell_left1">FindPackage(IPackageRepository,String,IVersionSpec)</td><td class="datacell_right1">8</td><td class="datacell_left1">NuGet.PackageRepositoryExtensions.FindPackage(IPackageRepository ,String,IVersionSpec)</td></tr><tr><td class="datacell_left0">Eval(FieldInfo,Object)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.PackageRepositoryExtensions.Eval(FieldInfo,Object)</td></tr><tr><td class="datacell_left1">set_Id(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_Id(String)</td></tr><tr><td class="datacell_left0">set_Version(Version)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_Version(Version)</td></tr><tr><td class="datacell_left1">set_Title(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_Title(String)</td></tr><tr><td class="datacell_left0">set_Authors(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_Authors(IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left1">set_Owners(IEnumerable&lt;String&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_Owners(IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left0">set_IconUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_IconUrl(Uri)</td></tr><tr><td class="datacell_left1">set_LicenseUrl(Uri)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_LicenseUrl(Uri)</td></tr><tr><td class="datacell_left0">set_ProjectUrl(Uri)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_ProjectUrl(Uri)</td></tr><tr><td class="datacell_left1">set_RequireLicenseAcceptance(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_RequireLicenseAcceptance(Boolean)</td></tr><tr><td class="datacell_left0">set_Description(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_Description(String)</td></tr><tr><td class="datacell_left1">set_Summary(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_Summary(String)</td></tr><tr><td class="datacell_left0">set_Language(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_Language(String)</td></tr><tr><td class="datacell_left1">set_Tags(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ZipPackage.set_Tags(String)</td></tr><tr><td class="datacell_left0">set_Dependencies(IEnumerable&lt;PackageDependency&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ZipPackage.set_Dependencies(IEnumerable&lt;PackageDependency&gt;)</td></tr><tr><td class="datacell_left1">get_Repository()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.DependentsWalker.get_Repository()</td></tr><tr><td class="datacell_left0">InitializeRequest(WebRequest)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.PackageDownloader.InitializeRequest(WebRequest)</td></tr><tr><td class="datacell_left1">.ctor(IHttpClient)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.PackageDownloader..ctor(IHttpClient)</td></tr><tr><td class="datacell_left0">.ctor(IHttpClient,IPackageFactory,IHashProvider)</td><td class="datacell_right0">9</td><td class="datacell_left0">NuGet.PackageDownloader..ctor(IHttpClient,IPackageFactory ,IHashProvider)</td></tr><tr><td class="datacell_left1">get_IsEmpty()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.BufferedEnumerable&lt;TElement&gt;+BufferedEnumerator&lt;T&gt;.get_IsEmpty()</td></tr><tr><td class="datacell_left0">get_InnerExpression()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.SafeEnumerableQuery&lt;T&gt;.get_InnerExpression()</td></tr><tr><td class="datacell_left1">get_SourcePath()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PhysicalPackageFile.get_SourcePath()</td></tr><tr><td class="datacell_left0">get_TargetPath()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PhysicalPackageFile.get_TargetPath()</td></tr><tr><td class="datacell_left1">Clear()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.PriorityQueue&lt;TValue&gt;.Clear()</td></tr><tr><td class="datacell_left0">MergeWith(XElement,XElement)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.XElementExtensions.MergeWith(XElement,XElement)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.PackageRepositoryFactory..ctor()</td></tr><tr><td class="datacell_left0">.ctor(IHttpClient)</td><td class="datacell_right0">2</td><td class="datacell_left0">NuGet.PackageRepositoryFactory..ctor(IHttpClient)</td></tr><tr><td class="datacell_left1">.ctor(Uri)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.DataServicePackageRepository..ctor(Uri)</td></tr><tr><td class="datacell_left0">.ctor(IDataServiceContext,IHttpClient)</td><td class="datacell_right0">10</td><td class="datacell_left0">NuGet.DataServicePackageRepository..ctor(IDataServiceContext ,IHttpClient)</td></tr><tr><td class="datacell_left1">GetRepositoryPaths()</td><td class="datacell_right1">16</td><td class="datacell_left1">NuGet.SharedPackageRepository.GetRepositoryPaths()</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.SharedPackageRepository..ctor(String)</td></tr><tr><td class="datacell_left1">get_DefaultTargetFrameworkVersion()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VersionUtility.get_DefaultTargetFrameworkVersion()</td></tr><tr><td class="datacell_left0">get_Version()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.ManifestMetadata.get_Version()</td></tr><tr><td class="datacell_left1">CreateDependency(String,String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.PackageDependency.CreateDependency(String,String)</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.PackageDependency..ctor(String)</td></tr><tr><td class="datacell_left1">set_Metadata(ManifestMetadata)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Manifest.set_Metadata(ManifestMetadata)</td></tr><tr><td class="datacell_left0">set_Files(List&lt;ManifestFile&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Manifest.set_Files(List&lt;ManifestFile&gt;)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.Manifest..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGet.Manifest+NullServiceProvider..ctor()</td></tr><tr><td class="datacell_left1">Load(String)</td><td class="datacell_right1">8</td><td class="datacell_left1">NuGet.Runtime.RemoteAssembly.Load(String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Runtime.RemoteAssembly..ctor()</td></tr><tr><td class="datacell_left1">GetBindingRedirects(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Runtime.BindingRedirectResolver.GetBindingRedirects(String)</td></tr><tr><td class="datacell_left0">GetBindingRedirects(IEnumerable&lt;IAssembly&gt;)</td><td class="datacell_right0">16</td><td class="datacell_left0">NuGet.Runtime.BindingRedirectResolver.GetBindingRedirects(IEnumerable &lt;IAssembly&gt;)</td></tr><tr><td class="datacell_left1">get_Name()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.get_Name()</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.set_Culture(String)</td></tr><tr><td class="datacell_left0">get_PublicKeyToken()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding.get_PublicKeyToken()</td></tr><tr><td class="datacell_left1">get_ProcessorArchitecture()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.get_ProcessorArchitecture()</td></tr><tr><td class="datacell_left0">get_NewVersion()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding.get_NewVersion()</td></tr><tr><td class="datacell_left1">get_OldVersion()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.get_OldVersion()</td></tr><tr><td class="datacell_left0">set_OldVersion(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding.set_OldVersion(String)</td></tr><tr><td class="datacell_left1">get_CodeBaseHref()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.get_CodeBaseHref()</td></tr><tr><td class="datacell_left0">get_CodeBaseVersion()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding.get_CodeBaseVersion()</td></tr><tr><td class="datacell_left1">get_PublisherPolicy()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Runtime.AssemblyBinding.get_PublisherPolicy()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Runtime.AssemblyBinding..ctor()</td></tr><tr><td class="datacell_left1">RemoveBindingRedirects(IEnumerable&lt;AssemblyBinding&gt;)</td><td class="datacell_right1">18</td><td class="datacell_left1">NuGet.Runtime.BindingRedirectManager.RemoveBindingRedirects (IEnumerable&lt;AssemblyBinding&gt;)</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_AtomFeedPackageRepo_InvalidFeedContent()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources .get_AtomFeedPackageRepo_InvalidFeedContent()</td></tr><tr><td class="datacell_left0">get_AtomFeedPackageRepo_InvalidFeedSource()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources .get_AtomFeedPackageRepo_InvalidFeedSource()</td></tr><tr><td class="datacell_left1">get_Debug_DependencyAlreadyReferenced()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Debug_DependencyAlreadyReferenced()</td></tr><tr><td class="datacell_left0">get_Debug_ProcessingDependencies()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Debug_ProcessingDependencies()</td></tr><tr><td class="datacell_left1">get_Log_AttemptingToRetrievePackageReferenceFromSource()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources .get_Log_AttemptingToRetrievePackageReferenceFromSource()</td></tr><tr><td class="datacell_left0">get_Log_LeavingPackageInstalled()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Log_LeavingPackageInstalled()</td></tr><tr><td class="datacell_left1">get_Log_ModifiedConfiguration()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Log_ModifiedConfiguration()</td></tr><tr><td class="datacell_left0">get_Log_PackageUpToDate()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Log_PackageUpToDate()</td></tr><tr><td class="datacell_left1">get_Log_UpdatingToSpecificVersion()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Log_UpdatingToSpecificVersion()</td></tr><tr><td class="datacell_left0">get_Manifest_DependencyIdRequired()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_Manifest_DependencyIdRequired()</td></tr><tr><td class="datacell_left1">get_Manifest_RequiredMetadataMissing()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_Manifest_RequiredMetadataMissing()</td></tr><tr><td class="datacell_left0">get_PackageHasDependentReference()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_PackageHasDependentReference()</td></tr><tr><td class="datacell_left1">get_PackageHasMultipleDependentsReferenced()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources .get_PackageHasMultipleDependentsReferenced()</td></tr><tr><td class="datacell_left0">get_PackageHasNoProjectContent()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_PackageHasNoProjectContent()</td></tr><tr><td class="datacell_left1">get_PackageMissingRequiredProperty()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_PackageMissingRequiredProperty()</td></tr><tr><td class="datacell_left0">get_PackageNotInstalled()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_PackageNotInstalled()</td></tr><tr><td class="datacell_left1">get_PackageSourceMustBePhysicalPath()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_PackageSourceMustBePhysicalPath()</td></tr><tr><td class="datacell_left0">get_ReferenceDoesNotExist()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources.get_ReferenceDoesNotExist()</td></tr><tr><td class="datacell_left1">get_TagMissingHash()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_TagMissingHash()</td></tr><tr><td class="datacell_left0">get_Warning_RemovingPackageReferenceWillBreakDependents()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Resources.NuGetResources .get_Warning_RemovingPackageReferenceWillBreakDependents()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Resources.NuGetResources..ctor()</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">6</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Between()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThan()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left0">get_Console()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackCommand.get_Console()</td></tr><tr><td class="datacell_left1">get_OutputDirectory()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackCommand.get_OutputDirectory()</td></tr><tr><td class="datacell_left0">set_OutputDirectory(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackCommand.set_OutputDirectory(String)</td></tr><tr><td class="datacell_left1">get_BasePath()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.PackCommand.get_BasePath()</td></tr><tr><td class="datacell_left0">set_BasePath(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.PackCommand.set_BasePath(String)</td></tr><tr><td class="datacell_left1">.ctor(IConsole)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.PackCommand..ctor(IConsole)</td></tr><tr><td class="datacell_left0">set_AltName(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.set_AltName(String)</td></tr><tr><td class="datacell_left1">set_CommandName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_CommandName(String)</td></tr><tr><td class="datacell_left0">get_Description()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_Description()</td></tr><tr><td class="datacell_left1">set_Description(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_Description(String)</td></tr><tr><td class="datacell_left0">get_DescriptionResourceName()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_DescriptionResourceName()</td></tr><tr><td class="datacell_left1">set_DescriptionResourceName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_DescriptionResourceName(String)</td></tr><tr><td class="datacell_left0">set_MinArgs(Int32)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.set_MinArgs(Int32)</td></tr><tr><td class="datacell_left1">set_MaxArgs(Int32)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_MaxArgs(Int32)</td></tr><tr><td class="datacell_left0">get_UsageSummary()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_UsageSummary()</td></tr><tr><td class="datacell_left1">set_UsageSummary(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_UsageSummary(String)</td></tr><tr><td class="datacell_left0">get_UsageSummaryResourceName()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_UsageSummaryResourceName()</td></tr><tr><td class="datacell_left1">set_UsageSummaryResourceName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_UsageSummaryResourceName(String)</td></tr><tr><td class="datacell_left0">get_UsageDescription()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_UsageDescription()</td></tr><tr><td class="datacell_left1">set_UsageDescription(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_UsageDescription(String)</td></tr><tr><td class="datacell_left0">get_UsageDescriptionResourceName()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_UsageDescriptionResourceName()</td></tr><tr><td class="datacell_left1">set_UsageDescriptionResourceName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_UsageDescriptionResourceName(String)</td></tr><tr><td class="datacell_left0">get_ResourceType()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.CommandAttribute.get_ResourceType()</td></tr><tr><td class="datacell_left1">set_ResourceType(Type)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.CommandAttribute.set_ResourceType(Type)</td></tr><tr><td class="datacell_left0">.ctor(String,String)</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGet.CommandAttribute..ctor(String,String)</td></tr><tr><td class="datacell_left1">.ctor(Type,String,String)</td><td class="datacell_right1">6</td><td class="datacell_left1">NuGet.CommandAttribute..ctor(Type,String,String)</td></tr><tr><td class="datacell_left0">RemoveNullableFromType(Type)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.CommandLineUtility.RemoveNullableFromType(Type)</td></tr><tr><td class="datacell_left1">TypeAllowsNull(Type)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.CommandLineUtility.TypeAllowsNull(Type)</td></tr><tr><td class="datacell_left0">get_HelpCommand()</td><td class="datacell_right0">3</td><td class="datacell_left0">NuGet.Program.get_HelpCommand()</td></tr><tr><td class="datacell_left1">get_Commands()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Program.get_Commands()</td></tr><tr><td class="datacell_left0">set_Commands(List&lt;ICommand&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Program.set_Commands(List&lt;ICommand&gt;)</td></tr><tr><td class="datacell_left1">get_Manager()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Program.get_Manager()</td></tr><tr><td class="datacell_left0">set_Manager(ICommandManager)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Program.set_Manager(ICommandManager)</td></tr><tr><td class="datacell_left1">Initialize()</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.Program.Initialize()</td></tr><tr><td class="datacell_left0">Main(String[])</td><td class="datacell_right0">18</td><td class="datacell_left0">NuGet.Program.Main(String[])</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">NuGet.Program..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">2</td><td class="datacell_left0">NuGet.CommandManager..ctor()</td></tr><tr><td class="datacell_left1">set_AltName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.OptionAttribute.set_AltName(String)</td></tr><tr><td class="datacell_left0">get_Description()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.OptionAttribute.get_Description()</td></tr><tr><td class="datacell_left1">set_Description(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.OptionAttribute.set_Description(String)</td></tr><tr><td class="datacell_left0">get_DescriptionResourceName()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.OptionAttribute.get_DescriptionResourceName()</td></tr><tr><td class="datacell_left1">set_DescriptionResourceName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.OptionAttribute.set_DescriptionResourceName(String)</td></tr><tr><td class="datacell_left0">get_ResourceType()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.OptionAttribute.get_ResourceType()</td></tr><tr><td class="datacell_left1">set_ResourceType(Type)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.OptionAttribute.set_ResourceType(Type)</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">2</td><td class="datacell_left0">NuGet.OptionAttribute..ctor(String)</td></tr><tr><td class="datacell_left1">.ctor(Type,String)</td><td class="datacell_right1">3</td><td class="datacell_left1">NuGet.OptionAttribute..ctor(Type,String)</td></tr><tr><td class="datacell_left0">ArgCountTooHigh(ICommand)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.CommandLineParser.ArgCountTooHigh(ICommand)</td></tr><tr><td class="datacell_left1">ArgCountTooLow(ICommand)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.CommandLineParser.ArgCountTooLow(ICommand)</td></tr><tr><td class="datacell_left0">ExtractOptions(ICommand,String)</td><td class="datacell_right0">38</td><td class="datacell_left0">NuGet.CommandLineParser.ExtractOptions(ICommand,String)</td></tr><tr><td class="datacell_left1">GetNextCommandLineItem(String&amp;)</td><td class="datacell_right1">14</td><td class="datacell_left1">NuGet.CommandLineParser.GetNextCommandLineItem(String&amp;)</td></tr><tr><td class="datacell_left0">get_Console()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.HelpCommand.get_Console()</td></tr><tr><td class="datacell_left1">ViewHelp()</td><td class="datacell_right1">16</td><td class="datacell_left1">NuGet.HelpCommand.ViewHelp()</td></tr><tr><td class="datacell_left0">ViewHelpForCommand(String)</td><td class="datacell_right0">29</td><td class="datacell_left0">NuGet.HelpCommand.ViewHelpForCommand(String)</td></tr><tr><td class="datacell_left1">.ctor(ICommandManager,IConsole)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.HelpCommand..ctor(ICommandManager,IConsole)</td></tr><tr><td class="datacell_left0">.ctor(ICommandManager,IConsole,String,String,String)</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.HelpCommand..ctor(ICommandManager,IConsole,String,String,String)</td></tr><tr><td class="datacell_left1">get_Source()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.ListCommand.get_Source()</td></tr><tr><td class="datacell_left0">set_Source(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.ListCommand.set_Source(String)</td></tr><tr><td class="datacell_left1">get_Verbose()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.ListCommand.get_Verbose()</td></tr><tr><td class="datacell_left0">set_Verbose(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.ListCommand.set_Verbose(Boolean)</td></tr><tr><td class="datacell_left1">get_Console()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.ListCommand.get_Console()</td></tr><tr><td class="datacell_left0">get_RepositoryFactory()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.ListCommand.get_RepositoryFactory()</td></tr><tr><td class="datacell_left1">GetPackages()</td><td class="datacell_right1">7</td><td class="datacell_left1">NuGet.Commands.ListCommand.GetPackages()</td></tr><tr><td class="datacell_left0">.ctor(IPackageRepositoryFactory,IConsole)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.Commands.ListCommand..ctor(IPackageRepositoryFactory,IConsole)</td></tr><tr><td class="datacell_left1">get_Console()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.PushCommand.get_Console()</td></tr><tr><td class="datacell_left0">set_Console(IConsole)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.PushCommand.set_Console(IConsole)</td></tr><tr><td class="datacell_left1">get_Publish()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.PushCommand.get_Publish()</td></tr><tr><td class="datacell_left0">set_Publish(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.PushCommand.set_Publish(Boolean)</td></tr><tr><td class="datacell_left1">get_Source()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.Commands.PushCommand.get_Source()</td></tr><tr><td class="datacell_left0">set_Source(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.Commands.PushCommand.set_Source(String)</td></tr><tr><td class="datacell_left1">.ctor(IConsole)</td><td class="datacell_right1">3</td><td class="datacell_left1">NuGet.Commands.PushCommand..ctor(IConsole)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGet.Common.Console..ctor()</td></tr><tr><td class="datacell_left1">get_ResourceManager()</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ResourceManager()</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(CultureInfo)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left0">get_HelpCommandDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_HelpCommandDescription()</td></tr><tr><td class="datacell_left1">get_HelpCommandUsageDecription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_HelpCommandUsageDecription()</td></tr><tr><td class="datacell_left0">get_HelpCommandUsageSummary()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_HelpCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_ListCommandDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandDescription()</td></tr><tr><td class="datacell_left0">get_ListCommandSourceDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_ListCommandSourceDescription()</td></tr><tr><td class="datacell_left1">get_ListCommandUsageDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandUsageDescription()</td></tr><tr><td class="datacell_left0">get_ListCommandUsageSummary()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_ListCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_ListCommandVerboseListDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_ListCommandVerboseListDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandBasePathDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandBasePathDescription()</td></tr><tr><td class="datacell_left1">get_PackageCommandDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PackageCommandDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandOutputDirDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandOutputDirDescription()</td></tr><tr><td class="datacell_left1">get_PackageCommandUsageDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PackageCommandUsageDescription()</td></tr><tr><td class="datacell_left0">get_PackageCommandUsageSummary()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PackageCommandUsageSummary()</td></tr><tr><td class="datacell_left1">get_PushCommandDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandDescription()</td></tr><tr><td class="datacell_left0">get_PushCommandPublishDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PushCommandPublishDescription()</td></tr><tr><td class="datacell_left1">get_PushCommandSourceDescription()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandSourceDescription()</td></tr><tr><td class="datacell_left0">get_PushCommandUsageDescription()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_PushCommandUsageDescription()</td></tr><tr><td class="datacell_left1">get_PushCommandUsageSummary()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.Common.NuGetResources.get_PushCommandUsageSummary()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.Common.NuGetResources..ctor()</td></tr><tr><td class="datacell_left1">get_ResourceManager()</td><td class="datacell_right1">6</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_ResourceManager()</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(CultureInfo)</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Between()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThan()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left1">FindPackage(String,Version)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.VsPackageSourceRepository.FindPackage(String ,Version)</td></tr><tr><td class="datacell_left0">.ctor(IPackageRepositoryFactory,IPackageSourceProvider)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.VisualStudio.VsPackageSourceRepository..ctor (IPackageRepositoryFactory,IPackageSourceProvider)</td></tr><tr><td class="datacell_left1">.ctor(IServiceProvider)</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.VisualStudio.VsPackageSourceSettingsManager..ctor (IServiceProvider)</td></tr><tr><td class="datacell_left0">Initialize(Package,Assembly[])</td><td class="datacell_right0">14</td><td class="datacell_left0">NuGet.VisualStudio.ServiceLocator.Initialize(Package,Assembly[])</td></tr><tr><td class="datacell_left1">IsValidLocalPath(String)</td><td class="datacell_right1">3</td><td class="datacell_left1">NuGet.VisualStudio.PathValidator.IsValidLocalPath(String)</td></tr><tr><td class="datacell_left0">IsValidUncPath(String)</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.VisualStudio.PathValidator.IsValidUncPath(String)</td></tr><tr><td class="datacell_left1">IsValidUrl(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.PathValidator.IsValidUrl(String)</td></tr><tr><td class="datacell_left0">GetActiveProject(_DTE)</td><td class="datacell_right0">9</td><td class="datacell_left0">NuGet.VisualStudio.DTEExtensions.GetActiveProject(_DTE)</td></tr><tr><td class="datacell_left1">.ctor(IPackageSourceSettingsManager)</td><td class="datacell_right1">5</td><td class="datacell_left1">NuGet.VisualStudio.VsPackageSourceProvider..ctor (IPackageSourceSettingsManager)</td></tr><tr><td class="datacell_left0">.ctor(DTE,IComponentModel)</td><td class="datacell_right0">7</td><td class="datacell_left0">NuGet.VisualStudio.SourceControlResolver..ctor(DTE,IComponentModel)</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.RepositorySettings..ctor(ISolutionManager)</td></tr><tr><td class="datacell_left0">.ctor(ISolutionManager,IFileSystem)</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.VisualStudio.RepositorySettings..ctor(ISolutionManager ,IFileSystem)</td></tr><tr><td class="datacell_left1">.ctor(IPackageSourceProvider)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.CachedRepositoryFactory..ctor (IPackageSourceProvider)</td></tr><tr><td class="datacell_left0">.ctor(IPackageRepositoryFactory,IPackageSourceProvider)</td><td class="datacell_right0">8</td><td class="datacell_left0">NuGet.VisualStudio.CachedRepositoryFactory..ctor (IPackageRepositoryFactory,IPackageSourceProvider)</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager,IPackageRepositoryFactory ,ISourceControlResolver,IRepositorySettings)</td><td class="datacell_right1">14</td><td class="datacell_left1">NuGet.VisualStudio.VsPackageManagerFactory..ctor(ISolutionManager ,IPackageRepositoryFactory,ISourceControlResolver,IRepositorySettings)</td></tr><tr><td class="datacell_left0">TryGetFolder(ProjectItems,String,ProjectItem&amp;)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.ProjectExtensions.TryGetFolder(ProjectItems,String ,ProjectItem&amp;)</td></tr><tr><td class="datacell_left1">TryGetFile(ProjectItems,String,ProjectItem&amp;)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.ProjectExtensions.TryGetFile(ProjectItems,String ,ProjectItem&amp;)</td></tr><tr><td class="datacell_left0">TryGetProjectItem(ProjectItems,String,IEnumerable&lt;String&gt;,ProjectItem&amp; )</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.VisualStudio.ProjectExtensions.TryGetProjectItem(ProjectItems ,String,IEnumerable&lt;String&gt;,ProjectItem&amp;)</td></tr><tr><td class="datacell_left1">IsWebProject(Project)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.VisualStudio.ProjectExtensions.IsWebProject(Project)</td></tr><tr><td class="datacell_left0">IsUnloaded(Project)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.ProjectExtensions.IsUnloaded(Project)</td></tr><tr><td class="datacell_left1">ToVsHierarchy(Project)</td><td class="datacell_right1">5</td><td class="datacell_left1">NuGet.VisualStudio.ProjectExtensions.ToVsHierarchy(Project)</td></tr><tr><td class="datacell_left0">get_Version()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.get_Version()</td></tr><tr><td class="datacell_left1">set_Version(Version)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.set_Version(Version)</td></tr><tr><td class="datacell_left0">get_IgnoreDependencies()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.get_IgnoreDependencies ()</td></tr><tr><td class="datacell_left1">set_IgnoreDependencies(SwitchParameter)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.set_IgnoreDependencies (SwitchParameter)</td></tr><tr><td class="datacell_left0">get_Source()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.get_Source()</td></tr><tr><td class="datacell_left1">set_Source(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet.set_Source(String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager,IVsPackageManagerFactory)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.InstallPackageCmdlet..ctor(ISolutionManager ,IVsPackageManagerFactory)</td></tr><tr><td class="datacell_left0">get_Version()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.get_Version()</td></tr><tr><td class="datacell_left1">set_Version(Version)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.set_Version(Version)</td></tr><tr><td class="datacell_left0">get_IgnoreDependencies()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.get_IgnoreDependencies( )</td></tr><tr><td class="datacell_left1">set_IgnoreDependencies(SwitchParameter)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.set_IgnoreDependencies (SwitchParameter)</td></tr><tr><td class="datacell_left0">get_Source()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.get_Source()</td></tr><tr><td class="datacell_left1">set_Source(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet.set_Source(String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager,IVsPackageManagerFactory)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UpdatePackageCmdlet..ctor(ISolutionManager ,IVsPackageManagerFactory)</td></tr><tr><td class="datacell_left0">get_Name()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet.get_Name()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet.set_Name(String)</td></tr><tr><td class="datacell_left0">get_All()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet.get_All()</td></tr><tr><td class="datacell_left1">set_All(SwitchParameter)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet.set_All(SwitchParameter)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.GetProjectCmdlet..ctor(ISolutionManager)</td></tr><tr><td class="datacell_left0">get_Project()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.get_Project()</td></tr><tr><td class="datacell_left1">set_Project(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.set_Project(String)</td></tr><tr><td class="datacell_left0">get_SpecFile()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.get_SpecFile()</td></tr><tr><td class="datacell_left1">set_SpecFile(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.set_SpecFile(String)</td></tr><tr><td class="datacell_left0">get_TargetFile()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.get_TargetFile()</td></tr><tr><td class="datacell_left1">set_TargetFile(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.set_TargetFile(String)</td></tr><tr><td class="datacell_left0">GetPackageFilePath(String,String,String,Version)</td><td class="datacell_right0">6</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.GetPackageFilePath(String ,String,String,Version)</td></tr><tr><td class="datacell_left1">RemoveExludedFiles(PackageBuilder)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet.RemoveExludedFiles (PackageBuilder)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager,IVsPackageManagerFactory)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.NewPackageCmdlet..ctor(ISolutionManager ,IVsPackageManagerFactory)</td></tr><tr><td class="datacell_left0">get_Project()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet.get_Project()</td></tr><tr><td class="datacell_left1">set_Project(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet.set_Project (String)</td></tr><tr><td class="datacell_left0">WriteError(String)</td><td class="datacell_right0">2</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet.WriteError(String )</td></tr><tr><td class="datacell_left1">WriteError(Exception)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet.WriteError (Exception)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager)</td><td class="datacell_right1">2</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.AddBindingRedirectsCmdlet..ctor (ISolutionManager)</td></tr><tr><td class="datacell_left0">get_Version()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet.get_Version()</td></tr><tr><td class="datacell_left1">set_Version(Version)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet.set_Version(Version)</td></tr><tr><td class="datacell_left0">get_Force()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet.get_Force()</td></tr><tr><td class="datacell_left1">set_Force(SwitchParameter)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet.set_Force (SwitchParameter)</td></tr><tr><td class="datacell_left0">get_RemoveDependencies()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet .get_RemoveDependencies()</td></tr><tr><td class="datacell_left1">set_RemoveDependencies(SwitchParameter)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet .set_RemoveDependencies(SwitchParameter)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet..ctor()</td></tr><tr><td class="datacell_left1">.ctor(ISolutionManager,IVsPackageManagerFactory)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.UninstallPackageCmdlet..ctor (ISolutionManager,IVsPackageManagerFactory)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Cmdlets.FindPackage..ctor()</td></tr><tr><td class="datacell_left1">.ctor(IPackageRepositoryFactory,IPackageSourceProvider ,ISolutionManager,IVsPackageManagerFactory)</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Cmdlets.FindPackage..ctor(IPackageRepositoryFactory ,IPackageSourceProvider,ISolutionManager,IVsPackageManagerFactory)</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Cmdlet_PackageForSolutionOnly()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources .get_Cmdlet_PackageForSolutionOnly()</td></tr><tr><td class="datacell_left0">get_Console_DisclaimerText()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources.get_Console_DisclaimerText()</td></tr><tr><td class="datacell_left1">get_Console_GroupPolicyError()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources.get_Console_GroupPolicyError( )</td></tr><tr><td class="datacell_left0">get_Dialog_DisclaimerText()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources.get_Dialog_DisclaimerText()</td></tr><tr><td class="datacell_left1">get_DTE_InvalidProject()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources.get_DTE_InvalidProject()</td></tr><tr><td class="datacell_left0">get_PackageCannotBeRemovedBecauseItIsInUse()</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.VisualStudio.Resources.VsResources .get_PackageCannotBeRemovedBecauseItIsInUse()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.VisualStudio.Resources.VsResources..ctor()</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">6</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">get_Argument_Cannot_Be_Null_Or_Empty()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Cannot_Be_Null_Or_Empty()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Between()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Between()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_Enum_Member()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Enum_Member()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_GreaterThan()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_GreaterThanOrEqualTo()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_GreaterThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_LessThan()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThan()</td></tr><tr><td class="datacell_left1">get_Argument_Must_Be_LessThanOrEqualTo()</td><td class="datacell_right1">1</td><td class="datacell_left1">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_LessThanOrEqualTo()</td></tr><tr><td class="datacell_left0">get_Argument_Must_Be_Null_Or_Non_Empty()</td><td class="datacell_right0">1</td><td class="datacell_left0">Microsoft.Internal.Web.Utils.CommonResources .get_Argument_Must_Be_Null_Or_Non_Empty()</td></tr><tr><td class="datacell_left1">get_DisplayName()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.DisplayNameAttribute.get_DisplayName()</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">3</td><td class="datacell_left0">NuGetConsole.DisplayNameAttribute..ctor(String)</td></tr><tr><td class="datacell_left1">Execute(IOleCommandTarget,Guid,UInt32,Object)</td><td class="datacell_right1">9</td><td class="datacell_left1">NuGetConsole.ExtensionMethods.Execute(IOleCommandTarget,Guid,UInt32 ,Object)</td></tr><tr><td class="datacell_left0">.ctor(Int32,Int32,IList&lt;String&gt;)</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.SimpleExpansion..ctor(Int32,Int32,IList&lt;String&gt;)</td></tr><tr><td class="datacell_left1">.ctor(TokenType,Int32,Int32,Int32,Int32)</td><td class="datacell_right1">6</td><td class="datacell_left1">NuGetConsole.Token..ctor(TokenType,Int32,Int32,Int32,Int32)</td></tr><tr><td class="datacell_left0">get_HostName()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.HostNameAttribute.get_HostName()</td></tr><tr><td class="datacell_left1">.ctor(String)</td><td class="datacell_right1">3</td><td class="datacell_left1">NuGetConsole.HostNameAttribute..ctor(String)</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Resources.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGetConsole.Resources.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGetConsole.Resources.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGetConsole.Resources..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">5</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsoleToolWindow..ctor()</td></tr><tr><td class="datacell_left1">get_WpfConsoleService()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.CompletionSourceProvider .get_WpfConsoleService()</td></tr><tr><td class="datacell_left0">set_WpfConsoleService(IWpfConsoleService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.CompletionSourceProvider .set_WpfConsoleService(IWpfConsoleService)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.CompletionSourceProvider. .ctor()</td></tr><tr><td class="datacell_left0">get_WpfConsoleService()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.ClassifierProvider .get_WpfConsoleService()</td></tr><tr><td class="datacell_left1">set_WpfConsoleService(IWpfConsoleService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.ClassifierProvider .set_WpfConsoleService(IWpfConsoleService)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.ClassifierProvider..ctor()</td></tr><tr><td class="datacell_left1">set_ServiceProvider(IServiceProvider)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_ServiceProvider(IServiceProvider)</td></tr><tr><td class="datacell_left0">set_WpfConsoleService(IWpfConsoleService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_WpfConsoleService(IWpfConsoleService)</td></tr><tr><td class="datacell_left1">get_HostProviders()</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .get_HostProviders()</td></tr><tr><td class="datacell_left0">set_HostProviders(IEnumerable&lt;Lazy&lt;IHostProvider,IHostMetadata&gt;&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .set_HostProviders(IEnumerable&lt;Lazy&lt;IHostProvider,IHostMetadata&gt;&gt;)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow..ctor()</td></tr><tr><td class="datacell_left0">get_ParentDispatcher()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.ConsoleDispatcher+Dispatcher .get_ParentDispatcher()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGetConsole.Implementation.Console.OrderedSpans..ctor()</td></tr><tr><td class="datacell_left0">GetTokenizerClassifications(ITextSnapshot,IList&lt;Span&gt;)</td><td class="datacell_right0">19</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleClassifier .GetTokenizerClassifications(ITextSnapshot,IList&lt;Span&gt;)</td></tr><tr><td class="datacell_left1">set_StandardClassificationService(IStandardClassificationService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_StandardClassificationService(IStandardClassificationService)</td></tr><tr><td class="datacell_left0">set_ClassificationTypeRegistryService (IClassificationTypeRegistryService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_ClassificationTypeRegistryService (IClassificationTypeRegistryService)</td></tr><tr><td class="datacell_left1">set_ClassificationFormatMapService(IClassificationFormatMapService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.TextFormatClassifierProvider .set_ClassificationFormatMapService(IClassificationFormatMapService)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGetConsole.Implementation.Console.TextFormatClassifierProvider..ctor ()</td></tr><tr><td class="datacell_left1">set_ContentTypeRegistryService(IContentTypeRegistryService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_ContentTypeRegistryService(IContentTypeRegistryService)</td></tr><tr><td class="datacell_left0">set_VsEditorAdaptersFactoryService(IVsEditorAdaptersFactoryService)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_VsEditorAdaptersFactoryService(IVsEditorAdaptersFactoryService)</td></tr><tr><td class="datacell_left1">set_EditorOptionsFactoryService(IEditorOptionsFactoryService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_EditorOptionsFactoryService(IEditorOptionsFactoryService)</td></tr><tr><td class="datacell_left0">set_CompletionBroker(ICompletionBroker)</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .set_CompletionBroker(ICompletionBroker)</td></tr><tr><td class="datacell_left1">set_TextFormatClassifierProvider(ITextFormatClassifierProvider)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_TextFormatClassifierProvider(ITextFormatClassifierProvider)</td></tr><tr><td class="datacell_left0">get_CommandExpansionProviders()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .get_CommandExpansionProviders()</td></tr><tr><td class="datacell_left1">set_CommandExpansionProviders(List&lt;Lazy&lt;ICommandExpansionProvider ,IHostNameMetadata&gt;&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_CommandExpansionProviders(List&lt;Lazy&lt;ICommandExpansionProvider ,IHostNameMetadata&gt;&gt;)</td></tr><tr><td class="datacell_left0">get_CommandTokenizerProviders()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .get_CommandTokenizerProviders()</td></tr><tr><td class="datacell_left1">set_CommandTokenizerProviders(List&lt;Lazy&lt;ICommandTokenizerProvider ,IHostNameMetadata&gt;&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_CommandTokenizerProviders(List&lt;Lazy&lt;ICommandTokenizerProvider ,IHostNameMetadata&gt;&gt;)</td></tr><tr><td class="datacell_left0">get_StandardClassificationService()</td><td class="datacell_right0">0</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService .get_StandardClassificationService()</td></tr><tr><td class="datacell_left1">set_StandardClassificationService(IStandardClassificationService)</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleService .set_StandardClassificationService(IStandardClassificationService)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleService..ctor()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">656</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">1.5845</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">38</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">3.6364</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">13.224</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 2 methods on 2591 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Afferent&nbsp;(incoming)&nbsp;coupling&nbsp;method&nbsp;level</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">MethodCa</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">30</b></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Afferent coupling (MethodCa)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">get_ResourceManager()</td><td class="datacell_right1">64</td><td class="datacell_left1">NuGet.Resources.NuGetResources.get_ResourceManager()</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">38</td><td class="datacell_left0">NuGet.Common.NuGetResources.get_ResourceManager()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">102</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">51</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">38</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">64</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">13</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">169</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 39 fields on 981 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Fields&nbsp;should&nbsp;be&nbsp;marked&nbsp;as&nbsp;ReadOnly&nbsp;when&nbsp;possible</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">FIELDS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">IsImmutable</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInitOnly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">fields</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">_packageInstalling</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.PackageManager._packageInstalling</td></tr><tr><td class="datacell_left0">_packageInstalled</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.PackageManager._packageInstalled</td></tr><tr><td class="datacell_left1">_packageUninstalling</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.PackageManager._packageUninstalling</td></tr><tr><td class="datacell_left0">_packageUninstalled</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.PackageManager._packageUninstalled</td></tr><tr><td class="datacell_left1">_package</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.DataServicePackage._package</td></tr><tr><td class="datacell_left0">_targetFramework</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.ZipPackageAssemblyReference._targetFramework</td></tr><tr><td class="datacell_left1">_packageReferenceAdding</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.ProjectManager._packageReferenceAdding</td></tr><tr><td class="datacell_left0">_packageReferenceAdded</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.ProjectManager._packageReferenceAdded</td></tr><tr><td class="datacell_left1">_packageReferenceRemoving</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.ProjectManager._packageReferenceRemoving</td></tr><tr><td class="datacell_left0">_packageReferenceRemoved</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.ProjectManager._packageReferenceRemoved</td></tr><tr><td class="datacell_left1">_ignoreDependencies</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.InstallWalker._ignoreDependencies</td></tr><tr><td class="datacell_left0">_forcedRemoved</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.UninstallWalker._forcedRemoved</td></tr><tr><td class="datacell_left1">_skippedPackages</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.UninstallWalker._skippedPackages</td></tr><tr><td class="datacell_left0">_removeDependencies</td><td class="datacell_right0">1</td><td class="datacell_left0">NuGet.UninstallWalker._removeDependencies</td></tr><tr><td class="datacell_left1">_checkAssemly</td><td class="datacell_right1">1</td><td class="datacell_left1">NuGet.ClosureEvaluator._checkAssemly</td></tr><tr><td class="datacell_left0">_streamFactory</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.ZipPackage._streamFactory</td></tr><tr><td class="datacell_left1">_packageCache</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.LocalPackageRepository._packageCache</td></tr><tr><td class="datacell_left0">_httpClient</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.PackageDownloader._httpClient</td></tr><tr><td class="datacell_left1">_packageFactory</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.PackageDownloader._packageFactory</td></tr><tr><td class="datacell_left0">_hashProvider</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.PackageDownloader._hashProvider</td></tr><tr><td class="datacell_left1">_httpClient</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGet.PackageRepositoryFactory._httpClient</td></tr><tr><td class="datacell_left0">_commandManager</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGet.CommandLineParser._commandManager</td></tr><tr><td class="datacell_left1">_factories</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.VisualStudio.VsProjectSystemFactory._factories</td></tr><tr><td class="datacell_left0">ActiveHostChanged</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.PowerConsole.PowerConsoleWindow .ActiveHostChanged</td></tr><tr><td class="datacell_left1">ExecuteInputLine</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.ConsoleDispatcher.ExecuteInputLine</td></tr><tr><td class="datacell_left0">_marshaler</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console .ConsoleDispatcher+AsyncHostConsoleDispatcher._marshaler</td></tr><tr><td class="datacell_left1">NewColorSpan</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsole.NewColorSpan</td></tr><tr><td class="datacell_left0">ConsoleCleared</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsole.ConsoleCleared</td></tr><tr><td class="datacell_left1">_inputs</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.InputHistory._inputs</td></tr><tr><td class="datacell_left0">_console</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleCompletionSource ._console</td></tr><tr><td class="datacell_left1">_items</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.OrderedSpans&lt;T&gt;._items</td></tr><tr><td class="datacell_left0">_getSpan</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.OrderedSpans&lt;T&gt;._getSpan</td></tr><tr><td class="datacell_left1">_getSpan</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.OrderedSpans&lt;T&gt;+SpanStartComparer ._getSpan</td></tr><tr><td class="datacell_left0">_commandLineSpans</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleClassifier ._commandLineSpans</td></tr><tr><td class="datacell_left1">_colorSpans</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleClassifier._colorSpans</td></tr><tr><td class="datacell_left0">_console</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.WpfConsoleClassifier._console</td></tr><tr><td class="datacell_left1">ClassificationChanged</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.WpfConsoleClassifier .ClassificationChanged</td></tr><tr><td class="datacell_left0">_textView</td><td class="datacell_right0">4</td><td class="datacell_left0">NuGetConsole.Implementation.Console.TextFormatClassifier._textView</td></tr><tr><td class="datacell_left1">_classificationMap</td><td class="datacell_right1">4</td><td class="datacell_left1">NuGetConsole.Implementation.Console.TextFormatClassifier ._classificationMap</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">143</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">3.6667</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">4</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0.99572</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0.99145</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>NuGet  (analysis done 1 day ago, Sun 19 Dec  17:09 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 1 fields on 981 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Fields&nbsp;should&nbsp;be&nbsp;declared&nbsp;as&nbsp;private</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">FIELDS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsPrivate</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br><br>&nbsp;</font><font color="#008000">//&nbsp;These&nbsp;conditions&nbsp;filter&nbsp;cases&nbsp;where&nbsp;fields&nbsp;<br></font>&nbsp;<font color="#008000">//&nbsp;doesn't&nbsp;represent&nbsp;state&nbsp;that&nbsp;should&nbsp;be&nbsp;encapsulated.&nbsp;<br></font>&nbsp;<font color="#000000">!</font><font color="#000064">IsInFrameworkAssembly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsSpecialName</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInitOnly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsLiteral</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsEnumValue</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">fields</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">Default</td><td class="datacell_right1">0</td><td class="datacell_left1">NuGet.ProjectManager+PackageFileComparer.Default</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr></body></html>