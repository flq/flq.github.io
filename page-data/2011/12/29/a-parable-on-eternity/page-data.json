{"componentChunkName":"component---src-templates-article-template-js","path":"/2011/12/29/a-parable-on-eternity","result":{"data":{"mdx":{"excerpt":"I don't know why but reading Udi Dahan's post on  inifinite scalability \nreminded me of the following little parable. I trace it back to my Grandmaâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A parable on eternity\",\n  \"layout\": \"post\",\n  \"tags\": [\"loosely-coupled\"],\n  \"date\": \"2011-12-29T13:38:00.000Z\",\n  \"redirect_from\": \"/go/211/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I don't know why but reading Udi Dahan's post on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.udidahan.com/2011/12/29/the-myth-of-infinite-scalability\"\n  }, \"inifinite scalability\"), \"\\nreminded me of the following little parable. I trace it back to my Grandma who's since then long gone and was born in 1904 (one year before special realitivity was published, 32 years before Turing's machine was described).\"), mdx(\"p\", null, \"It is about eternity:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"Imagine a bird. Every year, on its travels, it visits and stops by a large mountain, a mountain so large that Mount Everest pales in comparison. Every year, that little bird polishes its beak against the cold, hard stone of that mountain. The years pass by, and every time the bird polishes its beak, some substance of the mountain is lost, ground away by the bird's hard bill.\"), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"One day, the mountain was gone, ground down by countless visits of that immortal bird. That was the moment were one second of eternity had passed.\\\"\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2011/12/29/a-parable-on-eternity"},"frontmatter":{"date":"2011-12-29","path":null,"title":"A parable on eternity","tags":["loosely-coupled"]}}},"pageContext":{"title":"A parable on eternity","previous":{"fields":{"slug":"/2011/12/05/defining-contiguous-activities-with-idisposable","published":true},"frontmatter":{"title":"defining contiguous activities with IDisposable","tags":["software-development","dotnet","patterns","fsharp"],"date":"2011/12/05"}},"next":{"fields":{"slug":"/2011/12/29/bulletin-on-planet-earth","published":true},"frontmatter":{"title":"bulletin on planet earth","tags":["loosely-coupled","sci-fi"],"date":"2011/12/29"}}}},"staticQueryHashes":["256249292","2581731408"]}