{"componentChunkName":"component---src-templates-article-template-js","path":"/2011/01/03/creating-and-then-using-a-local-openwrap-repository","result":{"data":{"markdownRemark":{"html":"<p>When I looked at this blog post here about <a href=\"http://gregorsuttie.wordpress.com/2011/01/03/using-a-nuget-local-repository/\">setting up a NuGet local repository</a> I couldn’t help but write up the necessary steps to get a local repository with OpenWrap:</p>\n<h4>I’m not sure so let’s ask OpenWrap</h4>\n <div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:812469c5-0cb0-4c63-8c15-c81123a09de7:3c5d2646-cdea-43cf-ac5f-1db05b96e501\" class=\"wlWriterEditableSmartContent\"><pre name=\"code\" class=\"c\">PS C:\\dotnet\\dev\\github&gt; o get-help add-remote\nCOMMAND\n        add-remote\nDESCRIPTION\n        Adds a remote repository.\n<p>USAGE\nadd-remote [-Name] &#x3C;String> [-Href] &#x3C;Uri></p>\n<p>PARAMETERS\n-Name &#x3C;String>\nSpecifies the name used to identify this remote repository.\n-Href &#x3C;Uri>\nSpecifies the URI used to access this remote.</p>\n<ul>\n<li>file://[servername]/path/ for local or UNC paths</li>\n<li><a href=\"http://%5Bservername\">http://[servername</a>] for OpenWrap repositories</li>\n<li>nupack://[servername]/path for NuPack repositories</pre></div></li>\n</ul>\n<p>Ah, ok.</p>\n<h4>o add-remote –name local –href file:///C:/dotnet/openwrap</h4>\n<p>Now we have a local repository. </p>\n<p>You can use it by e.g. adding packages:</p>\n<h4>o publish-wrap fancyproject –remote local</h4>\n<p>When I ask my local repository what it contains it gives me...</p>\n<div style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px\" id=\"scid:812469c5-0cb0-4c63-8c15-c81123a09de7:f0ae588e-1b1e-488b-b27d-982e78acefe9\" class=\"wlWriterEditableSmartContent\"><pre name=\"code\" class=\"c\">PS C:\\dotnet\\dev\\github&gt; o list-wrap -remote local\n - MemBus (available: 1.0.0.22806675, 1.0.1.23707739)\n - Twitterizer (available: 2.3.1.23744031)\n - structuremap (available: 2.6.2.0)\n - caliburnmicro (available: 1.0.0.47921975)</pre></div>\n<p>Unlike the mentioned post, steps of how to create a package isn’t shown here, this may be a subject for another post.</p>","fields":{"slug":"/2011/01/03/creating-and-then-using-a-local-openwrap-repository"},"frontmatter":{"date":"January 03, 2011","path":null,"title":"Creating and then using a local OpenWrap repository","tags":["software-development","libs-and-frameworks"]}}},"pageContext":{"title":"Creating and then using a local OpenWrap repository","previous":{"fields":{"slug":"/2010/12/20/comparison-of-code-metrics-in-openwrap-and-nuget","published":true},"frontmatter":{"title":"Comparison of code metrics in OpenWrap and Nuget","tags":["tools","libs-and-frameworks"],"date":"2010/12/20"}},"next":{"fields":{"slug":"/2011/01/31/suggestions-to-improve-your-wpf-viewmodels","published":true},"frontmatter":{"title":"Suggestions to improve your WPF ViewModels","tags":["dotnet","patterns","libs-and-frameworks"],"date":"2011/01/31"}}}}}