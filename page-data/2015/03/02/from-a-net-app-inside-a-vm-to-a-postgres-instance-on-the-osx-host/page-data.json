{"componentChunkName":"component---src-templates-article-template-js","path":"/2015/03/02/from-a-net-app-inside-a-vm-to-a-postgres-instance-on-the-osx-host","result":{"data":{"markdownRemark":{"html":"<p>While trying out persistence strategies for a .NET app I am mostly developing inside a VM, I was interested\nin looking at alternatives to RavenDB. Trouble is that RavenDB is not that lightweight in terms of startup,\nand I can't get it to run outside the VM.</p>\n<p>Many cool kids are playing with Postgres now - It may be that MySQL is simply a dead horse, or that Postgres' capabilities\nin storing and retrieving JSON can be on a par with document databases under certain circumstances.</p>\n<p>Hence I would like to give Postgres a spin, with the thought that the DB would be running on OSX while I develop the remaining parts in the VM.</p>\n<h2>Install Postgres</h2>\n<p>Being a newbie, I went for the <a href=\"http://postgresapp.com/\">install of a *.app</a>, a very, very simple way to get started with Postgres on OSX.\nIt starts up very quick, and you've got something running in a minute.</p>\n<p>You can start talking to the instance with the CLI <em>psql</em>, but with my SQL-foo currently being a bit rusty, I wanted a little bit of GUI. I settled for <a href=\"http://www.pgadmin.org/\">pgadmin</a>.</p>\n<h2>No rights for nobody</h2>\n<p>My Postgres instance would only want to talk to things running on the same machine. In order for the VM to be able to talk\nto the instance, the DB must be configured appropriately - this required modifications in configuration files.</p>\n<p>Where those are <a href=\"http://stackoverflow.com/questions/3602450/where-are-my-postgres-conf-files\">can be asked</a> e.g. via <em>psql</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SHOW config_file;</code></pre></div>\n<p>Which hopefully gives you a path where the config is located\n(mine was <em>~/Library/Application Support/Postgres/var-9.4/postgresql.conf</em>).</p>\n<p>Here I changed <strong>postgresql.conf</strong> to contain the line</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">listen_addresses = &#39;*&#39;</code></pre></div>\n<p>When it is missing, te default is localhost.</p>\n<p>The file <strong>pg_hba.conf</strong> was modified to contain a line with regard to the ability who can connect how from where to what.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">host  all  all 0.0.0.0/0 trust</code></pre></div>\n<blockquote>\n<p>This is certainly not a setup for a production machine, obviously. The documentation of the configs are pretty good\nso it should give you enough hints to restrict access far more intelligently than the wildcard I essentially defined.</p>\n</blockquote>\n<p>Finally I created a user with the GUI and <a href=\"https://wiki.postgresql.org/images/d/d1/Managing_rights_in_postgresql.pdf\">granted that user connect right</a> to the DB I want to play with.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GRANT CONNECT ON DATABASE db TO user;</code></pre></div>\n<p>On the VMWare I downloaded the Nugets <strong>Dapper</strong> and <strong>Npgsql</strong>.</p>\n<p>And finally...</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NpgsqlConnectionStringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>UserName <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>Password <span class=\"token operator\">=</span> <span class=\"token string\">\"pwd\"</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>Database <span class=\"token operator\">=</span> <span class=\"token string\">\"myDB\"</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>Host <span class=\"token operator\">=</span> <span class=\"token string\">\"Franks-MBP\"</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>Port <span class=\"token operator\">=</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NpgsqlConnection</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And the test is green.</p>","fields":{"slug":"/2015/03/02/from-a-net-app-inside-a-vm-to-a-postgres-instance-on-the-osx-host"},"frontmatter":{"date":"March 02, 2015","path":null,"title":"From a .NET App inside a VM to a Postgres instance on the OSX host","tags":["programming"]}}},"pageContext":{"title":"From a .NET App inside a VM to a Postgres instance on the OSX host","previous":{"fields":{"slug":"/2014/11/08/getting-yesod-to-run-on-osx","published":true},"frontmatter":{"title":"Getting Yesod to run on OSX","tags":["programming","haskell"],"date":"2014/11/08"}},"next":{"fields":{"slug":"/2015/08/28/porting-a-react-application-to-typescript","published":true},"frontmatter":{"title":"Porting a react application to typescript","tags":["web","programming","typescript","javascript","react"],"date":"2015/08/27"}}}}}