{
    "componentChunkName": "component---src-templates-article-template-js",
    "path": "/2013/08/13/what-id-have-wished-windows-8-to-be",
    "result": {"data":{"mdx":{"excerpt":"There has been so much rant on Windows 8 that you could think that it is enough already. Then again, the same argument can be used to say that givenâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"What I'd have wished Windows 8 to be\",\n  \"layout\": \"post\",\n  \"tags\": [\"windows\"],\n  \"date\": \"2013-08-13T09:00:40.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"There has been so much rant on Windows 8 that you could think that it is enough already. Then again, the same argument can be used to say that given so much rant, some more doesn't even count, so here we go.\"), mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"Windows 8\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forget about ARM - just menacing Intel to consider using ARM should have been enough to push Intel towards more economical processors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do exactly as done with regard to battery life management, pruning unnecessary cycles etc. making the desktop windows very snappy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduce HTML + CSS + JavaScript as a UI platform - for Desktop, bog-standard Windows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Stick to a goddarned UI Framework already!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow an app model where apps can have 2 profiles - a Desktop profile and a Touch profile -- CSS media types?\")), mdx(\"h2\", null, \"Windows 8.1\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow an alternate view on your apps when in touch mode - only those apps that have a touch profile are shown on the touch menu\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduce the app store - which sells and distributes apps without distinguishing between desktop and touch.\")), mdx(\"p\", null, \"/rant.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2013/08/13/what-id-have-wished-windows-8-to-be"},"frontmatter":{"date":"2013-08-13","path":null,"title":"What I'd have wished Windows 8 to be","tags":["windows"]}}},"pageContext":{"title":"What I'd have wished Windows 8 to be","previous":{"fields":{"slug":"/2013/08/05/combat-fatty-wpf-vms-controller","published":true},"frontmatter":{"title":"Combat fatty WPF VMs - Controller","tags":["dotnet","WPF","libs-and-frameworks"],"date":"2013/08/05"}},"next":{"fields":{"slug":"/2013/08/19/simple-model-of-a-politician-in-haskell","published":true},"frontmatter":{"title":"Simple model of a politician in Haskell","tags":["geekdom","humour","haskell"],"date":"2013/08/19"}}}},
    "staticQueryHashes": ["256249292","2581731408"]}