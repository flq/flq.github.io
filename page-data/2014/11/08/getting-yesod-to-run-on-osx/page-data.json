{"componentChunkName":"component---src-templates-article-template-js","path":"/2014/11/08/getting-yesod-to-run-on-osx","result":{"data":{"mdx":{"excerpt":"Just so you know if you want to read on or not:  Yesod  is a web application framework written in Haskell, which obviously expects you to write stuffâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Getting Yesod to run on OSX\",\n  \"layout\": \"post\",\n  \"tags\": [\"programming\", \"haskell\"],\n  \"date\": \"2014-11-08T22:53:13.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Just so you know if you want to read on or not: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.yesodweb.com\"\n  }, \"Yesod\"), \" is a web application framework written in Haskell, which obviously expects you to write stuff in Haskell.\"), mdx(\"p\", null, \"Okay, um, there isn't much to say as the whole thing went pretty painless.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Take some Haskell that runs on OSX. I chose \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://ghcformacosx.github.io\"\n  }, \"Haskell for OSX\"), \". Follow the instructions until you can pop up a terminal and type ghci and are able to have some fun with haskell.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.yesodweb.com/page/quickstart\"\n  }, \"quickstart guide\"), \" for yesod. It recommends to set up \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.stackage.org\"\n  }, \"stackage\"), \" for your system, which apparently is a safer version of hackage, the place where haskell packages live. Safe here means less likelihood of versioning issues i your package dependency chains.\")), mdx(\"p\", null, \"And frankly, you can pretty much follow the quickstart guide word by word, there has been no apparent difference to setting this up on a Linux box.\"), mdx(\"p\", null, \"While I was at it, I decided to install \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/SublimeHaskell/SublimeHaskell\"\n  }, \"SublimeHaskell\"), \" - For an optimal feature set it wants you to install a couple of Haskell packages. Take note that for some reason it couldn't find ghc-mod in the path even though I was able to call it from a terminal. However, there is a sublime package setting where you can provide additional paths to be considered...\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"json\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-json\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"\\\"add_to_PATH\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"/Users/flq/.cabal/bin\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"Some of the steps surrounding cabal take quite some time, time will tell if this gets better considering that everything is now downloaded and built.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2014/11/08/getting-yesod-to-run-on-osx"},"frontmatter":{"date":"2014-11-08","path":null,"title":"Getting Yesod to run on OSX","tags":["programming","haskell"]}}},"pageContext":{"title":"Getting Yesod to run on OSX","previous":{"fields":{"slug":"/2014/10/20/lexing-and-parsing-in-f","published":true},"frontmatter":{"title":"Lexing and parsing in F#","tags":["programming","fsharp"],"date":"2014/10/20"}},"next":{"fields":{"slug":"/2015/03/02/from-a-net-app-inside-a-vm-to-a-postgres-instance-on-the-osx-host","published":true},"frontmatter":{"title":"From a .NET App inside a VM to a Postgres instance on the OSX host","tags":["programming"],"date":"2015/03/02"}}}},"staticQueryHashes":["256249292","2581731408"]}