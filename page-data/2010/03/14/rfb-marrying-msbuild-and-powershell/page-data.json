{
    "componentChunkName": "component---src-templates-article-template-js",
    "path": "/2010/03/14/rfb-marrying-msbuild-and-powershell",
    "result": {"data":{"mdx":{"excerpt":"It took me longer than expected to support this script, but it’s available in the current source now: The syntax used is described in more detail in…","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"rfb: Marrying MSBuild and PowerShell\",\n  \"layout\": \"post\",\n  \"tags\": [\"dotnet\", \"msbuild\", \"tools\", \"own-software\"],\n  \"date\": \"2010-03-14T02:44:00.000Z\",\n  \"topic\": \"rfb\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TopicToc = makeShortcode(\"TopicToc\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TopicToc, {\n    topicId: \"rfb\",\n    header: \"realfiction builder\",\n    mdxType: \"TopicToc\"\n  }), mdx(\"p\", null, \"It took me longer than expected to support this script, but it\\u2019s available in the current source now:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"yaml\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-yaml\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"Project \\\"Default\\\"\\n\\n Target \\\"Default\\\"\\n   @files <= smallPNGs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"Capture\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"FullName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" Extension\\n   Message \\\"%(files.Identity) and extension %(files.Extension)\\\"\\n\\n PS\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"smallPNGs <<END\\n   echo \\\"Returning small pngs\\\"\\n   cd C\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\\\users\\\\xyz\\\\Documents\\n   Get\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"ChildItem \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"Recurse \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"|\"), \" \\n   Where\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"Object \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" $_.Extension \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"eq \\\".png\\\" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"and $_.Length \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"-\"), \"lt 7000 \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"|\"), \" \\n   select FullName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" Extension\\n END\"))), mdx(\"p\", null, \"The syntax used is described in more detail in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/flq/rfb/wiki/Syntax:-Powershell-integration\"\n  }, \"new syntax section\"), \" on the rfb source site wiki. \"), mdx(\"p\", null, \"What happens is that this is the first of a couple of use cases surrounding a seamless integration of PowerShell with MSBuild. So far, you can define PowerShell.scripts, use them to fill item groups, and use those item groups in MSBuild tasks. \", mdx(\"del\", null, \"When the integration is feature complete you will be able to\"), \"The integration allows you to\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Capture a single output value of PowerShell directly into a property \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run a PowerShell script without expecting any output \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write the PowerShell scripts inline in your targets as if they were MsBuild tasks \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pass parameters into your script \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have the PowerShell scripts log into the same Console that rfb is running in.\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2010/03/14/rfb-marrying-msbuild-and-powershell"},"frontmatter":{"date":"2010-03-14","path":null,"title":"rfb: Marrying MSBuild and PowerShell","tags":["dotnet","msbuild","tools","own-software"]}}},"pageContext":{"title":"rfb: Marrying MSBuild and PowerShell","previous":{"fields":{"slug":"/2010/03/10/das-neue-ministerkabinett","published":true},"frontmatter":{"title":"Das neue Ministerkabinett","tags":["loosely-coupled","humour"],"date":"2010/03/10"}},"next":{"fields":{"slug":"/2010/03/19/rfb-getting-several-values-out-of-a-powershell-script","published":true},"frontmatter":{"title":"rfb: Getting several values out of a PowerShell script","tags":["dotnet","msbuild","own-software","tools"],"date":"2010/03/19"}}}},
    "staticQueryHashes": ["256249292","2581731408"]}