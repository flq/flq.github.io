{"componentChunkName":"component---src-templates-article-template-js","path":"/2010/09/06/membus-a-more-complex-rich-client-setup","result":{"data":{"mdx":{"excerpt":"Let us consider a more complex Bus setup in order to understand the capabilities of the different parts of the infrastructure:   What are weâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MemBus: A more complex rich client setup\",\n  \"layout\": \"post\",\n  \"tags\": [\"software-development\", \"dotnet\", \"patterns\", \"membus\"],\n  \"date\": \"2010-09-06T09:00:00.000Z\",\n  \"topic\": \"membus\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let us consider a more complex Bus setup in order to understand the capabilities of the different parts of the infrastructure:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/image_7337b070-7353-4041-bb93-87aca8327ca8.png\",\n    \"alt\": \"image\",\n    \"title\": \"image\"\n  }), \" \"), mdx(\"p\", null, \"What are we expressing here?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publishing is configured\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If a message of type Transport is published, use the Sequential publisher\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If a message type ends with \\u201CRequest\\u201D in its name, publish a message of type Transport as constructed and use the non blocking publisher for the Request message.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If a message type ends with \\u201CResponse\\u201D in its name, publish it in the parallel blocking fashion, then an instance of type Transport as shown.*   Subscriptions are configured \")), mdx(\"p\", null, \"This is an example where you perform Requests with messages that may be long running: They are published and the UI would have to wait until a \\u201CResponse\\u201D becomes available. The Transport-messages mark those cycles such that a UI can use them in a general form to provide feedback to the user that something is happening.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2010/09/06/membus-a-more-complex-rich-client-setup"},"frontmatter":{"date":"2010-09-06","path":null,"title":"MemBus: A more complex rich client setup","tags":["software-development","dotnet","patterns","membus"]}}},"pageContext":{"title":"MemBus: A more complex rich client setup","previous":{"fields":{"slug":"/2010/09/02/introducing-membus-construction-variants","published":true},"frontmatter":{"title":"Introducing MemBus: Construction Variants","tags":["csharp","membus"],"date":"2010/09/02"}},"next":{"fields":{"slug":"/2010/09/08/membus-performance-considerations","published":true},"frontmatter":{"title":"Membus: Performance considerations","tags":["software-development","patterns","csharp","membus"],"date":"2010/09/08"}}}},"staticQueryHashes":["256249292","2581731408"]}