{"componentChunkName":"component---src-templates-article-template-js","path":"/2008/06/16/wpf-inotifypropertychanged-proxy-success","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"WPF + INotifyPropertyChanged Proxy = success!\",\n  \"layout\": \"post\",\n  \"tags\": [\"dotnet\", \"libs-and-frameworks\"],\n  \"date\": \"2008-06-16T14:04:18.000Z\",\n  \"redirect_from\": \"/go/126/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Remember the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://realfiction.net/go/156\"\n  }, \"Epic fail\"), \" that was building a simple class and a proxy on top to save on doing the PropertyChanged-mechanics?\"), mdx(\"p\", null, \"It now works in WPF, too, which, I hope you'll agree, is pretty cool.\"), mdx(\"p\", null, \"After some research I found in the Discussion Forum of the Castle team that the issue \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://forum.castleproject.org/viewtopic.php?t=3145\"\n  }, \"cropped up beforehand\"), \" and has already been fixed!\"), mdx(\"p\", null, \"Thing is, the \\\"official\\\" 1.0 Release Candidate 3 download is quite stale and does in no way reflect the stuff you would get from the trunk\"), mdx(\"p\", null, \"I used the version that came along with NHibernate2 Alpha1 - Here the relevant Castle.Core and DynamicProxy2 assemblies are recent enough to incorporate the fix described in the discussion forum - It means that the example you can download in the above post works without issues. Nice!\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2008/06/16/wpf-inotifypropertychanged-proxy-success"},"frontmatter":{"date":"2008-06-16","path":null,"title":"WPF + INotifyPropertyChanged Proxy = success!","tags":["dotnet","libs-and-frameworks"]}}},"pageContext":{"title":"WPF + INotifyPropertyChanged Proxy = success!","previous":{"fields":{"slug":"/2008/05/22/some-more-on-the-implicit-operator","published":true},"frontmatter":{"title":"Some more on the implicit operator","tags":["software-development","dotnet"],"date":"2008/05/22"}},"next":{"fields":{"slug":"/2008/06/25/so-how-expensive-is-it-to-let-ninject-make-my-object","published":true},"frontmatter":{"title":"So, how expensive is it to let NInject make my object?","tags":["software-development","dotnet","patterns","libs-and-frameworks"],"date":"2008/06/25"}}}},"staticQueryHashes":["256249292","2581731408"]}