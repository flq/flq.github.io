{"componentChunkName":"component---src-templates-article-template-js","path":"/2008/12/08/iterators-do-1","result":{"data":{"mdx":{"excerpt":"The following picture probably doesn't surprise you But as you can see in what is commented out, you can indeed e.g. do Such an iterator then hasâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Iterators do [1..]\",\n  \"layout\": \"post\",\n  \"tags\": [\"software-development\", \"dotnet\", \"libs-and-frameworks\"],\n  \"date\": \"2008-12-08T22:00:14.000Z\",\n  \"redirect_from\": \"/go/136/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following picture probably doesn't surprise you\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/exception.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"But as you can see in what is commented out, you can indeed e.g. do\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"DataSource.Take(10).ToList\"))), mdx(\"p\", null, \"Such an iterator then has quite a similarity to Haskell's \", \"[1..]\", \", the infinite list. Just make sure that you don't pull all elements from the source...\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2008/12/08/iterators-do-1"},"frontmatter":{"date":"2008-12-08","path":null,"title":"Iterators do [1..]","tags":["software-development","dotnet","libs-and-frameworks"]}}},"pageContext":{"title":"Iterators do [1..]","previous":{"fields":{"slug":"/2008/11/04/havent-digested-c-3-brace-yourself-for-v4","published":true},"frontmatter":{"title":"Haven't digested C#3? Brace yourself for V4!","tags":["software-development","dotnet","csharp"],"date":"2008/11/04"}},"next":{"fields":{"slug":"/2009/01/07/dependency-injection-is-not-locating-services","published":true},"frontmatter":{"title":"Dependency Injection is not locating services","tags":["dotnet","patterns","libs-and-frameworks"],"date":"2009/01/07"}}}},"staticQueryHashes":["256249292","2581731408"]}