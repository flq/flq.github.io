{"componentChunkName":"component---src-templates-article-template-js","path":"/2007/08/24/a-plea-to-microsoft","result":{"data":{"mdx":{"excerpt":"Keine Überlast für OnVisibilityChanged stimmt mit dem Delegat\nSystem.Windows.DependencyPropertyChangedEventHandler überein.\t... Microsoft, please stop…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A plea to Microsoft\",\n  \"layout\": \"post\",\n  \"tags\": [\"dotnet\", \"windows\"],\n  \"date\": \"2007-08-24T17:54:57.000Z\",\n  \"redirect_from\": \"/go/101/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Keine \\xDCberlast f\\xFCr OnVisibilityChanged stimmt mit dem Delegat\\nSystem.Windows.DependencyPropertyChangedEventHandler \\xFCberein.\\t...\")), mdx(\"p\", null, \"Microsoft, please stop translating exception messages for a programming language that is otherwise completely English, especially if you let it be done by a machine. The above is an error from the compiler! Never ever meant to be seen by an end user, but a person proficient in programming with the .NET framework. This is annoying, it hinders searching for solutions on the Internet, in short, it is crap! Please, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stop it\"), \"!\"), mdx(\"h4\", null, \"PS\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\xDCberlast\"), \" here refers to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"method overloading\"), \", i.e. the method I was passing to a delegate was wrong in signature.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2007/08/24/a-plea-to-microsoft"},"frontmatter":{"date":"2007-08-24","path":null,"title":"A plea to Microsoft","tags":["dotnet","windows"]}}},"pageContext":{"title":"A plea to Microsoft","previous":{"fields":{"slug":"/2007/08/14/i-for-one-welcome-my-new-split-overload","published":true},"frontmatter":{"title":"I for one welcome my new Split overload","tags":["software-development","dotnet"],"date":"2007/08/14"}},"next":{"fields":{"slug":"/2007/09/21/untested-extension-method-which-should-be-a-nice-one","published":true},"frontmatter":{"title":"Untested Extension method which should be a nice one","tags":["software-development","dotnet"],"date":"2007/09/21"}}}},"staticQueryHashes":["256249292","2581731408"]}