{"componentChunkName":"component---src-templates-article-template-js","path":"/2007/09/21/untested-extension-method-which-should-be-a-nice-one","result":{"data":{"markdownRemark":{"html":"<p>You probably know by now that I quite <em>like</em> the upcoming extension methods in .NET 3.5.</p>\n<p>I haven't tested the following code as I don't have the right framework at hand right now (and I cannot be asked to turn on my laptop), but I don't see why it shouldn't work:</p>\n<p><strong>[Update 27.09.07: This version now does work, thanks to Christoph as well as a check on my Orcas VM]</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimeExtensions</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">DateTime</span> <span class=\"token function\">AsDate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> datetime<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GenericExtensions</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token generic-method\"><span class=\"token function\">Between</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">T</span> me<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> lower<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> upper<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IComparable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">CompareTo</span><span class=\"token punctuation\">(</span>lower<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">CompareTo</span><span class=\"token punctuation\">(</span>upper<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now you can write:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if (someNumber.Between(3,7)) // Do stuff...\nif (someDate.Between(&quot;12.01.1978&quot;.AsDate(),&quot;14.03.1988&quot;.AsDate())) // Do stuff</code></pre></div>\n<p>Does it go too far or do you like this stuff?</p>","fields":{"slug":"/2007/09/21/untested-extension-method-which-should-be-a-nice-one"},"frontmatter":{"date":"September 21, 2007","path":null,"title":"Untested Extension method which should be a nice one","tags":["software-development","dotnet"]}}},"pageContext":{"title":"Untested Extension method which should be a nice one","previous":{"fields":{"slug":"/2007/08/24/a-plea-to-microsoft","published":true},"frontmatter":{"title":"A plea to Microsoft","tags":["dotnet","windows"],"date":"2007/08/24"}},"next":{"fields":{"slug":"/2007/09/27/serializing-close-to-the-wpf-things","published":true},"frontmatter":{"title":"Serializing close to the WPF things","tags":["dotnet","libs-and-frameworks"],"date":"2007/09/27"}}}}}