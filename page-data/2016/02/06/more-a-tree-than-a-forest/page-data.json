{"componentChunkName":"component---src-templates-article-template-js","path":"/2016/02/06/more-a-tree-than-a-forest","result":{"data":{"mdx":{"excerpt":"Catching up with Eric Lippert's  latest post  on writing a Z-machine in OCaml, there isn't much to say today. The code presented can be used  1:1 in Fâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"More a tree than a forest\",\n  \"layout\": \"post\",\n  \"tags\": [\"fsharp\"],\n  \"date\": \"2016-02-06T20:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Catching up with Eric Lippert's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://ericlippert.com/2016/02/05/forest_path/\"\n  }, \"latest post\"), \" on writing a Z-machine in OCaml, there isn't much to say today. The code presented can be used \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/flq/ionized-z-machine/releases/tag/forest_path\"\n  }, \"1:1 in F#\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2016/02/06/more-a-tree-than-a-forest"},"frontmatter":{"date":"2016-02-06","path":null,"title":"More a tree than a forest","tags":["fsharp"]}}},"pageContext":{"title":"More a tree than a forest","previous":{"fields":{"slug":"/2016/02/04/where-is-the-house","published":true},"frontmatter":{"title":"Where is the house","tags":["fsharp"],"date":"2016/02/04"}},"next":{"fields":{"slug":"/2016/02/09/up-a-free","published":true},"frontmatter":{"title":"Up a Free","tags":["fsharp"],"date":"2016/02/09"}}}},"staticQueryHashes":["256249292","2581731408"]}