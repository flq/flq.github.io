{"componentChunkName":"component---src-templates-article-template-js","path":"/2016/09/26/how-to-get-started-with-marten-on-osx-hint-theres-nothing-to-it","result":{"data":{"mdx":{"excerpt":"Since Jeremy announced v1 of Marten, I thought that this is a good moment to see if I can quickly get going with it on OSX. Surprisingly, this wentâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to get started with Marten on OSX (Hint: There's nothing to it)\",\n  \"layout\": \"post\",\n  \"tags\": [\"libs-and-frameworks\", \"dotnet\"],\n  \"date\": \"2016-09-26T19:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Since Jeremy announced v1 of Marten, I thought that this is a good moment to see if I can quickly get going with it on OSX. Surprisingly, this went super-smoothly.\"), mdx(\"p\", null, \"What I had installed already:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.docker.com\"\n  }, \"Docker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.microsoft.com/net/core#macos\"\n  }, \".NET.Core\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.jetbrains.com/rider/\"\n  }, \"Project Rider\"))), mdx(\"p\", null, \"Just follow the instructions and see if you get everything going. Once in Project Rider I then started a new Dotnet.Core Console application.\"), mdx(\"p\", null, \"For the required postgres instance I use their \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hub.docker.com/_/postgres/\"\n  }, \"official image\"), \", which allows you to set up a user with associated db by\\nsetting the environment variables \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POSTGRES\", \"_\", \"USER\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POSTGRES\", \"_\", \"PASSWORD\"), \" to whatever you think is right. Expose the postgres port and mount an appropriate folder if you want to persist the data you store and run the image.\\nYou can verify that everything is cool by using an application like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.pgadmin.org\"\n  }, \"pgAdmin\"), \" and connecting to your instance.\"), mdx(\"p\", null, \"Now to Marten. The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nuget.org/packages/Marten/\"\n  }, \"Marten nuget package\"), \" supports .NET Standard 1.3, so we don't expect troubles. Calling the Marten documentation, we promptly have access to a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://jasperfx.github.io/marten/getting_started/\"\n  }, \"Getting started page\"), \".\"), mdx(\"p\", null, \"I copied the code, started the Console and it all ran successfully. I wish I could write more about the whole process for having something of a blog post. But I can't. And that makes me very happy, as it means that the .NET Core ecosystem is getting interesting beyond Windows and for devs who don't have to be on the cutting edge*) all the time.\"), mdx(\"sup\", null, \"*) that place with failing builds, incompatible APIs and breaking changes\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2016/09/26/how-to-get-started-with-marten-on-osx-hint-theres-nothing-to-it"},"frontmatter":{"date":"2016-09-26","path":null,"title":"How to get started with Marten on OSX (Hint: There's nothing to it)","tags":["libs-and-frameworks","dotnet"]}}},"pageContext":{"title":"How to get started with Marten on OSX (Hint: There's nothing to it)","previous":{"fields":{"slug":"/2016/09/25/a-docker-image-for-githubs-jekyll","published":true},"frontmatter":{"title":"A docker image for github's jekyll","tags":["site"],"date":"2016/09/25"}},"next":{"fields":{"slug":"/2016/12/18/2d-or-bitemporal-historization-a-primer","published":true},"frontmatter":{"title":"2D or bitemporal Historization: A primer","tags":["software-development","patterns","fsharp","neo4j"],"date":"2016/12/18"}}}},"staticQueryHashes":["256249292","2581731408"]}