{
    "componentChunkName": "component---src-templates-article-template-js",
    "path": "/2017/07/23/create-react-app-with-typescript",
    "result": {"data":{"mdx":{"excerpt":"\"react\" series Getting into React Part 1 Getting into React Part 2 Create react app with typescript When I set out to use Typescript in the context ofâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create react app with typescript\",\n  \"layout\": \"post\",\n  \"tags\": [\"programming\", \"web\", \"typescript\", \"react\"],\n  \"date\": \"2017-07-23T19:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\\"react\\\" series\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2017/07/21/getting-into-react-part-1\"\n  }, \"Getting into React Part 1\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2017/07/22/getting-into-react-part-2\"\n  }, \"Getting into React Part 2\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create react app with typescript\")), mdx(\"p\", null, \"When I set out to use Typescript in the context of a react application, I was thinking of using some minimal boilerplate\\nlike \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Glavin001/react-hot-ts\"\n  }, \"this one here\"), \" to get going, but then figured out that create-react-app probably has a way to plug in. Io and behold, the analog to create-react-app for typescript can be found \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/wmonk/create-react-app-typescript\"\n  }, \"here\"), \" and is used as follows:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"npm\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"install\"), \" -g create-react-app\\ncreate-react-app my-app --scripts-version\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \"react-scripts-ts\"))), mdx(\"p\", null, \"This essentially gives you the same starting point as the standard \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"create-react-app\"), \", but with Typescript.\"), mdx(\"p\", null, \"This often means that you will require type definitions to properly work with libraries. That is, e.g. to introduce enzyme for testing we would then do:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"npm install --save-dev react-test-renderer react-dom enzyme chai @types/enzyme @types/chai\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I usually don't get VS Code refreshed when downloading types.\\nA quick restart of the app helps me out. Not sure if it is normal.\")), mdx(\"p\", null, \"Something that you may come to appreciate to push down the number of open tabs in the browser is the auto-completion that is now available to you...\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/cra-ts-autocomplete.png\",\n    \"alt\": \"ts auto-complete\"\n  })), mdx(\"p\", null, \"So, we're off to a good start and we may finally be able to leave the realm of hello'ing each other until boredom kicks in and destroys our brain cells.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2017/07/23/create-react-app-with-typescript"},"frontmatter":{"date":"2017-07-23","path":null,"title":"Create react app with typescript","tags":["programming","web","typescript","react"]}}},"pageContext":{"title":"Create react app with typescript","previous":{"fields":{"slug":"/2017/07/22/getting-into-react-part-2","published":true},"frontmatter":{"title":"Getting into react part 2","tags":["react","programming","web","javascript"],"date":"2017/07/22"}},"next":{"fields":{"slug":"/2017/07/26/react-redux-in-a-real-application-prelude","published":true},"frontmatter":{"title":"react-redux in a real application - prelude","tags":["web","programming","react","javascript"],"date":"2017/07/26"}}}},
    "staticQueryHashes": ["256249292","2581731408"]}