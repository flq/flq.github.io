
<!-- saved from url=(0057)file:///C:/dotnet/dev/github/openwrap/src/QueryResult.htm -->
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style></head><body>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 types on 778 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;too&nbsp;big</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">400</b>&nbsp;<font color="#0000FF">OR</font><font color="#000000"><br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbILInstructions</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">2500</b><font color="#000000"><br>&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#0000FF">DESC</font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 5 types on 778 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;with&nbsp;poor&nbsp;cohesion</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#008000">//&nbsp;m&nbsp;-&nbsp;members<br></font><font color="#008000">//&nbsp;a&nbsp;-&nbsp;instance&nbsp;fields<br></font><font color="#008000">//&nbsp;LCOM&nbsp;HS&nbsp;=&nbsp;1&nbsp;-&nbsp;sum(mA)/(m*a)<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">LCOMHS</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0.95</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbFields</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">10</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbMethods</font>&nbsp;<font color="#000000">&gt;</font><b style="color:#000000;background-color:#FFFF99">10</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#0000FF">LCOMHS</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">LCOM Henderson-Sellers (LCOMHS)</td><td class="hdrcell_left"># Fields</td><td class="hdrcell_left"># Methods</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">InitWrapCommand</td><td class="datacell_right1">1</td><td class="datacell_right1">15</td><td class="datacell_right1">37</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand</td></tr><tr><td class="datacell_left0">CommandLineProcessor</td><td class="datacell_right0">1</td><td class="datacell_right0">19</td><td class="datacell_right0">23</td><td class="datacell_left0">OpenWrap.Commands.CommandLineProcessor</td></tr><tr><td class="datacell_left1">DefaultPackageManager</td><td class="datacell_right1">1</td><td class="datacell_right1">40</td><td class="datacell_right1">70</td><td class="datacell_left1">OpenWrap.PackageManagement.DefaultPackageManager</td></tr><tr><td class="datacell_left0">BuildWrapCommand</td><td class="datacell_right0">0.98667</td><td class="datacell_right0">25</td><td class="datacell_right0">48</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand</td></tr><tr><td class="datacell_left1">AddWrapCommand</td><td class="datacell_right1">0.95402</td><td class="datacell_right1">11</td><td class="datacell_right1">31</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">4.9407</td><td class="datacell_stat0">110</td><td class="datacell_stat0">209</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">0.98814</td><td class="datacell_stat1">22</td><td class="datacell_stat1">41.8</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0.95402</td><td class="datacell_stat0">11</td><td class="datacell_stat0">23</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">1</td><td class="datacell_stat1">40</td><td class="datacell_stat1">70</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0.017825</td><td class="datacell_stat0">10.119</td><td class="datacell_stat0">16.29</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0.00031775</td><td class="datacell_stat1">102.4</td><td class="datacell_stat1">265.36</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 6 types on 532 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Efferent&nbsp;(outgoing)&nbsp;Coupling</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">TypeCe</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">50</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">TypeCe</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">Efferent coupling (TypeCe)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">DefaultPackageManager</td><td class="datacell_right1">86</td><td class="datacell_left1">OpenWrap.PackageManagement.DefaultPackageManager</td></tr><tr><td class="datacell_left0">Preloader</td><td class="datacell_right0">78</td><td class="datacell_left0">OpenWrap.Preloading.Preloader</td></tr><tr><td class="datacell_left1">BuildWrapCommand</td><td class="datacell_right1">75</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand</td></tr><tr><td class="datacell_left0">ConsoleRunner</td><td class="datacell_right0">58</td><td class="datacell_left0">OpenWrap.ConsoleRunner</td></tr><tr><td class="datacell_left1">ConfigurationManager</td><td class="datacell_right1">52</td><td class="datacell_left1">OpenWrap.Configuration.ConfigurationManager</td></tr><tr><td class="datacell_left0">CommandLineProcessor+&lt;Execute&gt;d__32</td><td class="datacell_right0">51</td><td class="datacell_left0">OpenWrap.Commands.CommandLineProcessor+&lt;Execute&gt;d__32</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">400</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">66.667</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">51</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">86</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">13.585</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">184.56</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 9 types on 532 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Non-Abstract&nbsp;Afferent&nbsp;(incoming)&nbsp;coupling</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">TypeCa</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">20</b><font color="#000000"><br></font><font color="#0000FF">AND</font>&nbsp;<font color="#000000">!</font><font color="#000000">(</font><font color="#000064">IsAbstract</font>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsInterface</font>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsGeneratedByCompiler</font><font color="#000000">)</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">Afferent coupling (TypeCa)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">StringExtensions</td><td class="datacell_right1">67</td><td class="datacell_left1">OpenWrap.StringExtensions</td></tr><tr><td class="datacell_left0">Services</td><td class="datacell_right0">23</td><td class="datacell_left0">OpenWrap.Services.Services</td></tr><tr><td class="datacell_left1">GenericMessage</td><td class="datacell_right1">28</td><td class="datacell_left1">OpenWrap.Commands.GenericMessage</td></tr><tr><td class="datacell_left0">Error</td><td class="datacell_right0">35</td><td class="datacell_left0">OpenWrap.Commands.Error</td></tr><tr><td class="datacell_left1">ResolvedPackage</td><td class="datacell_right1">21</td><td class="datacell_left1">OpenWrap.Repositories.ResolvedPackage</td></tr><tr><td class="datacell_left0">PackageIdentifier</td><td class="datacell_right0">37</td><td class="datacell_left0">OpenWrap.Repositories.PackageIdentifier</td></tr><tr><td class="datacell_left1">PackageDescriptor</td><td class="datacell_right1">51</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDescriptor</td></tr><tr><td class="datacell_left0">PackageDependency</td><td class="datacell_right0">43</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDependency</td></tr><tr><td class="datacell_left1">ExecutionEnvironment</td><td class="datacell_right1">23</td><td class="datacell_left1">OpenWrap.Dependencies.ExecutionEnvironment</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">328</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">36.444</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">21</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">67</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">14.384</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">206.91</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_ok">
              No warning or error. 4 types on 778 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">A&nbsp;stateless&nbsp;class&nbsp;or&nbsp;structure&nbsp;might&nbsp;be&nbsp;turned&nbsp;into&nbsp;a&nbsp;static&nbsp;type</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">5</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000064">SizeOfInst</font>&nbsp;<font color="#000000">==</font><b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000064">NbInterfacesImplemented</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">(</font><font color="#000000">(</font><font color="#000064">IsClass</font>&nbsp;<font color="#0000FF">AND</font>&nbsp;<font color="#000064">DepthOfInheritance</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">1</b><font color="#000000">&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">AND</font>&nbsp;<font color="#000064">NbChildren</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b><font color="#000000">)</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">OR</font>&nbsp;<font color="#000064">IsStructure</font><font color="#000000">)</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsStatic</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneric</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left"># interfaces implemented</td><td class="hdrcell_left">Depth of inheritance</td><td class="hdrcell_left"># Children</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">Strings</td><td class="datacell_right1">0</td><td class="datacell_right1">0</td><td class="datacell_right1">1</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Strings</td></tr><tr><td class="datacell_left0">CommandLineParser</td><td class="datacell_right0">0</td><td class="datacell_right0">0</td><td class="datacell_right0">1</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandLineParser</td></tr><tr><td class="datacell_left1">BuiltInstructionParser</td><td class="datacell_right1">0</td><td class="datacell_right1">0</td><td class="datacell_right1">1</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.BuiltInstructionParser</td></tr><tr><td class="datacell_left0">ConfigurationParser</td><td class="datacell_right0">0</td><td class="datacell_right0">0</td><td class="datacell_right0">1</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Configuration.ConfigurationParser</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">4</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">1</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">1</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">1</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 4 types on 778 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Types&nbsp;that&nbsp;could&nbsp;be&nbsp;declared&nbsp;as&nbsp;'private'</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">CouldBePrivate</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">types</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry</td><td class="datacell_right1">15</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry</td></tr><tr><td class="datacell_left0">CommandLineParser+NotEnoughArgumentsFailure</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandLineParser+NotEnoughArgumentsFailure</td></tr><tr><td class="datacell_left1">FolderRepository+PackageLocation</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Repositories.FolderRepository+PackageLocation</td></tr><tr><td class="datacell_left0">GacResolver+Loader</td><td class="datacell_right0">7</td><td class="datacell_left0">OpenWrap.Repositories.GacResolver+Loader</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">25</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">6.25</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">15</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">5.6292</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">31.688</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 types on 778 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Structures&nbsp;should&nbsp;be&nbsp;immutable</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">TYPES</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">IsStructure</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsImmutable</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInFrameworkAssembly</font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 21 methods on 4049 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;too&nbsp;big</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">30</b>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">NbILInstructions</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">200</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbLinesOfCode</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left"># IL instructions</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">66</td><td class="datacell_right1">733</td><td class="datacell_left1">OpenWrap.Commands.CommandLineProcessor+&lt;Execute&gt;d__32.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">50</td><td class="datacell_right0">439</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetConverter+&lt;ConvertNuGetVersionRange &gt;d__1e.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">43</td><td class="datacell_right1">513</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand+&lt;ExecuteCore&gt;d__9.MoveNext()</td></tr><tr><td class="datacell_left0">ReadFrom(Stream)</td><td class="datacell_right0">36</td><td class="datacell_right0">180</td><td class="datacell_left0">OpenWrap.Preloading.TinySharpZip.ZipArchive.ReadFrom(Stream)</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">33</td><td class="datacell_right1">343</td><td class="datacell_left1">OpenWrap.Commands.Wrap.PublishWrapCommand+&lt;ValidateInputs&gt;d__18 .MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">33</td><td class="datacell_right0">305</td><td class="datacell_left0">OpenWrap.PackageManagement.DefaultPackageManager+&lt;CopyPackageCore &gt;d__8b.MoveNext()</td></tr><tr><td class="datacell_left1">Main(String[])</td><td class="datacell_right1">32</td><td class="datacell_right1">214</td><td class="datacell_left1">OpenWrap.ConsoleRunner.Main(String[])</td></tr><tr><td class="datacell_left0">CreateInstanceFromString(Type,String,Stack&lt;Type&gt;)</td><td class="datacell_right0">32</td><td class="datacell_right0">250</td><td class="datacell_left0">OpenWrap.SharedReflectionExtensions.CreateInstanceFromString(Type ,String,Stack&lt;Type&gt;)</td></tr><tr><td class="datacell_left1">TryDownloadPackages(String,IEnumerable&lt;String&gt;,Regex ,Preloader+RemoteInstall)</td><td class="datacell_right1">29</td><td class="datacell_right1">243</td><td class="datacell_left1">OpenWrap.Preloading.Preloader.TryDownloadPackages(String,IEnumerable &lt;String&gt;,Regex,Preloader+RemoteInstall)</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">28</td><td class="datacell_right0">238</td><td class="datacell_left0">OpenWrap.Repositories.FolderRepository+&lt;AnchorPackages&gt;d__13.MoveNext( )</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">25</td><td class="datacell_right1">302</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder+&lt;Build&gt;d__e.MoveNext ()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">24</td><td class="datacell_right0">296</td><td class="datacell_left0">OpenWrap.Commands.Wrap.NukeWrapCommand+&lt;Execute&gt;d__1.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">21</td><td class="datacell_right1">238</td><td class="datacell_left1">OpenWrap.PackageManagement.DefaultPackageManager+ &lt;CopyPackagesToRepositories&gt;d__a3.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">20</td><td class="datacell_right0">250</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand+&lt;ValidateInputs&gt;d__3.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">20</td><td class="datacell_right1">219</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand+&lt;SetupDirectoriesAndDescriptor &gt;d__20.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">19</td><td class="datacell_right0">246</td><td class="datacell_left0">OpenWrap.Configuration.ConfigurationParser+&lt;Parse&gt;d__2.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">19</td><td class="datacell_right1">241</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand+&lt;ValidateInputs&gt;d__2.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">18</td><td class="datacell_right0">229</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetConverter+&lt;Content&gt;d__2.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">17</td><td class="datacell_right1">208</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand+&lt;Build&gt;d__0.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">17</td><td class="datacell_right0">232</td><td class="datacell_left0">OpenWrap.PackageManagement.DefaultPackageManager+ &lt;CleanProjectPackagesCore&gt;d__65.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">16</td><td class="datacell_right1">222</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand+&lt;ModifyProjects&gt;d__16.MoveNext( )</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">598</td><td class="datacell_stat0">6 141</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">28.476</td><td class="datacell_stat1">292.43</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">16</td><td class="datacell_stat0">180</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">66</td><td class="datacell_stat1">733</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">12.238</td><td class="datacell_stat0">124.93</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">149.77</td><td class="datacell_stat1">15 608</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 18 methods on 4049 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;too&nbsp;complex</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">CyclomaticComplexity</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">20</b>&nbsp;<font color="#0000FF">OR</font>&nbsp;<font color="#000064">ILNestingDepth</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">4</b><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">CyclomaticComplexity</font>&nbsp;<font color="#0000FF">DESC</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Cyclomatic Complexity (CC)</td><td class="hdrcell_left">IL Nesting Depth</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">31</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetConverter+&lt;ConvertNuGetVersionRange &gt;d__1e.MoveNext()</td></tr><tr><td class="datacell_left0">CreateInstanceFromString(Type,String,Stack&lt;Type&gt;)</td><td class="datacell_right0">28</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.SharedReflectionExtensions.CreateInstanceFromString(Type ,String,Stack&lt;Type&gt;)</td></tr><tr><td class="datacell_left1">ProfileMatches(String,String)</td><td class="datacell_right1">23</td><td class="datacell_right1">6</td><td class="datacell_left1">OpenWrap.Exports.AssemblyReferenceExportBuilder.ProfileMatches(String ,String)</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">14</td><td class="datacell_right0">11</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand+&lt;ExecuteCore&gt;d__9.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">9</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetDependency+&lt;CreateVersionVertices &gt;d__0.MoveNext()</td></tr><tr><td class="datacell_left0">IsExactlyFulfilledBy(Version)</td><td class="datacell_right0">8</td><td class="datacell_right0">6</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDependency.IsExactlyFulfilledBy(Version)</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">8</td><td class="datacell_right1">7</td><td class="datacell_left1">OpenWrap.Commands.Wrap.PublishWrapCommand+&lt;ValidateInputs&gt;d__18 .MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">8</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.Commands.CommandLineProcessor+&lt;ParseInputsFromCommandLine &gt;d__50.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">7</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand+&lt;ExecuteCore&gt;d__3.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">7</td><td class="datacell_right0">6</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand+&lt;ProcessBuildResults&gt;d__1e .MoveNext()</td></tr><tr><td class="datacell_left1">BuildMatches(Version)</td><td class="datacell_right1">7</td><td class="datacell_right1">6</td><td class="datacell_left1">OpenWrap.Dependencies.LessThanOrEqualVersionVertex.BuildMatches (Version)</td></tr><tr><td class="datacell_left0">GetVersionVertice(String[],Int32)</td><td class="datacell_right0">7</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.Dependencies.DependsParser.GetVersionVertice(String[],Int32)</td></tr><tr><td class="datacell_left1">BuildMatches(Version)</td><td class="datacell_right1">7</td><td class="datacell_right1">6</td><td class="datacell_left1">OpenWrap.Dependencies.GreaterThanOrEqualVersionVertex.BuildMatches (Version)</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">7</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.PackageManagement.DefaultPackageManager+&lt;CopyPackageCore &gt;d__8b.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">7</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetConverter+&lt;Content&gt;d__2.MoveNext()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">6</td><td class="datacell_right0">8</td><td class="datacell_left0">OpenWrap.Commands.Wrap.NukeWrapCommand+&lt;Execute&gt;d__1.MoveNext()</td></tr><tr><td class="datacell_left1">MoveNext()</td><td class="datacell_right1">5</td><td class="datacell_right1">7</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder+&lt;Build&gt;d__e.MoveNext ()</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">2</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.Commands.Core.GetHelpCommand+&lt;ListAllCommands&gt;d__6.MoveNext()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">191</td><td class="datacell_stat1">106</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">10.611</td><td class="datacell_stat0">5.8889</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">2</td><td class="datacell_stat1">3</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">31</td><td class="datacell_stat0">11</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">7.9032</td><td class="datacell_stat1">1.6292</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">62.46</td><td class="datacell_stat0">2.6543</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 1 methods on 4049 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;with&nbsp;too&nbsp;many&nbsp;parameters&nbsp;(NbParameters)</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbParameters</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">5</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbParameters</font>&nbsp;<font color="#0000FF">DESC</font><font color="#000000"><br><br></font><font color="#008000">//&nbsp;METHODS&nbsp;WHERE&nbsp;NbParameters&nbsp;&gt;&nbsp;5&nbsp;might&nbsp;be&nbsp;painful&nbsp;to&nbsp;call&nbsp;<br></font><font color="#008000">//&nbsp;and&nbsp;might&nbsp;degrade&nbsp;performance.&nbsp;You&nbsp;should&nbsp;prefer&nbsp;using&nbsp;<br></font><font color="#008000">//&nbsp;additional&nbsp;properties/fields&nbsp;to&nbsp;the&nbsp;declaring&nbsp;type&nbsp;to&nbsp;<br></font><font color="#008000">//&nbsp;handle&nbsp;numerous&nbsp;states.&nbsp;Another&nbsp;alternative&nbsp;is&nbsp;to&nbsp;provide&nbsp;<br></font><font color="#008000">//&nbsp;a&nbsp;class&nbsp;or&nbsp;structure&nbsp;dedicated&nbsp;to&nbsp;handle&nbsp;arguments&nbsp;passing&nbsp;<br></font><font color="#008000">//&nbsp;(for&nbsp;example&nbsp;see&nbsp;the&nbsp;class&nbsp;System.Diagnostics.ProcessStartInfo&nbsp;<br></font><font color="#008000">//&nbsp;and&nbsp;the&nbsp;method&nbsp;System.Diagnostics.Process.Start(ProcessStartInfo))<br></font><font color="#008000">//&nbsp;See&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;NbParameters&nbsp;metric&nbsp;here&nbsp;<br></font><font color="#008000">//&nbsp;</font><font color="#008000"><a href="http://www.ndepend.com/Metrics.aspx#NbParameters" target="_blank">http://www.ndepend.com/Metrics.aspx#NbParameters</a></font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># Parameters</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">.ctor(DescriptorLineCollection,String,Func&lt;T,String&gt;,Func&lt;String,T&gt;,T ,Func&lt;T,Boolean&gt;)</td><td class="datacell_right1">6</td><td class="datacell_left1">OpenWrap.Dependencies.SingleValue&lt;T&gt;..ctor(DescriptorLineCollection ,String,Func&lt;T,String&gt;,Func&lt;String,T&gt;,T,Func&lt;T,Boolean&gt;)</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">6</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_ok">
              No warning or error. 0 methods on 4049 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;with&nbsp;too&nbsp;many&nbsp;overloads&nbsp;(NbOverloads)</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">NbOverloads</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">6</b><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#0000FF">ORDER</font>&nbsp;<font color="#0000FF">BY</font>&nbsp;<font color="#000064">NbOverloads</font>&nbsp;<font color="#0000FF">DESC</font><font color="#000000"><br><br></font><font color="#008000">//&nbsp;METHODS&nbsp;WHERE&nbsp;NbOverloads&nbsp;&gt;&nbsp;6&nbsp;might&nbsp;<br></font><font color="#008000">//&nbsp;be&nbsp;a&nbsp;problem&nbsp;to&nbsp;maintain&nbsp;and&nbsp;provoke&nbsp;higher&nbsp;coupling&nbsp;<br></font><font color="#008000">//&nbsp;than&nbsp;necessary.&nbsp;<br></font><font color="#008000">//&nbsp;This&nbsp;might&nbsp;also&nbsp;reveal&nbsp;a&nbsp;potential&nbsp;misused&nbsp;of&nbsp;the&nbsp;<br></font><font color="#008000">//&nbsp;C#&nbsp;and&nbsp;VB.NET&nbsp;language&nbsp;that&nbsp;since&nbsp;C#3&nbsp;and&nbsp;VB9&nbsp;support&nbsp;<br></font><font color="#008000">//&nbsp;object&nbsp;initialization.&nbsp;This&nbsp;feature&nbsp;helps&nbsp;reducing&nbsp;the&nbsp;number&nbsp;<br></font><font color="#008000">//&nbsp;of&nbsp;constructors&nbsp;of&nbsp;a&nbsp;class.<br></font><font color="#008000">//&nbsp;See&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;NbOverloads&nbsp;metric&nbsp;here&nbsp;<br></font><font color="#008000">//&nbsp;</font><font color="#008000"><a href="http://www.ndepend.com/Metrics.aspx#NbOverloads" target="_blank">http://www.ndepend.com/Metrics.aspx#NbOverloads</a></font></pre><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 15 methods on 3472 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Potentially&nbsp;unused&nbsp;methods</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#008000">//&nbsp;Caution:&nbsp;Methods&nbsp;used&nbsp;only&nbsp;by&nbsp;reflection&nbsp;might&nbsp;be&nbsp;matched.<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000064">MethodCa</font>&nbsp;<font color="#000000">==</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsPublic</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsProtected</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsEntryPoint</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsExplicitInterfaceImpl</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsClassConstructor</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br></font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsFinalizer</font><font color="#000000"><br></font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Afferent coupling (MethodCa)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">ProgressMessage(ITask)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.ConsoleRunner.ProgressMessage(ITask)</td></tr><tr><td class="datacell_left0">Wrap(IEnumerable&lt;ICommandOutput&gt;,ITaskListener)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.ConsoleRunner.Wrap(IEnumerable&lt;ICommandOutput&gt;,ITaskListener)</td></tr><tr><td class="datacell_left1">ReadTasks()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.ConsoleRunner.ReadTasks()</td></tr><tr><td class="datacell_left0">get_Culture()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Strings.get_Culture()</td></tr><tr><td class="datacell_left1">set_Culture(CultureInfo)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Strings.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Strings..ctor()</td></tr><tr><td class="datacell_left1">get_Entry()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.get_Entry()</td></tr><tr><td class="datacell_left0">CharEq(Int32,String,Int32,String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.StringExtensions.CharEq(Int32,String,Int32,String)</td></tr><tr><td class="datacell_left1">NotifyProgressChanged(Int32)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Tasks.Task.NotifyProgressChanged(Int32)</td></tr><tr><td class="datacell_left0">MoveNext()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.SequenceBuilder+GetEnumerator&gt;d__0.MoveNext()</td></tr><tr><td class="datacell_left1">GetModifiedTimeUtc(XAttribute)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.Http.HttpRepository.GetModifiedTimeUtc (XAttribute)</td></tr><tr><td class="datacell_left0">set_Created(DateTimeOffset)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDescriptor.set_Created(DateTimeOffset)</td></tr><tr><td class="datacell_left1">get_FileSystem()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.get_FileSystem()</td></tr><tr><td class="datacell_left0">AddOpenWrapDependency(PackageDescriptor)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand.AddOpenWrapDependency (PackageDescriptor)</td></tr><tr><td class="datacell_left1">GetCurrentVersion()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand.GetCurrentVersion()</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 296 methods on 4049 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Methods&nbsp;that&nbsp;could&nbsp;be&nbsp;declared&nbsp;as&nbsp;'private'</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">CouldBePrivate</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left"># lines of code (LOC)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">Initialize()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.InternalServices.Initialize()</td></tr><tr><td class="datacell_left0">get_SystemDirectory()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.InstallationPaths.get_SystemDirectory()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.RemoteRepositoryManager..ctor()</td></tr><tr><td class="datacell_left0">Main(String[])</td><td class="datacell_right0">32</td><td class="datacell_left0">OpenWrap.ConsoleRunner.Main(String[])</td></tr><tr><td class="datacell_left1">get_Success()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.TaskProgressMessage.get_Success()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.PackageException..ctor()</td></tr><tr><td class="datacell_left1">.ctor(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.PackageException..ctor(String)</td></tr><tr><td class="datacell_left0">.ctor(String,Exception)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.PackageException..ctor(String,Exception)</td></tr><tr><td class="datacell_left1">.ctor(SerializationInfo,StreamingContext)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.PackageException..ctor(SerializationInfo,StreamingContext)</td></tr><tr><td class="datacell_left0">TrySetValue&lt;T&gt;(PropertyInfo,Object,T)</td><td class="datacell_right0">11</td><td class="datacell_left0">OpenWrap.ReflectionExtensions.TrySetValue&lt;T&gt;(PropertyInfo,Object,T)</td></tr><tr><td class="datacell_left1">StreamReader(Stream)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.IOExtensions.StreamReader(Stream)</td></tr><tr><td class="datacell_left0">ReadLines(IFile,Encoding)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.IOExtensions.ReadLines(IFile,Encoding)</td></tr><tr><td class="datacell_left1">ReadString(IFile)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.IOExtensions.ReadString(IFile)</td></tr><tr><td class="datacell_left0">ReadString(IFile,Encoding)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.IOExtensions.ReadString(IFile,Encoding)</td></tr><tr><td class="datacell_left1">WriteString(IFile,String,Encoding)</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.IOExtensions.WriteString(IFile,String,Encoding)</td></tr><tr><td class="datacell_left0">WriteString(Stream,String)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.IOExtensions.WriteString(Stream,String)</td></tr><tr><td class="datacell_left1">WriteString(Stream,String,Encoding)</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.IOExtensions.WriteString(Stream,String,Encoding)</td></tr><tr><td class="datacell_left0">get_ResourceManager()</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Strings.get_ResourceManager()</td></tr><tr><td class="datacell_left1">get_Culture()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Strings.get_Culture()</td></tr><tr><td class="datacell_left0">set_Culture(CultureInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Strings.set_Culture(CultureInfo)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Strings..ctor()</td></tr><tr><td class="datacell_left0">Raise(EventHandler,Object)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.EventHandlerExtensions.Raise(EventHandler,Object)</td></tr><tr><td class="datacell_left1">Raise(EventHandler,Object,EventArgs)</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.EventHandlerExtensions.Raise(EventHandler,Object,EventArgs)</td></tr><tr><td class="datacell_left0">Merge&lt;T&gt;(IEnumerable&lt;T&gt;,IEnumerable&lt;T&gt;)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.EnumerableExtensions.Merge&lt;T&gt;(IEnumerable&lt;T&gt;,IEnumerable&lt;T&gt;)</td></tr><tr><td class="datacell_left1">get_HasEntries()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerable&lt;T&gt;.get_HasEntries()</td></tr><tr><td class="datacell_left0">get_CachedItems()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.MultiThreadedEnumerator&lt;T&gt;.get_CachedItems()</td></tr><tr><td class="datacell_left1">set_Done(AutoResetEvent)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.set_Done (AutoResetEvent)</td></tr><tr><td class="datacell_left0">get_Pending()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.get_Pending()</td></tr><tr><td class="datacell_left1">set_Pending(Int32)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.set_Pending(Int32)</td></tr><tr><td class="datacell_left0">get_Enumerator()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.get_Enumerator()</td></tr><tr><td class="datacell_left1">set_Enumerator(IEnumerator&lt;T&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.MultiThreadedEnumerator&lt;T&gt;+EnumerableEntry.set_Enumerator (IEnumerator&lt;T&gt;)</td></tr><tr><td class="datacell_left0">CamelToSpacedName(String)</td><td class="datacell_right0">11</td><td class="datacell_left0">OpenWrap.StringExtensions.CamelToSpacedName(String)</td></tr><tr><td class="datacell_left1">GetCamelCaseInitials(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.StringExtensions.GetCamelCaseInitials(String)</td></tr><tr><td class="datacell_left0">SplitCamelCase(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.StringExtensions.SplitCamelCase(String)</td></tr><tr><td class="datacell_left1">set_Clients(List&lt;IPackageAssembliesListener&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Services.PackageDescriptorMonitor+DescriptorSubscriptions .set_Clients(List&lt;IPackageAssembliesListener&gt;)</td></tr><tr><td class="datacell_left0">get_FileSystemWatcher()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Services.PackageDescriptorMonitor+DescriptorSubscriptions .get_FileSystemWatcher()</td></tr><tr><td class="datacell_left1">set_FileSystemWatcher(FileSystemWatcher)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Services.PackageDescriptorMonitor+DescriptorSubscriptions .set_FileSystemWatcher(FileSystemWatcher)</td></tr><tr><td class="datacell_left0">set_Repository(IPackageRepository)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Services.PackageDescriptorMonitor+DescriptorSubscriptions .set_Repository(IPackageRepository)</td></tr><tr><td class="datacell_left1">HasService&lt;T&gt;()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Services.Services.HasService&lt;T&gt;()</td></tr><tr><td class="datacell_left0">Clear()</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Services.Services.Clear()</td></tr><tr><td class="datacell_left1">set_Task(ITask)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Tasks.TaskEventArgs.set_Task(ITask)</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Exports.FolderExport.set_Name(String)</td></tr><tr><td class="datacell_left1">set_FullPath(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Exports.FileExportItem.set_FullPath(String)</td></tr><tr><td class="datacell_left0">get_Result()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.PackageManagement.PackageDescriptorUpdateResult.get_Result()</td></tr><tr><td class="datacell_left1">set_Packages(List&lt;IPackageInfo&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.PackageManagement.PackageFoundResult.set_Packages(List &lt;IPackageInfo&gt;)</td></tr><tr><td class="datacell_left0">get_Name()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.PackageManagement.PackageFoundCommandOutput.get_Name()</td></tr><tr><td class="datacell_left1">get_PreviousPackage()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.PackageManagement.PackageUpdatedResult.get_PreviousPackage()</td></tr><tr><td class="datacell_left0">set_PreviousPackage(IPackageInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.PackageManagement.PackageUpdatedResult.set_PreviousPackage (IPackageInfo)</td></tr><tr><td class="datacell_left1">get_PackageResolver()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Resolvers.RuntimeAssemblyResolver.get_PackageResolver()</td></tr><tr><td class="datacell_left0">get_Environment()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Resolvers.RuntimeAssemblyResolver.get_Environment()</td></tr><tr><td class="datacell_left1">ToZip(IDirectory,Path)</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.IO.ZipExtensions.ToZip(IDirectory,Path)</td></tr><tr><td class="datacell_left0">Success(ICommandOutput)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.CommandOutputExtensions.Success(ICommandOutput)</td></tr><tr><td class="datacell_left1">Error(ICommandOutput)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.CommandOutputExtensions.Error(ICommandOutput)</td></tr><tr><td class="datacell_left0">get_Success()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Result.get_Success()</td></tr><tr><td class="datacell_left1">set_Success(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Result.set_Success(Boolean)</td></tr><tr><td class="datacell_left0">.ctor(Object)</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Commands.Result..ctor(Object)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Warning..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Commands.CommandRepository..ctor()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.AttributeBasedCommandDescriptor&lt;T&gt;..ctor()</td></tr><tr><td class="datacell_left0">set_Noun(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandAttribute.set_Noun(String)</td></tr><tr><td class="datacell_left1">set_Verb(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandAttribute.set_Verb(String)</td></tr><tr><td class="datacell_left0">get_DisplayName()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandAttribute.get_DisplayName()</td></tr><tr><td class="datacell_left1">set_DisplayName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandAttribute.set_DisplayName(String)</td></tr><tr><td class="datacell_left0">set_Description(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.CommandAttribute.set_Description(String)</td></tr><tr><td class="datacell_left1">.ctor(SerializationInfo,StreamingContext)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.AmbiguousInputNameException..ctor(SerializationInfo ,StreamingContext)</td></tr><tr><td class="datacell_left0">set_IsRequired(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandInputAttribute.set_IsRequired(Boolean)</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandInputAttribute.set_Name(String)</td></tr><tr><td class="datacell_left0">set_DisplayName(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandInputAttribute.set_DisplayName(String)</td></tr><tr><td class="datacell_left1">set_Position(Int32)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandInputAttribute.set_Position(Int32)</td></tr><tr><td class="datacell_left0">set_IsValueRequired(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandInputAttribute.set_IsValueRequired(Boolean)</td></tr><tr><td class="datacell_left1">get_CommandName()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.UnknownCommand.get_CommandName()</td></tr><tr><td class="datacell_left0">set_CommandName(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.UnknownCommand.set_CommandName(String)</td></tr><tr><td class="datacell_left1">get_Property()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.ReflectionCommandInputDescriptor.get_Property()</td></tr><tr><td class="datacell_left0">get_Commands()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandList.get_Commands()</td></tr><tr><td class="datacell_left1">set_Commands(ICollection&lt;String&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandList.set_Commands(ICollection&lt;String&gt;)</td></tr><tr><td class="datacell_left0">get_Success()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.CommandList.get_Success()</td></tr><tr><td class="datacell_left1">set_Source(ICommand)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.CommandList.set_Source(ICommand)</td></tr><tr><td class="datacell_left0">.ctor(ICollection&lt;String&gt;)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Commands.CommandList..ctor(ICollection&lt;String&gt;)</td></tr><tr><td class="datacell_left1">AsEnumerable&lt;T&gt;(Func&lt;IEnumerable&lt;T&gt;&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Remote.FuncExtensions.AsEnumerable&lt;T&gt;(Func &lt;IEnumerable&lt;T&gt;&gt;)</td></tr><tr><td class="datacell_left0">set_BasePath(IDirectory)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.FolderRepository.set_BasePath(IDirectory)</td></tr><tr><td class="datacell_left1">get_Packages()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.FolderRepository.get_Packages()</td></tr><tr><td class="datacell_left0">set_Packages(List&lt;FolderRepository+PackageLocation&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.FolderRepository.set_Packages(List &lt;FolderRepository+PackageLocation&gt;)</td></tr><tr><td class="datacell_left1">set_CacheDirectory(IDirectory)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.FolderRepository+PackageLocation .set_CacheDirectory(IDirectory)</td></tr><tr><td class="datacell_left0">set_Package(IPackageInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.FolderRepository+PackageLocation.set_Package (IPackageInfo)</td></tr><tr><td class="datacell_left1">HasDependency(IPackageRepository,String,Version)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.PackageRepositoryExtensions.HasDependency (IPackageRepository,String,Version)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.GacResolver+Loader..ctor()</td></tr><tr><td class="datacell_left1">get_Package()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.PackageCleanResult.get_Package()</td></tr><tr><td class="datacell_left0">set_Description(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.InMemoryPackage.set_Description(String)</td></tr><tr><td class="datacell_left1">set_Nuked(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.InMemoryPackage.set_Nuked(Boolean)</td></tr><tr><td class="datacell_left0">.ctor(ZipFile,ZipEntry)</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.ZipWrapperFile..ctor(ZipFile,ZipEntry)</td></tr><tr><td class="datacell_left1">get_CanPublish()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.InMemoryRepository.get_CanPublish()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.InMemoryRepository.set_Name(String)</td></tr><tr><td class="datacell_left1">get_CanDelete()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.InMemoryRepository.get_CanDelete()</td></tr><tr><td class="datacell_left0">Delete(IPackageInfo)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.InMemoryRepository.Delete(IPackageInfo)</td></tr><tr><td class="datacell_left1">get_Packages()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.InMemoryRepository.get_Packages()</td></tr><tr><td class="datacell_left0">.ctor(String)</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.InMemoryRepository..ctor(String)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Repositories.PackageResolutionStacks..ctor()</td></tr><tr><td class="datacell_left0">get_Dependency()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.ParentedDependency.get_Dependency()</td></tr><tr><td class="datacell_left1">get_Parent()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.ParentedDependency.get_Parent()</td></tr><tr><td class="datacell_left0">.ctor(PackageDependency,ParentedDependency)</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.ParentedDependency..ctor(PackageDependency ,ParentedDependency)</td></tr><tr><td class="datacell_left1">get_FileSystem()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.CurrentDirectoryRepository.get_FileSystem()</td></tr><tr><td class="datacell_left0">get_Environment()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.CurrentDirectoryRepository.get_Environment()</td></tr><tr><td class="datacell_left1">Publish(String,Stream)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.CurrentDirectoryRepository.Publish(String,Stream )</td></tr><tr><td class="datacell_left0">get_CanPublish()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.CurrentDirectoryRepository.get_CanPublish()</td></tr><tr><td class="datacell_left1">get_CanDelete()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Repositories.CurrentDirectoryRepository.get_CanDelete()</td></tr><tr><td class="datacell_left0">Delete(IPackageInfo)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.CurrentDirectoryRepository.Delete(IPackageInfo)</td></tr><tr><td class="datacell_left1">get_Identifier()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.PackageNode.get_Identifier()</td></tr><tr><td class="datacell_left0">get_IndexDocument()</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Repositories.NetworkShareNavigator.get_IndexDocument()</td></tr><tr><td class="datacell_left1">LatestVersions(IEnumerable&lt;IPackageInfo&gt;)</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.Repositories.PackageResolverExtensions.LatestVersions (IEnumerable&lt;IPackageInfo&gt;)</td></tr><tr><td class="datacell_left0">get_BaseDirectory()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.UncompressedPackage.get_BaseDirectory()</td></tr><tr><td class="datacell_left1">set_BaseDirectory(IDirectory)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.UncompressedPackage.set_BaseDirectory(IDirectory )</td></tr><tr><td class="datacell_left0">get_Descriptor()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.UncompressedPackage.get_Descriptor()</td></tr><tr><td class="datacell_left1">set_Descriptor(DefaultPackageInfo)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.UncompressedPackage.set_Descriptor (DefaultPackageInfo)</td></tr><tr><td class="datacell_left0">get_Result()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.PackageConflictsOutput.get_Result()</td></tr><tr><td class="datacell_left1">set_Result(PackageConflictResult)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.PackageConflictsOutput.set_Result (PackageConflictResult)</td></tr><tr><td class="datacell_left0">.ctor(PackageConflictResult)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Repositories.PackageConflictsOutput..ctor (PackageConflictResult)</td></tr><tr><td class="datacell_left1">get_Result()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.PackageMissingOutput.get_Result()</td></tr><tr><td class="datacell_left0">.ctor(PackageMissingResult)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Repositories.PackageMissingOutput..ctor(PackageMissingResult)</td></tr><tr><td class="datacell_left1">set_Dependencies(ICollection&lt;PackageDependency&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.Http.HttpPackageInfo.set_Dependencies (ICollection&lt;PackageDependency&gt;)</td></tr><tr><td class="datacell_left0">set_Dependencies(ICollection&lt;PackageDependency&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.Http.HttpPackage.set_Dependencies(ICollection &lt;PackageDependency&gt;)</td></tr><tr><td class="datacell_left1">get_Version()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetODataProperties.get_Version()</td></tr><tr><td class="datacell_left0">set_Version(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetODataProperties.set_Version(String)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetODataProperties..ctor()</td></tr><tr><td class="datacell_left0">Local(String)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.XPaths.Local(String)</td></tr><tr><td class="datacell_left1">get_PackageName()</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetSyndicationItem.get_PackageName()</td></tr><tr><td class="datacell_left0">get_PackageVersion()</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetSyndicationItem.get_PackageVersion()</td></tr><tr><td class="datacell_left1">get_PackageDescription()</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetSyndicationItem .get_PackageDescription()</td></tr><tr><td class="datacell_left0">get_PackagePublished()</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetSyndicationItem.get_PackagePublished( )</td></tr><tr><td class="datacell_left1">get_PackageHref()</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetSyndicationItem.get_PackageHref()</td></tr><tr><td class="datacell_left0">get_Dependencies()</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetSyndicationItem.get_Dependencies()</td></tr><tr><td class="datacell_left1">get_Id()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetDependency.get_Id()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetSyndicationFeed..ctor()</td></tr><tr><td class="datacell_left1">Content(Stream)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetConverter.Content(Stream)</td></tr><tr><td class="datacell_left0">get_Identifier()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDescriptor.get_Identifier()</td></tr><tr><td class="datacell_left1">get_Nuked()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDescriptor.get_Nuked()</td></tr><tr><td class="datacell_left0">get_UseSymLinks()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDescriptor.get_UseSymLinks()</td></tr><tr><td class="datacell_left1">set_UseSymLinks(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDescriptor.set_UseSymLinks(Boolean)</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Dependencies.GenericDescriptorLine.set_Name(String)</td></tr><tr><td class="datacell_left1">set_Value(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Dependencies.GenericDescriptorLine.set_Value(String)</td></tr><tr><td class="datacell_left0">.ctor(IEnumerable&lt;KeyValuePair&lt;String,String&gt;&gt;)</td><td class="datacell_right0">8</td><td class="datacell_left0">OpenWrap.Dependencies.DescriptorLineCollection..ctor(IEnumerable &lt;KeyValuePair&lt;String,String&gt;&gt;)</td></tr><tr><td class="datacell_left1">.ctor(String,String)</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Dependencies.ExecutionEnvironment..ctor(String,String)</td></tr><tr><td class="datacell_left0">ParseDependsInstruction(String)</td><td class="datacell_right0">3</td><td class="datacell_left0">OpenWrap.Dependencies.DependsParser.ParseDependsInstruction(String)</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Dependencies.DefaultPackageInfo.set_Name(String)</td></tr><tr><td class="datacell_left0">set_Anchored(Boolean)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Dependencies.DefaultPackageInfo.set_Anchored(Boolean)</td></tr><tr><td class="datacell_left1">NewWithDescriptor(IFile,String,String,IEnumerable&lt;PackageContent&gt; ,String[])</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Dependencies.PackageBuilder.NewWithDescriptor(IFile,String ,String,IEnumerable&lt;PackageContent&gt;,String[])</td></tr><tr><td class="datacell_left0">AddTag(String)</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDependencyBuilder.AddTag(String)</td></tr><tr><td class="datacell_left1">RemoveTag(String)</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDependencyBuilder.RemoveTag(String)</td></tr><tr><td class="datacell_left0">get_CurrentDirectory()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.InitializeOpenWrap.get_CurrentDirectory()</td></tr><tr><td class="datacell_left1">set_CurrentDirectory(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.InitializeOpenWrap.set_CurrentDirectory(String)</td></tr><tr><td class="datacell_left0">get_Name()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.InitializeOpenWrap.get_Name()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.InitializeOpenWrap.set_Name(String)</td></tr><tr><td class="datacell_left0">get_StartDebug()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.InitializeOpenWrap.get_StartDebug()</td></tr><tr><td class="datacell_left1">set_StartDebug(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.InitializeOpenWrap.set_StartDebug(Boolean)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Build.InitializeOpenWrap..ctor()</td></tr><tr><td class="datacell_left1">get_Path()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.CommandLinePackageBuilder.get_Path()</td></tr><tr><td class="datacell_left0">set_Path(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.BuildEngines.CommandLinePackageBuilder.set_Path (IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left1">get_Args()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.CommandLinePackageBuilder.get_Args()</td></tr><tr><td class="datacell_left0">set_Args(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.BuildEngines.CommandLinePackageBuilder.set_Args (IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left1">get_Profile()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder.get_Profile()</td></tr><tr><td class="datacell_left0">set_Profile(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder.set_Profile (IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left1">get_Platform()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder.get_Platform()</td></tr><tr><td class="datacell_left0">set_Platform(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder.set_Platform (IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left1">set_Project(IEnumerable&lt;String&gt;)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.MSBuildPackageBuilder.set_Project (IEnumerable&lt;String&gt;)</td></tr><tr><td class="datacell_left0">DownloadString(Uri)</td><td class="datacell_right0">5</td><td class="datacell_left0">OpenWrap.Preloading.NotifyProgressWebClient.DownloadString(Uri)</td></tr><tr><td class="datacell_left1">set_Client(NotifyProgressWebClient)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Preloading.Preloader+RemoteInstall.set_Client (NotifyProgressWebClient)</td></tr><tr><td class="datacell_left0">set_Enabled(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Preloading.Preloader+RemoteInstall.set_Enabled(Boolean)</td></tr><tr><td class="datacell_left1">set_ServerUri(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Preloading.Preloader+RemoteInstall.set_ServerUri(String)</td></tr><tr><td class="datacell_left0">FromServer(String,INotifyDownload)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Preloading.Preloader+RemoteInstall.FromServer(String ,INotifyDownload)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">2</td><td class="datacell_left1">OpenWrap.Preloading.TinySharpZip.ZipArchive..ctor()</td></tr><tr><td class="datacell_left0">set_DirectoryName(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Preloading.TinySharpZip.ZipDirectoryEntry.set_DirectoryName (String)</td></tr><tr><td class="datacell_left1">get_BaseUri()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Configuration.ConfigurationManager.get_BaseUri()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Configuration.InvalidConfigurationException..ctor()</td></tr><tr><td class="datacell_left1">.ctor(String)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Configuration.InvalidConfigurationException..ctor(String)</td></tr><tr><td class="datacell_left0">get_Name()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Configuration.remote_repositories.RemoteRepository.get_Name()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Configuration.remote_repositories.RemoteRepositories..ctor()</td></tr><tr><td class="datacell_left0">get_Command()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandDescriptionOutput.get_Command()</td></tr><tr><td class="datacell_left1">set_Command(ICommandDescriptor)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.CommandDescriptionOutput.set_Command (ICommandDescriptor)</td></tr><tr><td class="datacell_left0">get_CommandName()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandDescriptionOutput.get_CommandName()</td></tr><tr><td class="datacell_left1">set_CommandName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.CommandDescriptionOutput.set_CommandName(String )</td></tr><tr><td class="datacell_left0">get_UsageLine()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandDescriptionOutput.get_UsageLine()</td></tr><tr><td class="datacell_left1">set_UsageLine(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.CommandDescriptionOutput.set_UsageLine(String)</td></tr><tr><td class="datacell_left0">get_Description()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandDescriptionOutput.get_Description()</td></tr><tr><td class="datacell_left1">set_Description(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.CommandDescriptionOutput.set_Description(String )</td></tr><tr><td class="datacell_left0">get_Parameters()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandDescriptionOutput.get_Parameters()</td></tr><tr><td class="datacell_left1">set_Parameters(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.CommandDescriptionOutput.set_Parameters(String)</td></tr><tr><td class="datacell_left0">.ctor(ICommandDescriptor)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Commands.Core.CommandListResult..ctor(ICommandDescriptor)</td></tr><tr><td class="datacell_left1">set_CommandName(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Core.GetHelpCommand.set_CommandName(String)</td></tr><tr><td class="datacell_left0">get_CommandRepository()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Core.GetHelpCommand.get_CommandRepository()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Commands.Core.GetHelpCommand..ctor()</td></tr><tr><td class="datacell_left0">set_Remote(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.PublishWrapCommand.set_Remote(String)</td></tr><tr><td class="datacell_left1">set_Path(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.PublishWrapCommand.set_Path(String)</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.PublishWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left1">get_Environment()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.PublishWrapCommand.get_Environment()</td></tr><tr><td class="datacell_left0">get_FileSystem()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.PublishWrapCommand.get_FileSystem()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Commands.Wrap.PublishWrapCommand..ctor()</td></tr><tr><td class="datacell_left0">set_Query(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.ListWrapCommand.set_Query(String)</td></tr><tr><td class="datacell_left1">get_System()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.ListWrapCommand.get_System()</td></tr><tr><td class="datacell_left0">set_System(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.ListWrapCommand.set_System(Boolean)</td></tr><tr><td class="datacell_left1">get_Remote()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.ListWrapCommand.get_Remote()</td></tr><tr><td class="datacell_left0">set_Remote(String)</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Commands.Wrap.ListWrapCommand.set_Remote(String)</td></tr><tr><td class="datacell_left1">get_Environment()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.ListWrapCommand.get_Environment()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Wrap.ListWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">get_ConflictingPackages()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.DependenciesConflictMessage .get_ConflictingPackages()</td></tr><tr><td class="datacell_left0">set_ConflictingPackages(List&lt;IGrouping&lt;String,ResolvedPackage&gt;&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.DependenciesConflictMessage .set_ConflictingPackages(List&lt;IGrouping&lt;String,ResolvedPackage&gt;&gt;)</td></tr><tr><td class="datacell_left1">.ctor(List&lt;IGrouping&lt;String,ResolvedPackage&gt;&gt;)</td><td class="datacell_right1">3</td><td class="datacell_left1">OpenWrap.Commands.Wrap.DependenciesConflictMessage..ctor(List &lt;IGrouping&lt;String,ResolvedPackage&gt;&gt;)</td></tr><tr><td class="datacell_left0">set_Remote(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.NukeWrapCommand.set_Remote(String)</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.NukeWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">set_Version(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.NukeWrapCommand.set_Version(String)</td></tr><tr><td class="datacell_left1">get_Environment()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.NukeWrapCommand.get_Environment()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Wrap.NukeWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">set_All(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.set_All(Boolean)</td></tr><tr><td class="datacell_left0">set_Meta(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand.set_Meta(Boolean)</td></tr><tr><td class="datacell_left1">set_Projects(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.set_Projects(String)</td></tr><tr><td class="datacell_left0">set_Git(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand.set_Git(Boolean)</td></tr><tr><td class="datacell_left1">set_Hg(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.set_Hg(Boolean)</td></tr><tr><td class="datacell_left0">set_Bazaar(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand.set_Bazaar(Boolean)</td></tr><tr><td class="datacell_left1">get_IgnoreFileName()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.get_IgnoreFileName()</td></tr><tr><td class="datacell_left0">set_Target(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand.set_Target(String)</td></tr><tr><td class="datacell_left1">VerifyArguments()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.InitWrapCommand.VerifyArguments()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">2</td><td class="datacell_left0">OpenWrap.Commands.Wrap.InitWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">get_Name()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.CleanWrapCommand.get_Name()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.CleanWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left1">get_System()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.CleanWrapCommand.get_System()</td></tr><tr><td class="datacell_left0">set_System(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.CleanWrapCommand.set_System(Boolean)</td></tr><tr><td class="datacell_left1">get_Project()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.CleanWrapCommand.get_Project()</td></tr><tr><td class="datacell_left0">set_Project(Boolean)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.CleanWrapCommand.set_Project(Boolean)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Commands.Wrap.CleanWrapCommand..ctor()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left1">get_Path()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand.get_Path()</td></tr><tr><td class="datacell_left0">set_Path(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand.set_Path(String)</td></tr><tr><td class="datacell_left1">set_Quiet(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand.set_Quiet(Boolean)</td></tr><tr><td class="datacell_left0">get_Environment()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand.get_Environment()</td></tr><tr><td class="datacell_left1">get_FileSystem()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.BuildWrapCommand.get_FileSystem()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.BuildWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">get_NoDescriptorUpdate()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.get_NoDescriptorUpdate()</td></tr><tr><td class="datacell_left1">set_NoDescriptorUpdate(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.set_NoDescriptorUpdate(Boolean)</td></tr><tr><td class="datacell_left0">set_Project(Boolean)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.set_Project(Boolean)</td></tr><tr><td class="datacell_left1">set_System(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.set_System(Boolean)</td></tr><tr><td class="datacell_left0">get_Content()</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.get_Content()</td></tr><tr><td class="datacell_left1">set_Content(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.set_Content(Boolean)</td></tr><tr><td class="datacell_left0">set_Version(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.set_Version(String)</td></tr><tr><td class="datacell_left1">set_MinVersion(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.set_MinVersion(String)</td></tr><tr><td class="datacell_left0">set_MaxVersion(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.set_MaxVersion(String)</td></tr><tr><td class="datacell_left1">get_Anchored()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.get_Anchored()</td></tr><tr><td class="datacell_left0">set_Anchored(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand.set_Anchored(Boolean)</td></tr><tr><td class="datacell_left1">get_PackageRequest()</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Commands.Wrap.AddWrapCommand.get_PackageRequest()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.AddWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">get_File()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.FilePackageBuilder.get_File()</td></tr><tr><td class="datacell_left0">set_File(IEnumerable&lt;String&gt;)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.FilePackageBuilder.set_File(IEnumerable&lt;String&gt; )</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.UpdateWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">set_System(Boolean)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.UpdateWrapCommand.set_System(Boolean)</td></tr><tr><td class="datacell_left1">set_Project(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.UpdateWrapCommand.set_Project(Boolean)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Wrap.UpdateWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">set_Project(Boolean)</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_Project(Boolean)</td></tr><tr><td class="datacell_left1">set_System(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_System(Boolean)</td></tr><tr><td class="datacell_left0">set_Version(Version)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_Version(Version)</td></tr><tr><td class="datacell_left1">get_Clean()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand.get_Clean()</td></tr><tr><td class="datacell_left0">set_Clean(Boolean)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_Clean(Boolean)</td></tr><tr><td class="datacell_left1">set_Last(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand.set_Last(Boolean)</td></tr><tr><td class="datacell_left0">get_Options()</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Commands.Wrap.RemoveWrapCommand.get_Options()</td></tr><tr><td class="datacell_left1">get_PackageRequest()</td><td class="datacell_right1">5</td><td class="datacell_left1">OpenWrap.Commands.Wrap.RemoveWrapCommand.get_PackageRequest()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Wrap.RemoveWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.SetWrapCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">get_Content()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand.get_Content()</td></tr><tr><td class="datacell_left1">set_Content(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.SetWrapCommand.set_Content(Boolean)</td></tr><tr><td class="datacell_left0">get_Anchored()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand.get_Anchored()</td></tr><tr><td class="datacell_left1">set_Anchored(Boolean)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Wrap.SetWrapCommand.set_Anchored(Boolean)</td></tr><tr><td class="datacell_left0">set_Version(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand.set_Version(String)</td></tr><tr><td class="datacell_left1">set_MinVersion(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.SetWrapCommand.set_MinVersion(String)</td></tr><tr><td class="datacell_left0">set_MaxVersion(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand.set_MaxVersion(String)</td></tr><tr><td class="datacell_left1">set_AnyVersion(Boolean)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Wrap.SetWrapCommand.set_AnyVersion(Boolean)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Wrap.SetWrapCommand..ctor()</td></tr><tr><td class="datacell_left1">get_Name()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Remote.RemoteRepositoryMessage.get_Name()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Remote.RemoteRepositoryMessage.set_Name(String)</td></tr><tr><td class="datacell_left1">get_RemoteRepository()</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Remote.RemoteRepositoryMessage.get_RemoteRepository( )</td></tr><tr><td class="datacell_left0">set_RemoteRepository(RemoteRepository)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Remote.RemoteRepositoryMessage.set_RemoteRepository (RemoteRepository)</td></tr><tr><td class="datacell_left1">get_Success()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Remote.RemoteRepositoryMessage.get_Success()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Remote.RemoveRemoteCommand.set_Name(String)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Commands.Remote.RemoveRemoteCommand..ctor()</td></tr><tr><td class="datacell_left0">set_Name(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.Remote.AddRemoteCommand.set_Name(String)</td></tr><tr><td class="datacell_left1">set_Href(Uri)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Remote.AddRemoteCommand.set_Href(Uri)</td></tr><tr><td class="datacell_left0">get_Position()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Remote.AddRemoteCommand.get_Position()</td></tr><tr><td class="datacell_left1">set_Position(Int32)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Remote.AddRemoteCommand.set_Position(Int32)</td></tr><tr><td class="datacell_left0">get_NameIsValid()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Remote.AddRemoteCommand.get_NameIsValid()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">N/A</td><td class="datacell_left1">OpenWrap.Commands.Remote.AddRemoteCommand..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Remote.ListRemoteCommand..ctor()</td></tr><tr><td class="datacell_left1">set_Name(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Commands.Remote.SetRemoteCommand.set_Name(String)</td></tr><tr><td class="datacell_left0">get_Priority()</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Commands.Remote.SetRemoteCommand.get_Priority()</td></tr><tr><td class="datacell_left1">set_Priority(Int32)</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Commands.Remote.SetRemoteCommand.set_Priority(Int32)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Commands.Remote.SetRemoteCommand..ctor()</td></tr><tr><td class="datacell_left1">get_FileSystem()</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.Tests.Commands.NuPack.ConvertNuGet.get_FileSystem()</td></tr><tr><td class="datacell_left0">set_Path(String)</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Tests.Commands.NuPack.ConvertNuGet.set_Path(String)</td></tr><tr><td class="datacell_left1">set_Destination(String)</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Tests.Commands.NuPack.ConvertNuGet.set_Destination(String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">N/A</td><td class="datacell_left0">OpenWrap.Tests.Commands.NuPack.ConvertNuGet..ctor()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">260</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">0.87838</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">32</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">2.3013</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">5.296</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 2 methods on 3472 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Afferent&nbsp;(incoming)&nbsp;coupling&nbsp;method&nbsp;level</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">METHODS</font>&nbsp;<font color="#0000FF">WHERE</font>&nbsp;<font color="#000064">MethodCa</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">30</b></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">methods</td><td class="hdrcell_left">Afferent coupling (MethodCa)</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">EqualsNoCase(String,String)</td><td class="datacell_right1">40</td><td class="datacell_left1">OpenWrap.StringExtensions.EqualsNoCase(String,String)</td></tr><tr><td class="datacell_left0">GetService&lt;T&gt;()</td><td class="datacell_right0">36</td><td class="datacell_left0">OpenWrap.Services.Services.GetService&lt;T&gt;()</td></tr><tr><td class="datacell_stat1">Sum:</td><td class="datacell_stat1">76</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Average:</td><td class="datacell_stat0">38</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Minimum:</td><td class="datacell_stat1">36</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Maximum:</td><td class="datacell_stat0">40</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Standard deviation:</td><td class="datacell_stat1">2</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Variance:</td><td class="datacell_stat0">4</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 33 fields on 1806 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Fields&nbsp;should&nbsp;be&nbsp;marked&nbsp;as&nbsp;ReadOnly&nbsp;when&nbsp;possible</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">FIELDS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000064">IsImmutable</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInitOnly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000"><br>&nbsp;&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">fields</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">_configurationManager</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.RemoteRepositoryManager._configurationManager</td></tr><tr><td class="datacell_left0">ProgressChanged</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.TaskProgressMessage.ProgressChanged</td></tr><tr><td class="datacell_left1">StatusChanged</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.TaskProgressMessage.StatusChanged</td></tr><tr><td class="datacell_left0">Complete</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.TaskProgressMessage.Complete</td></tr><tr><td class="datacell_left1">_valueBuilt</td><td class="datacell_right1">1</td><td class="datacell_left1">OpenWrap.LazyValue&lt;T&gt;._valueBuilt</td></tr><tr><td class="datacell_left0">TaskStarted</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Tasks.TaskManager.TaskStarted</td></tr><tr><td class="datacell_left1">ProgressChanged</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Tasks.Task.ProgressChanged</td></tr><tr><td class="datacell_left0">StatusChanged</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Tasks.Task.StatusChanged</td></tr><tr><td class="datacell_left1">Complete</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Tasks.Task.Complete</td></tr><tr><td class="datacell_left0">_success</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.PackageManagement.PackageAnchoredResult._success</td></tr><tr><td class="datacell_left1">_exporter</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.PackageManagement.DefaultPackageManager._exporter</td></tr><tr><td class="datacell_left0">_resourceManagers</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Commands.CommandDocumentation._resourceManagers</td></tr><tr><td class="datacell_left1">results</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Commands.SequenceBuilder.results</td></tr><tr><td class="datacell_left0">_nodes</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.CallStack._nodes</td></tr><tr><td class="datacell_left1">_rootCacheDirectory</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.FolderRepository._rootCacheDirectory</td></tr><tr><td class="datacell_left0">_identifier</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.ZipPackage._identifier</td></tr><tr><td class="datacell_left1">_loadedAssemblies</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.GacResolver+Loader._loadedAssemblies</td></tr><tr><td class="datacell_left0">_compatiblePackageVersions</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.PackageSelectionContext ._compatiblePackageVersions</td></tr><tr><td class="datacell_left1">_incompatiblePackages</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.PackageSelectionContext._incompatiblePackages</td></tr><tr><td class="datacell_left0">_success</td><td class="datacell_right0">1</td><td class="datacell_left0">OpenWrap.Repositories.PackageCleanResult._success</td></tr><tr><td class="datacell_left1">_version</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.UncompressedPackage._version</td></tr><tr><td class="datacell_left0">_identifier</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.Http.HttpPackage._identifier</td></tr><tr><td class="datacell_left1">_oDataNode</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetSyndicationItem._oDataNode</td></tr><tr><td class="datacell_left0">FrameworkProfiles</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetConverter.FrameworkProfiles</td></tr><tr><td class="datacell_left1">FrameworkVersions</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.NuGetConverter.FrameworkVersions</td></tr><tr><td class="datacell_left0">_feedUri</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.NuGetFeedNavigator._feedUri</td></tr><tr><td class="datacell_left1">_lineParser</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDescriptorReaderWriter._lineParser</td></tr><tr><td class="datacell_left0">_name</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Dependencies.MultiLine&lt;T&gt;._name</td></tr><tr><td class="datacell_left1">_tags</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Dependencies.PackageDependencyBuilder._tags</td></tr><tr><td class="datacell_left0">_versions</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Dependencies.PackageDependencyBuilder._versions</td></tr><tr><td class="datacell_left1">_progress</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Preloading.NotifyProgressWebClient._progress</td></tr><tr><td class="datacell_left0">_configurationSectionRegex</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Configuration.ConfigurationParser._configurationSectionRegex</td></tr><tr><td class="datacell_left1">_configurationLineRegex</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Configuration.ConfigurationParser._configurationLineRegex</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">99</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">3</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">4</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">1.6514</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">2.7273</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr><title>CQL Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style>OpenWrap  (analysis done 1 day ago, Sun 19 Dec  14:12 most recent)<br><br><div class="cql_warning">
              WARNING: The following CQL constraint is not satisfied. 17 fields on 1806 tested match the condition.
            </div><pre style="background: #F6F6F6"><font color="#008000">//&nbsp;&lt;Name&gt;</font><b style="color:#008000;background-color:#E6FFE6">Fields&nbsp;should&nbsp;be&nbsp;declared&nbsp;as&nbsp;private</b><font color="#008000">&lt;/Name&gt;<br></font><font color="#0000FF">WARN</font>&nbsp;<font color="#0000FF">IF</font>&nbsp;<font color="#000064">Count</font>&nbsp;<font color="#000000">&gt;</font>&nbsp;<b style="color:#000000;background-color:#FFFF99">0</b>&nbsp;<font color="#0000FF">IN</font>&nbsp;<font color="#0000FF">SELECT</font>&nbsp;<font color="#0000FF">FIELDS</font>&nbsp;<font color="#0000FF">WHERE</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsPrivate</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br><br>&nbsp;</font><font color="#008000">//&nbsp;These&nbsp;conditions&nbsp;filter&nbsp;cases&nbsp;where&nbsp;fields&nbsp;<br></font>&nbsp;<font color="#008000">//&nbsp;doesn't&nbsp;represent&nbsp;state&nbsp;that&nbsp;should&nbsp;be&nbsp;encapsulated.&nbsp;<br></font>&nbsp;<font color="#000000">!</font><font color="#000064">IsInFrameworkAssembly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsGeneratedByCompiler</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsSpecialName</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsInitOnly</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsLiteral</font>&nbsp;<font color="#0000FF">AND</font><font color="#000000">&nbsp;<br>&nbsp;</font><font color="#000000">!</font><font color="#000064">IsEnumValue</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tbody><tr><td class="hdrcell_left">fields</td><td class="hdrcell_left">Size of instance</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">Input</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Commands.CommandLineProcessor+ParsedInput.Input</td></tr><tr><td class="datacell_left0">InputName</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Commands.CommandLineProcessor+ParsedInput.InputName</td></tr><tr><td class="datacell_left1">ParsedValue</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Commands.CommandLineProcessor+ParsedInput.ParsedValue</td></tr><tr><td class="datacell_left0">RawValue</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Commands.CommandLineProcessor+ParsedInput.RawValue</td></tr><tr><td class="datacell_left1">Profile</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.EnvironmentDependentFile.Profile</td></tr><tr><td class="datacell_left0">Platform</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Repositories.EnvironmentDependentFile.Platform</td></tr><tr><td class="datacell_left1">Item</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Repositories.EnvironmentDependentFile.Item</td></tr><tr><td class="datacell_left0">Package</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.XPaths.Package</td></tr><tr><td class="datacell_left1">Metadata</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.XPaths.Metadata</td></tr><tr><td class="datacell_left0">Dependencies</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.XPaths.Dependencies</td></tr><tr><td class="datacell_left1">OldDependencies</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.XPaths.OldDependencies</td></tr><tr><td class="datacell_left0">PackageName</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.XPaths.PackageName</td></tr><tr><td class="datacell_left1">PackageVersion</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.XPaths.PackageVersion</td></tr><tr><td class="datacell_left0">PackageDescription</td><td class="datacell_right0">0</td><td class="datacell_left0">OpenWrap.Repositories.NuGet.XPaths.PackageDescription</td></tr><tr><td class="datacell_left1">PackageDependencies</td><td class="datacell_right1">0</td><td class="datacell_left1">OpenWrap.Repositories.NuGet.XPaths.PackageDependencies</td></tr><tr><td class="datacell_left0">_fileSystem</td><td class="datacell_right0">4</td><td class="datacell_left0">OpenWrap.Build.BuildEngines.AbstractProcessPackageBuilder._fileSystem</td></tr><tr><td class="datacell_left1">_environment</td><td class="datacell_right1">4</td><td class="datacell_left1">OpenWrap.Build.BuildEngines.AbstractProcessPackageBuilder._environment</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">36</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">2.1176</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">4</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">1.9965</td><td class="datacell_empty"></td></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">3.9862</td><td class="datacell_empty"></td></tr></tbody></table><br><br><hr></body></html>