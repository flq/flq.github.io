<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Realfiction RSS]]></title><description><![CDATA[Content from Frank Quednau about dev and fields of interest.]]></description><link>https://realfiction.net</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 16 May 2021 20:02:15 GMT</lastBuildDate><item><title><![CDATA[Waiting for moderna times - Tab cleanup]]></title><description><![CDATA[While I'm waiting for my jabs, I shouldn't forget cleaning up my browsers once in a while and feed my blog. 76 years ago, WW2 ended Today I…]]></description><link>https://realfiction.net/2021/05/08/waiting-for-moderna-times-tab-cleanup</link><guid isPermaLink="false">https://realfiction.net/2021/05/08/waiting-for-moderna-times-tab-cleanup</guid><pubDate>Sat, 08 May 2021 11:00:00 GMT</pubDate><content:encoded>&lt;p&gt;While I&amp;#x27;m waiting for my jabs, I shouldn&amp;#x27;t forget cleaning up my browsers once in a while and feed my blog.&lt;/p&gt;&lt;h2&gt;76 years ago, WW2 ended&lt;/h2&gt;&lt;p&gt;Today I was pointed to a famous speech of former President Richard von Weizsäcker he held on the 8th of May 1945 - back then, it was already 40 years ago, that the second world war ended. &lt;a href=&quot;https://www.bundespraesident.de/SharedDocs/Reden/DE/Richard-von-Weizsaecker/Reden/1985/05/19850508_Rede.html&quot;&gt;The speech&lt;/a&gt; is about 45 minutes long (and in German), but if you&amp;#x27;re a frequent podcast listener, you can put the speed at 1.5 and listen to the memorable speech in about half an hour.&lt;/p&gt;&lt;div link=&quot;https://www.youtube.com/embed/C3ZAzpk4IbE&quot;&gt;&lt;/div&gt;&lt;figcaption&gt;Richard v. Weizsäcker on the 8th of May 1985&lt;/figcaption&gt;&lt;h2&gt;Modified Newtonian Dynamics (MOND) vs Dark Matter&lt;/h2&gt;&lt;p&gt;I&amp;#x27;m really not an expert on this - I haven&amp;#x27;t studied physics. But since this is my blog, I can give you my personal opinion. I have always favored falvors of MOND over dark matter - that the rotational speeds of galaxies do not correlate with our current theory of gravitation, in the light of visible matter, seemed always more natural an issue with gravitation rather than missing out massive amounts of matter. It seemed that in the time where particle physics completely dominated physics budgets and career ladders in physics, it was a clear case of &amp;quot;What you see is all there is&amp;quot;, or, if you know how to wield a hammer, everything looks like a nail.&lt;/p&gt;&lt;p&gt;Thankfully, MOND is far from dead and in fact in many circumstances explains observations far easier than dark matter. Susanne, in her typical attitude of thinking for herself, argues that both may be correct and are required to explain all of the observations - which, to me, has a nice symmetry to the basic and fundamental divide between our two most successful physical theories.&lt;/p&gt;&lt;div link=&quot;https://www.youtube.com/embed/4_qJptwikRc&quot;&gt;&lt;/div&gt;&lt;figcaption&gt;Dark Matter: The Situation has Changed&lt;/figcaption&gt;&lt;h2&gt;I should have loved biology...&lt;/h2&gt;&lt;p&gt;...is a sentiment that I definitely share with James Somers, an argument that he outlines in his &lt;a href=&quot;https://jsomers.net/i-should-have-loved-biology/&quot;&gt;equally named post&lt;/a&gt;. The things I&amp;#x27;ve learned through following posts and tweets from experts in the fields of Immunology and Virology, Vaccines, DNA, RNA, and mRNA have left me in awe at the wonderful machinery of life, a machinaery that begins in brownian motion and molecular mechanical devices and ends in human minds designing mRNA to combat a new pathogen. Fantastic! We need to touch the emotions of kids when we introduce such things in school - facts are fantastic, but they must be connected to our emotions, to our spiritual self, if you feel. It is, after all, nothing but a miracle that if you throw quadrillions of molecular devices together, and connect them through thousands of different interactions you get complex life.&lt;/p&gt;&lt;h2&gt;Interview with Kent Beck&lt;/h2&gt;&lt;p&gt;Mr. Beck is probably someone who comes closest to be a person that inspires me - here&amp;#x27;s an interview with him I had &lt;a href=&quot;https://builtin.com/software-engineering-perspectives/kent-beck-geeks-gusto-globalization&quot;&gt;hanging around in my tabs&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Named injected dependencies in .NET 5 / Core]]></title><description><![CDATA[At  ahead intranet  we like to keep the number of moving parts low in our code. This would also mean to come back to the default dependency…]]></description><link>https://realfiction.net/2021/03/20/named-injected-dependencies-in-net-5-core</link><guid isPermaLink="false">https://realfiction.net/2021/03/20/named-injected-dependencies-in-net-5-core</guid><pubDate>Sat, 20 Mar 2021 17:30:00 GMT</pubDate><content:encoded>&lt;p&gt;At &lt;a href=&quot;https://aheadintranet.com&quot;&gt;ahead intranet&lt;/a&gt; we like to keep the number of moving parts low in our code. This would also mean to come back to the default dependency injection container that comes with .NET Core / .NET 5 applications (right now we&amp;#x27;re using &lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt;). So far, however, we are using some container features that have no direct translation to the default one, most notably having named or keyed dependencies.&lt;/p&gt;&lt;p&gt;In some research I came across Steve Collins&amp;#x27; blog post on &lt;a href=&quot;https://stevetalkscode.co.uk/named-dependencies-part-2&quot;&gt;&amp;quot;Getting named dependencies by Name or Key using the .NET Core Container&amp;quot;&lt;/a&gt;&lt;/p&gt;&lt;div&gt;&lt;p&gt;Steve did a webinar in the context of Jetbrains&amp;#x27; work in the .NET ecosystem. &lt;a href=&quot;https://www.youtube.com/watch?v=0x2KW-dJDQU&quot;&gt;See the recording on youtube&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;There he shows how to inject a named delegate of the form&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;IDependency&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;UseMeToGetNamedDependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;go and have a read!&lt;/p&gt;&lt;h2&gt;Attempt N&lt;sup&gt;o&lt;/sup&gt; 1&lt;/h2&gt;&lt;p&gt;Yesterday I tried to adapt his approach into a more generic fashion in that, given the following API:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;IServiceCollection&lt;/span&gt; svcs&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
svcs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddAll&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;IDependency&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token named-parameter punctuation&quot;&gt;naming&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; type &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Dependency&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token named-parameter punctuation&quot;&gt;lookupDelegate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;UseMeToGetNamedDependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It would not only register all implementations of &lt;code class=&quot;language-text&quot;&gt;IDependency&lt;/code&gt; but register the referenced delegate which could then be injected and used in the code to get access to &lt;code class=&quot;language-text&quot;&gt;IDependency&lt;/code&gt; instances by name. The idea was to compile a switch expression that would perform the lookup that Steve coded manually in the blog post. Alas, what looks so &lt;em&gt;&amp;quot;easy&amp;quot;&lt;/em&gt; in the post actually involves a closure over a &lt;code class=&quot;language-text&quot;&gt;IServiceProvider&lt;/code&gt; instance. You might recall that the C# compiler does &lt;a href=&quot;https://stackoverflow.com/a/14586368/51428&quot;&gt;plenty of things to support closures&lt;/a&gt;. This added difficulty was doing my head in and I really didn&amp;#x27;t want to start recreating compiler code, so I gave up on it and was thrown back to good ol&amp;#x27; classes.&lt;/p&gt;&lt;h2&gt;Attempt N&lt;sup&gt;o&lt;/sup&gt; 2&lt;/h2&gt;&lt;p&gt;Introducing an interface like this:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;INamedLookup&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;out&lt;/span&gt; T&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token return-type class-name&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is possible to implement this interface, where the implementation has a dependency on &lt;code class=&quot;language-text&quot;&gt;IServiceProvider&lt;/code&gt; - there is our closure 😅.&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;IServiceCollection&lt;/span&gt; svcs&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
svcs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddAll&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;IDependency&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token named-parameter punctuation&quot;&gt;naming&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; type &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Dependency&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;AddAll&lt;/code&gt; code already already knows what &lt;code class=&quot;language-text&quot;&gt;IDependency&lt;/code&gt; are available. Providing the optional naming function triggers it to create a dictionary of names against concrete implementations:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;
&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; candidates &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; assemblies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SelectMany&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DefinedTypes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;t &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; t&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;InstantiableAndImplementing&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// naming is the function of type Func&amp;lt;Type,string&amp;gt; that we passed in.&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; namingDictionary &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; candidates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToDictionary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;naming&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
NamedLookupInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RegisterMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;targetType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; namingDictionary&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then the code will also register all concrete implementations of &lt;code class=&quot;language-text&quot;&gt;IDependency&lt;/code&gt;. The implementation of &lt;code class=&quot;language-text&quot;&gt;INamedLookup&lt;/code&gt; can now use the stored dictionary to instantiate concrete implementations based on the provided name:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NamedLookup&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;INamedLookup&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IServiceProvider&lt;/span&gt; serviceProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IReadOnlyDictionary&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TypeInfo&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; serviceMap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NamedLookup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IServiceProvider&lt;/span&gt; serviceProvider&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; serviceProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;NamedLookupInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;TryGetValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;out&lt;/span&gt; serviceMap&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;ArgumentException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
              &lt;span class=&quot;token interpolation-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;$&amp;quot;There is no service map for return type &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token expression language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; registered&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; serviceMap
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;TryGetValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; serviceType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; serviceProvider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;serviceType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This named lookup type is also registered in the container against the &lt;code class=&quot;language-text&quot;&gt;INamedLookup&amp;lt;T&amp;gt;&lt;/code&gt; interface.
Any classes can now take a dependency on &lt;code class=&quot;language-text&quot;&gt;INamedLookup&amp;lt;IDependency&amp;gt;&lt;/code&gt; and access named dependencies like so:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; someNamedDependency &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; lookup&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;CoolName&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;ArgumentException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;No dependency named CoolName&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The relevant interface is still easy enough to mock in some test should you wish to do so. Finally, it is also straightforward to find its usage in the code, which was an excellent point being made in Steve&amp;#x27;s post. &lt;/p&gt;</content:encoded></item><item><title><![CDATA[It's continued Pi Day - again!]]></title><description><![CDATA[Oh. My. Gawd - it's Pi Day, again! I've written a few times about Pi already. No idea why this number fascinates me so much. I even made a…]]></description><link>https://realfiction.net/2021/03/14/its-continued-pi-day-again</link><guid isPermaLink="false">https://realfiction.net/2021/03/14/its-continued-pi-day-again</guid><pubDate>Sun, 14 Mar 2021 19:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Oh. My. Gawd - it&amp;#x27;s Pi Day, again! I&amp;#x27;ve written a few times about Pi already. No idea why this number fascinates me so much. I even made a blog post &lt;a href=&quot;/2011/03/14/in-honour-of-the-pi-day-expansion-series-in-silverlight&quot;&gt;exactly 10 years ago&lt;/a&gt;. Unfortunately, back then I used Silverlight. Had I just used Javascript, I would still have running code.&lt;/p&gt;&lt;p&gt;I have also written about continued fractions &lt;a href=&quot;/2007/06/03/road-to-reality-continued-fractions&quot;&gt;once before&lt;/a&gt;. They are a fascinating construct which can be used to build interesting numbers. One interesting number is...Pi. You can see on wikipedia &lt;a href=&quot;https://en.wikipedia.org/wiki/Continued_fraction#Generalized_continued_fraction&quot;&gt;some examples for Pi expansions&lt;/a&gt; in the form of continued fractions.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/wikipedia-pi.png&quot; alt=&quot;My Mum&amp;#x27;s trusty Sony tape player&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;Continued fraction of Pi as taken from Wikipedia&lt;/figcaption&gt;&lt;p&gt;If we take one of those and slap it into js, we get sth like this:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fraction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; steps&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fraction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;numerator&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; remainingSteps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;remainingSteps &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;numerator &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; numerator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; 
               &lt;span class=&quot;token function&quot;&gt;fraction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;numerator &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; remainingSteps &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The steps is the input as to how far you want to go down the rabbit hole on the continued fraction.&lt;/p&gt;&lt;p&gt;Let&amp;#x27;s give it a shot:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&amp;gt; pi(40)
3.1415960255684015

&amp;gt; pi(400)
3.1415926574380006

&amp;gt; pi(4000)
3.1415926535936936

&amp;gt; pi(8631)
3.141592653589_4045&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;8631&lt;/strong&gt; was then incidentally the highest recursion depth before node on the cli would tell me... &lt;strong&gt;RangeError: Maximum call stack size exceeded&lt;/strong&gt;. Checking against the number Pi as found on the internet I see that the &lt;strong&gt;first 12 digits&lt;/strong&gt; after the decimal point &lt;strong&gt;are correct&lt;/strong&gt;. Good enough for most calculations, I assume.&lt;/p&gt;&lt;p&gt;Happy Pi day everyone!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Notes on Interview with Neuroscientist Dr. Andrew Huberman]]></title><description><![CDATA[This is (at least for me) a super-interesting interview. I can recommend the watch, even though I had to split it over several days, since…]]></description><link>https://realfiction.net/2021/02/27/notes-on-interview-with-neuroscientist-dr-andrew-huberman</link><guid isPermaLink="false">https://realfiction.net/2021/02/27/notes-on-interview-with-neuroscientist-dr-andrew-huberman</guid><pubDate>Sat, 27 Feb 2021 19:00:00 GMT</pubDate><content:encoded>&lt;div link=&quot;https://www.youtube.com/embed/SwQhKFMxmDY&quot;&gt;&lt;/div&gt;&lt;figcaption&gt;Rich Roll Podcast: Interview with Dr. Andrew Hubermann&lt;/figcaption&gt;&lt;p&gt;This is (at least for me) a super-interesting interview. I can recommend the watch, even though I had to split it over several days, since it is more than 2 hours and packed with information.&lt;/p&gt;&lt;p&gt;This is just me keeping some notes, so I can pick up on this again…&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If you want to change something or learn something, you need &lt;strong&gt;focus&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Acetylcholine&quot;&gt;Acetylcholine&lt;/a&gt; - important neurotransmitter that marks neurons involved in a certain behavior for change, which is subsequently acted upon &lt;strong&gt;during sleep&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;What&amp;#x27;s the brain interested in? &lt;ul&gt;&lt;li&gt;&lt;strong&gt;Duration&lt;/strong&gt; - How long will it take&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Path&lt;/strong&gt; - WHat is the way through?&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; - What is ultimately gonna happen?&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Urgency is required, a state of alertness! Chemically this is &lt;a href=&quot;https://en.wikipedia.org/wiki/Norepinephrine&quot;&gt;Norepinephrine&lt;/a&gt;, Adrenaline&lt;/li&gt;&lt;li&gt;Alertness and Focus towards a thought, action pattern, behavior - This gives you plasticity&lt;/li&gt;&lt;li&gt;Desire or love or fear - either works to give you altertness and focus :)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dopamine&quot;&gt;Dopamine&lt;/a&gt; &lt;em&gt;&amp;quot;puts us on the right path&amp;quot;&lt;/em&gt;. It is given, when we are on the right path. It is not just about the &lt;strong&gt;outcome&lt;/strong&gt;, it is also about the &lt;strong&gt;path&lt;/strong&gt;!&lt;ul&gt;&lt;li&gt;Norepinephrine is also the &amp;quot;substrate&amp;quot; for quitting, dopamine counteracts that and gives you...the second air :)&lt;/li&gt;&lt;li&gt;So, dopamine can give you more room to do duration, path, outcome work.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;However&lt;/strong&gt;, dopamine also tightens our focus, this can lead to addiction&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Addiction&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;a progressive narrowing of the things that give you pleasure. &lt;/li&gt;&lt;li&gt;There is some more on addiction at &lt;strong&gt;1h39min&lt;/strong&gt; - this focusing, narrowing down, also stops you from seeing other possiblities. They see no other choice.&lt;/li&gt;&lt;li&gt;Treating addiction, bringing on change - need to see other possibilities, and this needs reduction of myopic states of mind (dopamine-induced!).&lt;/li&gt;&lt;li&gt;&amp;quot;Dilate the perception&amp;quot;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You need all the three components for new behaviors / neuroplasticity: Acetylcholine, Norepinephrine, Dopamine&lt;/p&gt;&lt;div&gt;Growth Mindset: Anxiety / Agitation / Frustration is a known gate! Those high levels of Adrenalin are necessary to get into growth. This is the entry point and this must be acknowledged.&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Don&amp;#x27;t suppress thoughts, Introduce new thoughts!&lt;/li&gt;&lt;li&gt;Do you manage to reward yourself, step by step?&lt;/li&gt;&lt;li&gt;Do you understand that Adrenaline was always meant to &lt;em&gt;move&lt;/em&gt; you?&lt;/li&gt;&lt;li&gt;sensation, perception, feeling, thought and behavior &amp;lt;- but &lt;strong&gt;really!&lt;/strong&gt; you can run this backwards, too!&lt;/li&gt;&lt;li&gt;Basically, move and the rest will follow&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://davidgoggins.com&quot;&gt;David Goggins&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Get the adrenaline flowing!&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Cold bath!&lt;/li&gt;&lt;li&gt;25-30 deep breaths in a minute, nose in, mouth out!&lt;/li&gt;&lt;li&gt;The eyes dilate and help you to focus on one thing, and your mental focus will follow&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;bring the autonomic nervous system down, if you get lost in too many tasks&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;physiological sigh - 2 inhales, followed by one exhale&lt;/li&gt;&lt;li&gt;diaphragm control - fast or slow&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;focus, de-focus&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;increase focus packs more events / time&lt;/li&gt;&lt;li&gt;decrease focus - panoramic vision - see the horizon. It helps you to reset your focus. Looking at a phone won&amp;#x27;t help! Instagram also requires focus of your eyes. (Save the Norepinephrine for when you need it)&lt;/li&gt;&lt;li&gt;let go - also in meditation :)&lt;/li&gt;&lt;li&gt;Yoga Nidra / Hypnosis for recovering&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/user/MichaelSealey&quot;&gt;Michael Sealey&lt;/a&gt; for hypnosis scripts&lt;/li&gt;&lt;li&gt;trouble falling asleep (1h32min), &lt;ul&gt;&lt;li&gt;Control your perception window&lt;/li&gt;&lt;li&gt;brain state of no duration, path and outcome analysis&lt;/li&gt;&lt;li&gt;walking while letting your mind go - moving &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.emdria.de/emdr/was-ist-emdr/&quot;&gt;EMDR (Eye Movement Desensitization and Reprocessing)&lt;/a&gt; (in relation to managing trauma)&lt;ul&gt;&lt;li&gt;Note: reminds me of the Eye movement in REM?&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Lateral eye movements calm the Amygdala&lt;/li&gt;&lt;li&gt;Expand and Contract your sense of time is &lt;strong&gt;powerful&lt;/strong&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Learn to control your autonomic nervous system!&lt;/div&gt;&lt;h2&gt;About our communication breakdown&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Hearing &amp;amp; listening is only possible if you are calm&lt;/li&gt;&lt;li&gt;Experiments im the 60s showed that people like frustration and mild anger&lt;/li&gt;&lt;li&gt;confirmation bias taps into the dopamine system - I see and hear things differently.&lt;/li&gt;&lt;li&gt;&amp;quot;My ability to recruit you into stress is much more powerful than my ability to recruit you into empathy&amp;quot;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;We have the capacity to control our emotions&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;We are the only species that have neuroplasticity throughout their lifespan&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Own thoughts&lt;/h2&gt;&lt;p&gt;What if the constant focus grabbing of our smartphones make us more myopic and hence make us fail to see the broader picture and make us fail to see the other side?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Resource-based economy]]></title><description><![CDATA[Today, my brother shared two links with me. One is a somewhat sci-fi-ish video based on ideas from a certain  Jacque Fresco , the other is…]]></description><link>https://realfiction.net/2021/01/31/resource-based-economy</link><guid isPermaLink="false">https://realfiction.net/2021/01/31/resource-based-economy</guid><pubDate>Sun, 31 Jan 2021 18:40:00 GMT</pubDate><content:encoded>&lt;p&gt;Today, my brother shared two links with me. One is a somewhat sci-fi-ish video based on ideas from a certain &lt;a href=&quot;https://en.wikipedia.org/wiki/Jacque_Fresco&quot;&gt;Jacque Fresco&lt;/a&gt;, the other is an interview with Jacques Fresco himself. Consider this post a train of thought initiated by these videos.&lt;/p&gt;&lt;div link=&quot;https://www.youtube.com/embed/T9c821s9mjw&quot;&gt;&lt;/div&gt;&lt;figcaption&gt;Technologies of a resource-based economy&lt;/figcaption&gt;&lt;p&gt;It is easy to dismiss things that don&amp;#x27;t exist (yet) as impossible. However, it would be a mistake to do this all too carelessly, for as a humanity we started from zero. All the things that we have beyond our skull were once not around yet.&lt;/p&gt;&lt;p&gt;You can judge the video on its own merits. If it makes you think and start discussions with your peers we&amp;#x27;ve already gained a lot. One thing I&amp;#x27;d like to write about that sounds appealing to some but is riddled with nasty complexities, is the idea of utilizing artificial intelligence to perform far-reaching decisions on how a global community should go forward (as opposed to have politicians do the governing part).&lt;/p&gt;&lt;p&gt;The field of artificial intelligence nowadays is driven by advances in designing as well as training neural networks in various forms. The training is done by us and requires an incredible attention to detail because it is &lt;strong&gt;all too easy to encode human biases&lt;/strong&gt; into the training set and by extension the trained neural network. Take as an example the judicial system, say, in the US. If you use as training data past judgments, you will invariably encode systemic racism towards black communities. Thankfully people in the field are aware and think about how to deal with this, e.g. in this paper on &lt;a href=&quot;https://arxiv.org/pdf/2001.09762.pdf&quot;&gt;Bias in Data-driven AI Systems - An Introductory Survey&lt;/a&gt;.&lt;/p&gt;&lt;div link=&quot;https://www.youtube.com/embed/PIMy0QBSQWo&quot;&gt;&lt;/div&gt;&lt;figcaption&gt;The Venus Project&lt;/figcaption&gt;&lt;p&gt;The interview explains what is meant by a resource-based economy. It does resonate with me as I&amp;#x27;m of the opinion that we&amp;#x27;ve already crossed peak capitalism in that the disadvantages outweigh the benefits. What we see in nature all the time are systems defined by opposing forces. Such systems will usually reach an equilibrium where opposing forces are in balance. &lt;/p&gt;&lt;p&gt;A system that contains a mechanism like compound interest without any opposing force is practically predestinated to spiral out of control at some point and can only be kept at bay with heavy regulation. Even then, like with a pressure cooker for which you keep on the heat for too long, at some point the whole thing ruptures, leaving your kitchen in a mess. Consider all the small and bigger messes we already had due to our financial system. Is it really worth it?&lt;/p&gt;&lt;p&gt;A resource based economy is then a relatively straightforward approach to bring our economical system in tune with a system that has steadily improved over millions of years to utilize the power that flows to us every day from our sun at a high efficiency and which encodes strict rules of equilibrium: These are our resources, nothing more, nothing less.&lt;/p&gt;&lt;p&gt;Jacque requires us to do certain things which, at least at this point in time, I find it extremely hard to imagine how it could be implemented: The requirement to &lt;strong&gt;consider every resource on Earth to belong to all humans regardless of their nation or current location&lt;/strong&gt; as well as for humans to &lt;strong&gt;actually not want boring repetitive jobs and instead go out and learn something new when necessary&lt;/strong&gt;.&lt;/p&gt;&lt;iframe src=&quot;https://giphy.com/embed/JTb7CUYmiqGFqUfuQs&quot; width=&quot;480&quot; height=&quot;390&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;I think those premises require a paradigm shifts that has never been witnessed before and would shake from the ground up our nation-based (which are extensions of tribes) world system as well as the individuals&amp;#x27; belief system that defines an individual&amp;#x27;s status by what they do with the trades they&amp;#x27;ve learned. &lt;/p&gt;&lt;p&gt;Can we indeed expect from every human being the flexibility to redefine themselves if it becomes necessary? &lt;/p&gt;&lt;p&gt;We should also acknowledge, without any emotions or ulterior motives, that the skill level of some humans will be surpassed by certain machines in the near future. That is, we could end up in a situation where some people will not be able to do any job, because any job they could do can be done better by a machine. This line is not even a fixed one for with the increasing ability of machines, this situation will apply to more and more people. What will that mean for them? &lt;/p&gt;&lt;p&gt;As you can see, this raises a lot of questions with me, but that is a good thing :)&lt;/p&gt;&lt;p&gt;As a final note, I would like to say - &lt;strong&gt;technology isn&amp;#x27;t really the problem&lt;/strong&gt;. We can live on this Earth in a sustainable fashion. We can go carbon neutral, we can adapt life itself faster to a changing world than evolution itself has ever been able to do. We could even reverse the harm we&amp;#x27;ve done in the past centuries faster than reforestation could do if we really need to.&lt;/p&gt;&lt;p&gt;The real problem is us - how do we span the dichotomy that even though each of us is a unique ensemble of talents, abilities and beliefs we can only exist in Utopia when each of us is willing to truly accept that &amp;quot;all people are created equal&amp;quot;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Saving music tapes from oblivion]]></title><description><![CDATA[Remember tapes? 2 Sides, usually 60 or 90 minutes, a rich bouquet of noise under your music (of course back then it was  just fine ), record…]]></description><link>https://realfiction.net/2021/01/15/saving-music-tapes-from-oblivion</link><guid isPermaLink="false">https://realfiction.net/2021/01/15/saving-music-tapes-from-oblivion</guid><pubDate>Thu, 14 Jan 2021 23:40:00 GMT</pubDate><content:encoded>&lt;p&gt;Remember tapes? 2 Sides, usually 60 or 90 minutes, a rich bouquet of noise under your music (of course back then it was &lt;em&gt;just fine&lt;/em&gt;), record stuff, copy stuff...in short, freedom. As things go, tape players are dying out. It was time to do something about some tapes in my posession, about 30-40 years old which I don&amp;#x27;t want to be forgotten just yet.&lt;/p&gt;&lt;p&gt;Thankfully, my Mum has a tape player left, and it still works and, most importantly, it has a micro jack output for headphones (another thing dying out 😅).&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/tpe-1.jpg&quot; alt=&quot;My Mum&amp;#x27;s trusty Sony tape player&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;My Mum&amp;#x27;s good old Sony tape player with mini jack output.&lt;/figcaption&gt;&lt;p&gt;With the aid of a Y-cable that I have from &lt;strong&gt;micro jack&lt;/strong&gt; to a &lt;strong&gt;pair of chinch&lt;/strong&gt;, and &lt;strong&gt;2 adapters from chinch to jack&lt;/strong&gt; (still got all those things from my synth music making times - it&amp;#x27;s all junk until it isn&amp;#x27;t), I was able to bring it into the magical Focusrite box I got about 7 years ago. It&amp;#x27;s breaking my heart that Big Sur will not support the &amp;quot;latest&amp;quot; driver of that hardware, which means that my MBP will stay on Catalina for the foreseeable future.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/tpe-2.jpg&quot; alt=&quot;The Saffire Soundbox from 2013&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;Focusrite Saffire Pro 24 DSP (from about 2013).&lt;/figcaption&gt;&lt;p&gt;From there the next step is into &lt;a href=&quot;https://www.ableton.com/en/live/&quot;&gt;Ableton Live&lt;/a&gt;, which is somewhat overpowered for recording a bunch of tapes, but hey, I have the license, so I might as well use it :)&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/tpe-3.jpg&quot; alt=&quot;Ableton Live as the Recorder&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;Ableton Live recording on a 2014 or 15 MBP.&lt;/figcaption&gt;&lt;p&gt;Whether I can do any sensible post processing there I am not sure yet. At least I can cut the songs up and export.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/tpe-4.jpg&quot; alt=&quot;izotope&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;iZotope RX 8 for noise removal etc.&lt;/figcaption&gt;&lt;p&gt;&lt;a href=&quot;www.izotope.com/en/products/rx.htm&quot;&gt;iZotope&amp;#x27;s RX8&lt;/a&gt; I just bought today which for little money supposedly gives you a tool to perform audio repairs like removing noise and the like - and boy, some tapes do need it! Some preliminary experiments look promising, but that kind of software isn&amp;#x27;t always self-explanatory so I&amp;#x27;ll have to play a bit more with it.&lt;/p&gt;&lt;p&gt;Today I recorded the first bunch of tapes, tomorrow the next, saving a couple of valuable (you know, in the sense of crazy memories) recordings into the 21st century, the age of ageless data. &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Don't forget 2020]]></title><description><![CDATA[I thought that when in 5 years time I have forgotten everything about 2020, it would be nice to be able to read up on it again, see if I've…]]></description><link>https://realfiction.net/2021/01/10/dont-forget-2020</link><guid isPermaLink="false">https://realfiction.net/2021/01/10/dont-forget-2020</guid><pubDate>Sun, 10 Jan 2021 21:50:00 GMT</pubDate><content:encoded>&lt;p&gt;I thought that when in 5 years time I have forgotten everything about 2020, it would be nice to be able to read up on it again, see if I&amp;#x27;ve already forgotten everything I&amp;#x27;ve learned again. I am assuming that at least I won&amp;#x27;t have forgotten why it may be worth to keep a few notes on that year that can euphemistically be described as complicated.&lt;/p&gt;&lt;h3&gt;My mind, the big mess&lt;/h3&gt;&lt;p&gt;These days I am thinking that consciousness is a huge entangled mess. I am not even certain what the evolutionary advantage of consciousness is, but it&amp;#x27;s something delicate and massively entangled with the rest of the human being.&lt;/p&gt;&lt;p&gt;In 2020 I had to learn about the brutal effects of the mind condition on your physical well-being. I had to deal with anxiety, I had to deal with depression. I know, other people have to suffer much harder with depression and anxiety, but hey, this is my blog, and I can only write from my perspective. And, future Frank, &lt;strong&gt;don&amp;#x27;t forget&lt;/strong&gt; how shitty you can feel when you are panicked, or anxious, or depressed.&lt;/p&gt;&lt;h3&gt;So I need people after all?&lt;/h3&gt;&lt;p&gt;I am not exactly a huge socializer - but I do enjoy nice talks over a beer, or a walk by the river. I enjoy sharing an experience with somebody outside of my tiny family bubble (not that we were able to share many experiences beyond how to piss each other off when living under the same roof). Sure you can have a nice talk via a video call, but it is not the same. The multitude of sensory input that we usually get from being with someone / some group is simply missing. We can adapt, but it&amp;#x27;s hard to adapt if half your senses are being blind-folded.&lt;/p&gt;&lt;h3&gt;I didn&amp;#x27;t have a clue!&lt;/h3&gt;&lt;p&gt;I have learned so much about Virology, the immune system, and I found it awesome. Biological systems are awesome. How schools regularly fail to transport the fascination of biological systems to its pupils is terrifying. Absolutely shocking. Here twitter can play its strength - follow those that present you with interesting info. Those that stuck with me where Eric Topol and Professor Akiko Iwasaki. Obviously helpful to me are texts written from the perspective of computer scientists - after all, as developers we are building stuff all the time, like human cells, so there is no surprise when there are parallels. See e.g. &lt;a href=&quot;https://berthub.eu/articles/posts/amazing-dna/&quot;&gt;here about DNA&lt;/a&gt; or this really cool write-up on &lt;a href=&quot;https://berthub.eu/articles/posts/reverse-engineering-source-code-of-the-biontech-pfizer-vaccine/&quot;&gt;reverse engineering the source code of the biontech vaccine&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;The spectrum in intelligence of human beings is breathtaking&lt;/h3&gt;&lt;p&gt;This pandemic has shown that we have&lt;/p&gt;&lt;ul&gt;&lt;li&gt;people who believe that the pandemic was caused by Bill Gates for, oh, I don&amp;#x27;t know why and have completely succumbed into a hole into which no light from reality can shine&lt;/li&gt;&lt;li&gt;people who, on the shoulder of giants, have a far reaching understanding of the mechanisms in our body, build a vaccine, test it and roll it out withing 10 months.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I have learned that this was always the case, and you probably get that in every pandemic. You get those that understand to the point of setting up initiatives, those that can more or less follow a sane argument, and those that cannot be reached with reason anymore. &lt;/p&gt;&lt;p&gt;I guess that takes me back to consciousness being a mess.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Authenticate a user with MSAL from a React SPA]]></title><description><![CDATA[The acronyms, oh my! MSAL: Microsoft Authentication Library SPA: Single Page Application AAD: Azure active directory In the  fine tradition…]]></description><link>https://realfiction.net/2020/10/12/authenticate-a-user-with-msal-from-a-react-spa</link><guid isPermaLink="false">https://realfiction.net/2020/10/12/authenticate-a-user-with-msal-from-a-react-spa</guid><pubDate>Mon, 12 Oct 2020 11:30:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;&lt;h4&gt;The acronyms, oh my!&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;MSAL: Microsoft Authentication Library&lt;/li&gt;&lt;li&gt;SPA: Single Page Application&lt;/li&gt;&lt;li&gt;AAD: Azure active directory&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;In the &lt;a href=&quot;/2008/01/30/the-no-frills-bare-bones-example-to-duplex-wcf&quot;&gt;fine tradition&lt;/a&gt; of reducing Microsoft samples to a form that focuses on the feature it tries to explain and highlight, while removing cruft that isn&amp;#x27;t really necessary, here comes the next one.&lt;/p&gt;&lt;p&gt;The original sample this is derived from &lt;a href=&quot;https://github.com/Azure-Samples/ms-identity-javascript-react-spa-dotnetcore-webapi-obo&quot;&gt;resides in the azure-samples repo&lt;/a&gt;. 12 years ago it was sort of enough to show a couple of classes and that&amp;#x27;s it - now that the sample entails a server and a react client with frontend, &lt;a href=&quot;https://github.com/flq/MsIdentityReactSpaBareBones&quot;&gt;it needs its own repository&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The original sample contains a lot of noise related to using a redux store and spreading out what is really happening over several components / actions / reducers / store. I translated this into more contemporary react (no, redux isn&amp;#x27;t and shouldn&amp;#x27;t be your default choice anymore). The actual authentication magic is handled by microsoft&amp;#x27;s own library &lt;a href=&quot;https://www.npmjs.com/package/@azure/msal-browser&quot;&gt;&lt;strong&gt;msal-browser&lt;/strong&gt;&lt;/a&gt; and mostly plays out in the &lt;a href=&quot;https://github.com/flq/MsIdentityReactSpaBareBones/blob/main/client-spa/src/infrastructure/msal.ts&quot;&gt;&amp;quot;useMsal&amp;quot; react hook&lt;/a&gt;. Check out the sign in and how the token is then aquired.&lt;/p&gt;&lt;p&gt;This code will do absolutely zilch for you if you haven&amp;#x27;t done your homework registering the proper Applications connected to your AAD. Some instructions are given in the &lt;a href=&quot;https://github.com/flq/MsIdentityReactSpaBareBones/blob/main/client-spa/README.md&quot;&gt;main readme of the repo&lt;/a&gt;. This overview may also help where to look around:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/assets/azure-msal.jpg&quot; alt=&quot;App registrations inside AAD&quot;/&gt;&lt;/p&gt;&lt;p&gt;Screenshots from azure are omitted because they grow stale at a rate that makes it untenable, but if something&amp;#x27;s completely unclear, let me know.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to typescript: Representing hierarchical state with tuples]]></title><description><![CDATA[For our latest feature in ahead,  messages , the UI is in one of three major states: A couple of iterations and additions later, the mode in…]]></description><link>https://realfiction.net/2020/09/20/how-to-typescript-representing-hierarchical-state-with-tuples</link><guid isPermaLink="false">https://realfiction.net/2020/09/20/how-to-typescript-representing-hierarchical-state-with-tuples</guid><pubDate>Sun, 20 Sep 2020 19:30:00 GMT</pubDate><content:encoded>&lt;p&gt;For our latest feature in ahead, &lt;a href=&quot;https://www.aheadintranet.com/release-notes/09-09-2020&quot;&gt;messages&lt;/a&gt;, the UI is in one of three major states:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingState&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;IDLE&amp;quot;&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;STARTING_CONVERSATION&amp;quot;&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;ACTIVE_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A couple of iterations and additions later, the mode in which there is an active conversation had two sub-states, depending whether you are writing and looking at the latest messages or are browsing older messages. Some UI parts are only really interested in whether there is currently a conversation active or not.&lt;/p&gt;&lt;p&gt;One could expand the state of the UI with an additional property denoting that sub-state:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  mainMode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; MessagingState&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  subMode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;SYNCED&amp;quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;EXPLORING&amp;quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;While this certainly works, there is no quick way to consolidate into the type that the sub-state is only valid for one of the main states and not for the other.&lt;/p&gt;&lt;div&gt;&lt;p&gt;Well, there is. &lt;a href=&quot;/2020/06/14/how-to-typescript-in-react-i-can-haz-better-component-states/&quot;&gt;The last post&lt;/a&gt; dealt with using discriminated unions for the state type as well. This has its own drawbacks, though - dealing with the type can become cumbersome.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;So, here&amp;#x27;s another way to represent the dependency between main and sub-state, namely via tuples:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingState&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;IDLE&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;STARTING_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ACTIVE_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;SYNCED&amp;quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;EXPLORING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is now clear that only one of the main states has two further sub-states. However,
checking against in which state we are can become cumbersome,
as we can&amp;#x27;t just do an equality check of the state value but must rather check against the members of the tuple.&lt;/p&gt;&lt;p&gt;To overcome this, a helper function is introduced:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token generic-function&quot;&gt;&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token constant&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token constant&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  value&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  check&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  check2&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Extract&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; check &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;check2 &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; check2 &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;it accepts&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a first value being a string-tuple with one or two members&lt;/li&gt;&lt;li&gt;A second value that needs to be of the type of the first tuple member&lt;/li&gt;&lt;li&gt;An optional third value that, if given, must correspond to the second tuple member in the context of the first member given &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The way the type of the function is defined allows to &amp;quot;check&amp;quot; the checks one writes down at compile-time. That is, the function only supports calls that correspond to valid states:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;IDLE&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; MessagingState&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;IDLE&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Compiles&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;BLA&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Doesn&amp;#x27;t Compile&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;ACTIVE_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Compiles&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;ACTIVE_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;SYNCED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Compiles&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;ACTIVE_CONVERSATION&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;BLA&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Doesn&amp;#x27;t Compile&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;IDLE&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;SYNCED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Doesn&amp;#x27;t Compile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this kind of state definition, UI code can now quickly check whether some state is given in general, or can make a stricter check whether some sub-state is currently set or not.&lt;/p&gt;&lt;p&gt;If you want to play around with this code, &lt;a href=&quot;https://www.typescriptlang.org/play?ts=4.0.2#code/C4TwDgpgBAysCGxoF4oG0BEBJAIgGQFEMBdKAH3QxgBUBBAJWqwDkBxAfWYIHV2BhAPLMAagXoxaTISXKU+ACVrMuedrT5NRGADRQqATWZ8CODLIwEAGgAU8A+i1YkA3ACgAxgHsAdgGdgUP6IEACMUKiYuIQy8L6wCEjOUAD0yVACANIePv6BCRAATOFyisoEquqaRLoWNnYObDFxcMFJqelZ7V5+AUFIAMzFkfjVela29o5N8a0paTieEHHengFeALZgAJYANhCurgBmAK7e7sBbPlDriO4AFksAPNRQEAAeSN4AJnFo-gBOW28AHNSBQ-sBASDdACgaDdJZXh8IN84tQ0AAGYi6fRIz4-KDokLEAB8AApXFAoAA3eA7Y4QABchO0lKg9wg7gA1szLKyqRzuQUAPzMggff7wc7PXRoPlQfSktDE1wASigAG82f8IMBjv9vDS6QzMaRkOb2Q9uVAAGQ2qBkwVcorCy2c53hC20+kQZWkZmQhmqtwAXwO3Vyhy2-1yqBuwA5vjJfVCNSiRGDcyggf2Ed6nJ8X2K8cTyfyBRqCiUKjUGiwWkzqRz2R62bu0aLcduDyTKYreirZQqda0NRghmMpkbyUOdN8+1c7WoDygh08Ox2ngA7nCoFs4nSt-AQHFZzt53vDcAV-9Thd1hBdAAjY4BLYBL6LXzeADkAQg1IouynibLsEAAHSLmkearp4+rXsW3ZLGWwT9tgIw6Ho45GCYGDBuGOTrhBm7AmSGpRjGwAwgW3y6NeHZQCGwZAA&quot;&gt;you can visit this playground&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to typescript in react: I can haz better component states!]]></title><description><![CDATA[After a crazy long hiatus in getting something written I would like to give you an update on how Typescript and react is being used while…]]></description><link>https://realfiction.net/2020/06/14/how-to-typescript-in-react-i-can-haz-better-component-states</link><guid isPermaLink="false">https://realfiction.net/2020/06/14/how-to-typescript-in-react-i-can-haz-better-component-states</guid><pubDate>Sun, 14 Jun 2020 17:30:00 GMT</pubDate><content:encoded>&lt;p&gt;After a crazy long hiatus in getting something written I would like to give you an update on how Typescript and react is being used while building the &lt;a href=&quot;https://aheadintranet.com&quot;&gt;ahead&lt;/a&gt; UI. The example here is inspired by an upcoming feature of the ahead
intranet which is always nice to have around - a simple poll to get quick feedback on a question.&lt;/p&gt;&lt;p&gt;Given these helpers here:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SimpleAction&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token generic-function&quot;&gt;&lt;span class=&quot;token function&quot;&gt;switchDefaultGuard&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; action&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;never&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can define a &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#union-types&quot;&gt;Typescript Union Type&lt;/a&gt; to be used in a reducer of your choice:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PollAction&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; SimpleAction&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; pollId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; SimpleAction&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; poll&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Poll &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; SimpleAction&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;VOTE_PLACED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; PollChoice &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What this means is that in a reducer you can define a switch statement that is compile-time safe with regard to the structure of handled actions as well as whether you&amp;#x27;re handling all cases:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;pollStateReducer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; PollState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; action&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; PollEvent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; PollState &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state
        mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        pollId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pollId
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;poll
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;VOTE_PLACED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choice
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;switchDefaultGuard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;so far, so &lt;em&gt;been there, done that&lt;/em&gt;. But, why not using a union type for the UI state as well? After all, a certain piece of UI is often in one of several states in which different values may be relevant at a time. Let&amp;#x27;s try this out - The Poll component may be in one of two different states: &lt;strong&gt;loading&lt;/strong&gt; and &lt;strong&gt;unvoted state&lt;/strong&gt;.&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PollState&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; question&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    pollId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/span&gt;
    choices&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Choice&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; PollChoice
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What does the state tell us?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;In any mode, a question is available&lt;/li&gt;&lt;li&gt;In the loading mode, there is a poll id&lt;/li&gt;&lt;li&gt;In the mode where the user hasn&amp;#x27;t voted, there is a list of choices and the current choice taken&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This is only a subset of the set of possible states that a poll component will sensibly display, but it should be enough for the sake of this post.&lt;/p&gt;&lt;p&gt;In our react component we can render the UI based on the mode-property of the state:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;PollComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;/* Stuff like useReducer or similar */&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mode&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_LOADING&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;Here we have the &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pollId&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;Here we have &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; and our current choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choice&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;
      
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sadly, we &lt;a href=&quot;https://esdiscuss.org/topic/proposal-switch-expressions&quot;&gt;do not have switch expressions in js/ts&lt;/a&gt;, so we create a function and call it straight away to get a value.
You can see that based on the discriminating mode-property, we get access to those parts of the state that are properly defined in a given mode. This gives you less runtime failure modes and more type-checking.&lt;/p&gt;&lt;p&gt;This is all fairly nice, but there&amp;#x27;s always a sour taste - I jumped some problems in this kind of setup. Let&amp;#x27;s revisit the reducer that handles the &lt;strong&gt;VOTE_PLACED&lt;/strong&gt; action. There, the type of the &lt;code class=&quot;language-text&quot;&gt;state&lt;/code&gt; argument will be &lt;code class=&quot;language-text&quot;&gt;PollState&lt;/code&gt; - this isn&amp;#x27;t enough to specify the return value from your function. In order to be able to define it, Typescript must know which part of the union type you are defining, therefore you need to respecify the mode:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;VOTE_PLACED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choice
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;so far, so cute - but we&amp;#x27;re still not there yet. The &lt;code class=&quot;language-text&quot;&gt;state&lt;/code&gt; is not constrained enough to be usable as a spread, because there are valid PollState sub-states that may have the &lt;code class=&quot;language-text&quot;&gt;choices&lt;/code&gt;-property missing, but which is nonetheless mandatory in the state object we are constructing. What we want is telling the compiler that our state is already of the type where &lt;strong&gt;mode = &amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/strong&gt;. How can we achieve that? &lt;code class=&quot;language-text&quot;&gt;Extract&lt;/code&gt; to the rescue!&lt;/p&gt;&lt;p&gt;Extract is a built-in type which we can use to extract the proper sub-type from the discriminated union. It&amp;#x27;s signature is remarkably simple, the explanation also:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Extract from T those types that are assignable to U
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Extract&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token constant&quot;&gt;U&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;never&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use it e.g. like such:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PollNotVoted&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Extract&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;PollState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;mode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;POLL_NOT_VOTED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which gives us the final version that compiles of the case-branch in the reducer above:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;quot;VOTE_PLACED&amp;quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; PollNotVoted&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    choice&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;choice
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the cast has now removed the need to specify the mode in the return explicitly. The casted spread ensures that you stay in the proper sub-type of the discriminated union.&lt;/p&gt;&lt;p&gt;The basic idea that this code expressed is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Think about the different modes that your UI can be in&lt;/li&gt;&lt;li&gt;Think about what the state encompasses in each mode&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These are things that you&amp;#x27;d probably do anyway - but now, if you feel like it, encode it in your type :)&lt;/p&gt;</content:encoded></item></channel></rss>