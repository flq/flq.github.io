{"version":3,"sources":["webpack:///./src/templates/articleTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_ref","data","pageContext","markdownRemark","frontmatter","html","previous","next","a","createElement","title","meta","name","content","tags","join","className","date","map","t","key","to","dangerouslySetInnerHTML","__html","href","fields","slug","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Sidebar","description","react_default","gatsby_browser_entry","Layout","Fragment","Helmet_default","site","siteMetadata","lang","rel","type","sidebar","_2363664672","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAQ,EAAAE,GAAAE,EAAAZ,EAAA,KAKe,SAASI,EAATS,GAGZ,IAFDC,EAECD,EAFDC,KACAC,EACCF,EADDE,YAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAClB,OACEb,EAAAc,EAAAC,cAACV,EAAA,EAAD,KACEL,EAAAc,EAAAC,cAACX,EAAAU,EAAD,CACEE,MAAON,EAAYM,MACnBC,KAAM,CAAC,CAAEC,KAAM,WAAYC,QAAST,EAAYU,KAAKC,KAAK,UAG5DrB,EAAAc,EAAAC,cAAA,eACEf,EAAAc,EAAAC,cAAA,UAAKL,EAAYM,OACjBhB,EAAAc,EAAAC,cAAA,OAAKO,UAAU,aACbtB,EAAAc,EAAAC,cAAA,YAAOL,EAAYa,MADrB,MAEEvB,EAAAc,EAAAC,cAAA,QAAMO,UAAU,gBACbZ,EAAYU,KAAKI,IAAI,SAAAC,GAAC,OACrBzB,EAAAc,EAAAC,cAACb,EAAA,KAAD,CAAMwB,IAAKD,EAAGH,UAAU,oBAAoBK,GAAE,SAAWF,GACtDA,OAKTzB,EAAAc,EAAAC,cAAA,OACEO,UAAU,oBACVM,wBAAyB,CAAEC,OAAQlB,KAErCX,EAAAc,EAAAC,cAAA,OAAKO,UAAU,sBACZV,GACCZ,EAAAc,EAAAC,cAAA,KAAGO,UAAU,+BAA+BQ,KAAMlB,EAASmB,OAAOC,MAC/DpB,EAASF,YAAYM,OAGzBH,GACCb,EAAAc,EAAAC,cAAA,KAAGO,UAAU,2BAA2BQ,KAAMjB,EAAKkB,OAAOC,MACvDnB,EAAKH,YAAYM,UASzB,IAAMlB,EAAS,+CCpDtBL,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAsC,IAAAxC,EAAAG,EAAAD,EAAA,uCAAAuC,IAAAzC,EAAAG,EAAAD,EAAA,gCAAAwC,IAAA,IAAApC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAqC,EAAA3C,EAAA,GAAA4C,EAAA5C,EAAAQ,EAAAmC,GAAAE,EAAA7C,EAAA,KAAA8C,EAAA9C,EAAAQ,EAAAqC,GAAA7C,EAAAG,EAAAD,EAAA,yBAAA4C,EAAAzB,IAAArB,EAAAG,EAAAD,EAAA,+BAAA2C,EAAA,aAAA7C,EAAAG,EAAAD,EAAA,6BAAA2C,EAAA,WAAA7C,EAAAG,EAAAD,EAAA,yBAAA2C,EAAA,OAAA7C,EAAAG,EAAAD,EAAA,4BAAA2C,EAAA,UAAA7C,EAAAG,EAAAD,EAAA,+BAAA2C,EAAA,iBAAAE,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAAQ,EAAAuC,GAAA/C,EAAAG,EAAAD,EAAA,iCAAA8C,EAAA3B,IAAA,IAAA4B,EAAAjD,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAA+C,EAAA,IAYA,IAAMR,EAAqBS,IAAMC,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvB7C,EAAAc,EAAAC,cAACmB,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMtC,MACLwC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOzC,MAEtDsC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMtC,KAAOsC,EAAMtC,KAAKA,KAAOwC,EAAgBF,EAAMG,OAAOzC,MAGvDP,EAAAc,EAAAC,cAAA,uCAaf,SAASkB,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtB7C,KAAM8C,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAzD,GAAkB,IAAf0D,EAAe1D,EAAf0D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOzB,IAAM5B,cAAcsD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,uWCNAW,+BAZC,SAAApE,GAAA,IAAGU,EAAHV,EAAGU,MAAO2D,EAAVrE,EAAUqE,YAAV,OACdC,EAAA9D,EAAAC,cAAA,OAAKO,UAAU,WACbsD,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,KAAGO,UAAU,qBAAqBQ,KAAK,KAAKd,IAE9C4D,EAAA9D,EAAAC,cAAA,SAAI4D,GACJC,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAC8D,EAAA,KAAD,CAAMlD,GAAG,SAAT,YCEAmD,EAAS,SAAAxE,GAAA,IAAG4C,EAAH5C,EAAG4C,SAAH,OACb0B,EAAA9D,EAAAC,cAAC8D,EAAA,YAAD,CACE7B,MAAK,aAULC,OAAQ,SAAA1C,GAAI,OACVqE,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAiE,SAAA,KACEH,EAAA9D,EAAAC,cAACiE,EAAAlE,EAAD,CACEE,MAAOT,EAAK0E,KAAKC,aAAalE,MAC9BC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASZ,EAAK0E,KAAKC,aAAaP,eAGzDC,EAAA9D,EAAAC,cAAA,QAAMoE,KAAK,OACXP,EAAA9D,EAAAC,cAAA,QAAMe,KAAK,wDAAwDsD,IAAI,aAAaC,KAAK,cAE3FT,EAAA9D,EAAAC,cAAA,OAAKO,UAAU,aACbsD,EAAA9D,EAAAC,cAAA,OAAKO,UAAU,OACbsD,EAAA9D,EAAAC,cAAA,OAAKO,UAAU,4BACbsD,EAAA9D,EAAAC,cAACuE,EAAD,CACEtE,MAAOT,EAAK0E,KAAKC,aAAalE,MAC9B2D,YAAapE,EAAK0E,KAAKC,aAAaP,eAGxCC,EAAA9D,EAAAC,cAAA,OAAKO,UAAU,gBAAgB4B,OA9BzC3C,KAAAgF,KAsCFT,EAAO1B,UAAY,CACjBF,SAAUG,IAAUmC,KAAKhC,YAGZsB","file":"component---src-templates-article-template-js-be53a177849bae724710.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  pageContext,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const { previous, next } = pageContext\n  return (\n    <Layout>\n      <Helmet\n        title={frontmatter.title}\n        meta={[{ name: 'keywords', content: frontmatter.tags.join(', ') }]}\n      />\n\n      <article>\n        <h1>{frontmatter.title}</h1>\n        <div className=\"page-info\">\n          <span>{frontmatter.date}</span> in\n          <span className=\"article-tags\">\n            {frontmatter.tags.map(t => (\n              <Link key={t} className=\"article-tags--tag\" to={`/tags/${t}`}>\n                {t}\n              </Link>\n            ))}\n          </span>\n        </div>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <div className=\"article-pagination\">\n          {previous && (\n            <a className=\"article-pagination--previous\" href={previous.fields.slug}>\n              {previous.frontmatter.title}\n            </a>\n          )}\n          {next && (\n            <a className=\"article-pagination--next\" href={next.fields.slug}>\n              {next.frontmatter.title}\n            </a>\n          )}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        tags\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from \"gatsby\"\n\nconst Sidebar = ({ title, description }) => (\n  <div className=\"sidebar\">\n    <h1>\n      <a className=\"sidebar--sitetitle\" href=\"/\">{title}</a>\n    </h1>\n    <p>{description}</p>\n    <nav>\n      <Link to=\"/tags\">Tags</Link>\n    </nav>\n  </div>\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport './normalize.css'\nimport './skeleton.css'\nimport './syntax.css'\nimport './own.css'\n\nimport Sidebar from './sidebar'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n          ]}\n        >\n          <html lang=\"en\" />\n          <link href=\"//fonts.googleapis.com/css?family=Raleway:400,300,600\" rel=\"stylesheet\" type=\"text/css\"></link>\n        </Helmet>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"two columns right-padded\">\n              <Sidebar\n                title={data.site.siteMetadata.title}\n                description={data.site.siteMetadata.description}\n              />\n            </div>\n            <div className=\"nine columns\">{children}</div>\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}