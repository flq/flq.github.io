{"version":3,"sources":["webpack:///./src/templates/tagTemplate.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_ref","data","pageContext","edges","allMarkdownRemark","header","tag","a","createElement","title","to","map","_ref2","node","key","fields","slug","frontmatter"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAQ,EAAAE,GAAAE,EAAAZ,EAAA,KAKe,SAASI,EAATS,GAAyC,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,YAC/BC,EAAUF,EAAKG,kBAAfD,MAEFE,EAAM,oBADIH,EAARI,IACI,IACZ,OACEZ,EAAAa,EAAAC,cAACT,EAAA,EAAD,KACEL,EAAAa,EAAAC,cAACV,EAAAS,EAAD,CAAQE,MAAOJ,IACfX,EAAAa,EAAAC,cAAA,UAAKH,GACLX,EAAAa,EAAAC,cAAA,UAAId,EAAAa,EAAAC,cAACZ,EAAA,KAAD,CAAMc,GAAG,SAAT,eACJhB,EAAAa,EAAAC,cAAA,UACGL,EAAMQ,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTnB,EAAAa,EAAAC,cAAA,MAAIM,IAAKD,EAAKE,OAAOC,MACnBtB,EAAAa,EAAAC,cAACZ,EAAA,KAAD,CAAMc,GAAIG,EAAKE,OAAOC,MAAOH,EAAKI,YAAYR,YAQnD,IAAMjB,EAAS","file":"component---src-templates-tag-template-js-827eb0660badd62ebbc1.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\n\nexport default function Template({ data, pageContext }) {\n  const { edges } = data.allMarkdownRemark\n  const { tag } = pageContext\n  const header = `Articles tagged «${tag}»`\n  return (\n    <Layout>\n      <Helmet title={header} />\n      <h1>{header}</h1>\n      <h4><Link to=\"/tags\">&#8612; All Tags</Link></h4>\n      <ul>\n        {edges.map(({ node }) => (\n          <li key={node.fields.slug}>\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}